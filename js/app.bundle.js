(()=>{var Ba=Object.defineProperty,Ga=(e,t)=>()=>(t||(t={exports:{}},e(t.exports,t)),t.exports),vu=e=>Ba(e,"__esModule",{value:!0}),yu=(e,t)=>{vu(e);for(var n in t)Ba(e,n,{get:t[n],enumerable:!0})};var nr=Ga((po,mo)=>{var je=je||function(){var e=[];return{getAll:function(){return e},removeAll:function(){e=[]},add:function(t){e.push(t)},remove:function(t){var n=e.indexOf(t);n!==-1&&e.splice(n,1)},update:function(t,n){if(e.length===0)return!1;var i=0;for(t=t!==void 0?t:je.now();i<e.length;)e[i].update(t)||n?i++:e.splice(i,1);return!0}}}();typeof window=="undefined"&&typeof process!="undefined"?je.now=function(){var e=process.hrtime();return e[0]*1e3+e[1]/1e6}:typeof window!="undefined"&&window.performance!==void 0&&window.performance.now!==void 0?je.now=window.performance.now.bind(window.performance):Date.now!==void 0?je.now=Date.now:je.now=function(){return new Date().getTime()};je.Tween=function(e){var t=e,n={},i={},r={},s=1e3,o=0,a,c=!1,l=!1,h=!1,u=0,f=null,d=je.Easing.Linear.None,m=je.Interpolation.Linear,y=[],v=null,g=!1,p=null,_=null,E=null;this.to=function(A,b){return i=A,b!==void 0&&(s=b),this},this.start=function(A){je.add(this),l=!0,g=!1,f=A!==void 0?A:je.now(),f+=u;for(var b in i){if(i[b]instanceof Array){if(i[b].length===0)continue;i[b]=[t[b]].concat(i[b])}if(t[b]===void 0)continue;n[b]=t[b],n[b]instanceof Array===!1&&(n[b]*=1),r[b]=n[b]||0}return this},this.stop=function(){return l?(je.remove(this),l=!1,E!==null&&E.call(t,t),this.stopChainedTweens(),this):this},this.end=function(){return this.update(f+s),this},this.stopChainedTweens=function(){for(var A=0,b=y.length;A<b;A++)y[A].stop()},this.delay=function(A){return u=A,this},this.repeat=function(A){return o=A,this},this.repeatDelay=function(A){return a=A,this},this.yoyo=function(A){return c=A,this},this.easing=function(A){return d=A,this},this.interpolation=function(A){return m=A,this},this.chain=function(){return y=arguments,this},this.onStart=function(A){return v=A,this},this.onUpdate=function(A){return p=A,this},this.onComplete=function(A){return _=A,this},this.onStop=function(A){return E=A,this},this.update=function(A){var b,C,j;if(A<f)return!0;g===!1&&(v!==null&&v.call(t,t),g=!0),C=(A-f)/s,C=C>1?1:C,j=d(C);for(b in i){if(n[b]===void 0)continue;var N=n[b]||0,ne=i[b];ne instanceof Array?t[b]=m(ne,j):(typeof ne=="string"&&(ne.charAt(0)==="+"||ne.charAt(0)==="-"?ne=N+parseFloat(ne):ne=parseFloat(ne)),typeof ne=="number"&&(t[b]=N+(ne-N)*j))}if(p!==null&&p.call(t,j),C===1)if(o>0){isFinite(o)&&o--;for(b in r){if(typeof i[b]=="string"&&(r[b]=r[b]+parseFloat(i[b])),c){var z=r[b];r[b]=i[b],i[b]=z}n[b]=r[b]}return c&&(h=!h),a!==void 0?f=A+a:f=A+u,!0}else{_!==null&&_.call(t,t);for(var q=0,W=y.length;q<W;q++)y[q].start(f+s);return!1}return!0}};je.Easing={Linear:{None:function(e){return e}},Quadratic:{In:function(e){return e*e},Out:function(e){return e*(2-e)},InOut:function(e){return(e*=2)<1?.5*e*e:-.5*(--e*(e-2)-1)}},Cubic:{In:function(e){return e*e*e},Out:function(e){return--e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e:.5*((e-=2)*e*e+2)}},Quartic:{In:function(e){return e*e*e*e},Out:function(e){return 1- --e*e*e*e},InOut:function(e){return(e*=2)<1?.5*e*e*e*e:-.5*((e-=2)*e*e*e-2)}},Quintic:{In:function(e){return e*e*e*e*e},Out:function(e){return--e*e*e*e*e+1},InOut:function(e){return(e*=2)<1?.5*e*e*e*e*e:.5*((e-=2)*e*e*e*e+2)}},Sinusoidal:{In:function(e){return 1-Math.cos(e*Math.PI/2)},Out:function(e){return Math.sin(e*Math.PI/2)},InOut:function(e){return .5*(1-Math.cos(Math.PI*e))}},Exponential:{In:function(e){return e===0?0:Math.pow(1024,e-1)},Out:function(e){return e===1?1:1-Math.pow(2,-10*e)},InOut:function(e){return e===0?0:e===1?1:(e*=2)<1?.5*Math.pow(1024,e-1):.5*(-Math.pow(2,-10*(e-1))+2)}},Circular:{In:function(e){return 1-Math.sqrt(1-e*e)},Out:function(e){return Math.sqrt(1- --e*e)},InOut:function(e){return(e*=2)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)}},Elastic:{In:function(e){return e===0?0:e===1?1:-Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI)},Out:function(e){return e===0?0:e===1?1:Math.pow(2,-10*e)*Math.sin((e-.1)*5*Math.PI)+1},InOut:function(e){return e===0?0:e===1?1:(e*=2,e<1?-.5*Math.pow(2,10*(e-1))*Math.sin((e-1.1)*5*Math.PI):.5*Math.pow(2,-10*(e-1))*Math.sin((e-1.1)*5*Math.PI)+1)}},Back:{In:function(e){var t=1.70158;return e*e*((t+1)*e-t)},Out:function(e){var t=1.70158;return--e*e*((t+1)*e+t)+1},InOut:function(e){var t=1.70158*1.525;return(e*=2)<1?.5*(e*e*((t+1)*e-t)):.5*((e-=2)*e*((t+1)*e+t)+2)}},Bounce:{In:function(e){return 1-je.Easing.Bounce.Out(1-e)},Out:function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},InOut:function(e){return e<.5?je.Easing.Bounce.In(e*2)*.5:je.Easing.Bounce.Out(e*2-1)*.5+.5}}};je.Interpolation={Linear:function(e,t){var n=e.length-1,i=n*t,r=Math.floor(i),s=je.Interpolation.Utils.Linear;return t<0?s(e[0],e[1],i):t>1?s(e[n],e[n-1],n-i):s(e[r],e[r+1>n?n:r+1],i-r)},Bezier:function(e,t){for(var n=0,i=e.length-1,r=Math.pow,s=je.Interpolation.Utils.Bernstein,o=0;o<=i;o++)n+=r(1-t,i-o)*r(t,o)*e[o]*s(i,o);return n},CatmullRom:function(e,t){var n=e.length-1,i=n*t,r=Math.floor(i),s=je.Interpolation.Utils.CatmullRom;return e[0]===e[n]?(t<0&&(r=Math.floor(i=n*(1+t))),s(e[(r-1+n)%n],e[r],e[(r+1)%n],e[(r+2)%n],i-r)):t<0?e[0]-(s(e[0],e[0],e[1],e[1],-i)-e[0]):t>1?e[n]-(s(e[n],e[n],e[n-1],e[n-1],i-n)-e[n]):s(e[r?r-1:0],e[r],e[n<r+1?n:r+1],e[n<r+2?n:r+2],i-r)},Utils:{Linear:function(e,t,n){return(t-e)*n+e},Bernstein:function(e,t){var n=je.Interpolation.Utils.Factorial;return n(e)/n(t)/n(e-t)},Factorial:function(){var e=[1];return function(t){var n=1;if(e[t])return e[t];for(var i=t;i>1;i--)n*=i;return e[t]=n,n}}(),CatmullRom:function(e,t,n,i,r){var s=(n-e)*.5,o=(i-t)*.5,a=r*r,c=r*a;return(2*t-2*n+s+o)*c+(-3*t+3*n-2*s-o)*a+s*r+t}}};(function(e){typeof define=="function"&&define.amd?define([],function(){return je}):typeof mo!="undefined"&&typeof po=="object"?mo.exports=je:e!==void 0&&(e.TWEEN=je)})(po)});var ka=Ga(xu=>{yu(xu,{Main:()=>go});class go{constructor(){this._model=new Ha();const e=new URLSearchParams(window.location.search);this._sceneManager=new Ua(e.get("developerMode")==="true")}get sceneManager(){return this._sceneManager}get model(){return this._model}}const Uv=new go()});Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e});Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e});"name"in Function.prototype===!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");const t=Object(e);for(let n=1;n<arguments.length;n++){const i=arguments[n];if(i!=null)for(const r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t});const bu="120",_u=0,za=1,wu=2,Va=1,Mu=2,ir=3,oi=0,st=1,ai=2,Wa=1,rr=0,sr=1,ja=2,qa=3,Xa=4,Tu=5,ci=100,Eu=101,Su=102,Ya=103,Za=104,Au=200,Lu=201,Ru=202,Cu=203,Ja=204,Ka=205,Pu=206,Iu=207,Du=208,Ou=209,Fu=210,Nu=0,Bu=1,Gu=2,vo=3,Uu=4,Hu=5,ku=6,zu=7,Qr=0,Vu=1,Wu=2,or=0,ju=1,qu=2,Xu=3,Yu=4,Zu=5,yo=300,$r=301,es=302,xo=303,bo=304,ts=306,ns=307,xn=1e3,nt=1001,li=1002,it=1003,ar=1004,cr=1005,Ze=1006,is=1007,bn=1008,_o=1009,Ju=1010,Ku=1011,rs=1012,Qu=1013,ss=1014,_n=1015,os=1016,$u=1017,eh=1018,th=1019,lr=1020,nh=1021,tn=1022,Ft=1023,ih=1024,rh=1025,ui=1026,ur=1027,sh=1028,oh=1029,ah=1030,ch=1031,lh=1032,uh=1033,Qa=33776,$a=33777,ec=33778,tc=33779,nc=35840,ic=35841,rc=35842,sc=35843,hh=36196,oc=37492,ac=37496,dh=37808,fh=37809,ph=37810,mh=37811,gh=37812,vh=37813,yh=37814,xh=37815,bh=37816,_h=37817,wh=37818,Mh=37819,Th=37820,Eh=37821,Sh=36492,Ah=37840,Lh=37841,Rh=37842,Ch=37843,Ph=37844,Ih=37845,Dh=37846,Oh=37847,Fh=37848,Nh=37849,Bh=37850,Gh=37851,Uh=37852,Hh=37853,kh=2200,zh=2201,Vh=2202,hi=2300,Gn=2301,wo=2302,di=2400,fi=2401,as=2402,Mo=2500,cc=2501,Wh=0,lc=1,To=2,pi=3e3,mi=3001,cs=3007,uc=3002,jh=3003,hc=3004,dc=3005,fc=3006,qh=3200,Xh=3201,wn=0,Yh=1,Eo=7680,Zh=519,ls=35044,hr=35048,pc="300 es";function Nt(){}Object.assign(Nt.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;const n=this._listeners,i=n[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}},dispatchEvent:function(e){if(this._listeners===void 0)return;const t=this._listeners,n=t[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,e)}}});const ot=[];for(let e=0;e<256;e++)ot[e]=(e<16?"0":"")+e.toString(16);let us=1234567;const Ee={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0,r=ot[e&255]+ot[e>>8&255]+ot[e>>16&255]+ot[e>>24&255]+"-"+ot[t&255]+ot[t>>8&255]+"-"+ot[t>>16&15|64]+ot[t>>24&255]+"-"+ot[n&63|128]+ot[n>>8&255]+"-"+ot[n>>16&255]+ot[n>>24&255]+ot[i&255]+ot[i>>8&255]+ot[i>>16&255]+ot[i>>24&255];return r.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return e!==void 0&&(us=e%2147483647),us=us*16807%2147483647,(us-1)/2147483646},degToRad:function(e){return e*Ee.DEG2RAD},radToDeg:function(e){return e*Ee.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),c=o(n/2),l=s((t+i)/2),h=o((t+i)/2),u=s((t-i)/2),f=o((t-i)/2),d=s((i-t)/2),m=o((i-t)/2);switch(r){case"XYX":e.set(a*h,c*u,c*f,a*l);break;case"YZY":e.set(c*f,a*h,c*u,a*l);break;case"ZXZ":e.set(c*u,c*f,a*h,a*l);break;case"XZX":e.set(a*h,c*m,c*d,a*l);break;case"YXY":e.set(c*d,a*h,c*m,a*l);break;case"ZYZ":e.set(c*m,c*d,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class ${constructor(e=0,t=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){const e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,s=this.y-e.y;return this.x=r*n-s*i+e.x,this.y=r*i+s*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class vt{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,s,o,a,c){const l=this.elements;return l[0]=e,l[1]=i,l[2]=o,l[3]=t,l[4]=r,l[5]=a,l[6]=n,l[7]=s,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[3],a=n[6],c=n[1],l=n[4],h=n[7],u=n[2],f=n[5],d=n[8],m=i[0],y=i[3],v=i[6],g=i[1],p=i[4],_=i[7],E=i[2],A=i[5],b=i[8];return r[0]=s*m+o*g+a*E,r[3]=s*y+o*p+a*A,r[6]=s*v+o*_+a*b,r[1]=c*m+l*g+h*E,r[4]=c*y+l*p+h*A,r[7]=c*v+l*_+h*b,r[2]=u*m+f*g+d*E,r[5]=u*y+f*p+d*A,r[8]=u*v+f*_+d*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],s=e[4],o=e[5],a=e[6],c=e[7],l=e[8];return t*s*l-t*o*c-n*r*l+n*o*a+i*r*c-i*s*a}getInverse(e,t){t!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");const n=e.elements,i=this.elements,r=n[0],s=n[1],o=n[2],a=n[3],c=n[4],l=n[5],h=n[6],u=n[7],f=n[8],d=f*c-l*u,m=l*h-f*a,y=u*a-c*h,v=r*d+s*m+o*y;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/v;return i[0]=d*g,i[1]=(o*u-f*s)*g,i[2]=(l*s-o*c)*g,i[3]=m*g,i[4]=(f*r-o*h)*g,i[5]=(o*a-l*r)*g,i[6]=y*g,i[7]=(s*h-u*r)*g,i[8]=(c*r-s*a)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).getInverse(this).transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,s,o){const a=Math.cos(r),c=Math.sin(r);this.set(n*a,n*c,-n*(a*s+c*o)+s+e,-i*c,i*a,-i*(-c*s+a*o)+o+t,0,0,1)}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],s=i[3],o=i[6],a=i[1],c=i[4],l=i[7];return i[0]=t*r+n*a,i[3]=t*s+n*c,i[6]=t*o+n*l,i[1]=-n*r+t*a,i[4]=-n*s+t*c,i[7]=-n*o+t*l,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t){t===void 0&&(t=0);for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}let gi;const Un={getDataURL:function(e){if(/^data:/i.test(e.src))return e.src;if(typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{gi===void 0&&(gi=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),gi.width=e.width,gi.height=e.height;const n=gi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=gi}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}};let Jh=0;function Ue(e,t,n,i,r,s,o,a,c,l){Object.defineProperty(this,"id",{value:Jh++}),this.uuid=Ee.generateUUID(),this.name="",this.image=e!==void 0?e:Ue.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Ue.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:nt,this.wrapT=i!==void 0?i:nt,this.magFilter=r!==void 0?r:Ze,this.minFilter=s!==void 0?s:bn,this.anisotropy=c!==void 0?c:1,this.format=o!==void 0?o:Ft,this.internalFormat=null,this.type=a!==void 0?a:_o,this.offset=new $(0,0),this.repeat=new $(1,1),this.center=new $(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vt(),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:pi,this.version=0,this.onUpdate=null}Ue.DEFAULT_IMAGE=void 0;Ue.DEFAULT_MAPPING=yo;Ue.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Ue,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Ee.generateUUID()),!t&&e.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)r.push(Un.getDataURL(i[s]))}else r=Un.getDataURL(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==yo)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case xn:e.x=e.x-Math.floor(e.x);break;case nt:e.x=e.x<0?0:1;break;case li:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case xn:e.y=e.y-Math.floor(e.y);break;case nt:e.y=e.y<0?0:1;break;case li:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}});Object.defineProperty(Ue.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});class He{constructor(e=0,t=0,n=0,i=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i+s[12]*r,this.y=s[1]*t+s[5]*n+s[9]*i+s[13]*r,this.z=s[2]*t+s[6]*n+s[10]*i+s[14]*r,this.w=s[3]*t+s[7]*n+s[11]*i+s[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const s=.01,o=.1,a=e.elements,c=a[0],l=a[4],h=a[8],u=a[1],f=a[5],d=a[9],m=a[2],y=a[6],v=a[10];if(Math.abs(l-u)<s&&Math.abs(h-m)<s&&Math.abs(d-y)<s){if(Math.abs(l+u)<o&&Math.abs(h+m)<o&&Math.abs(d+y)<o&&Math.abs(c+f+v-3)<o)return this.set(1,0,0,0),this;t=Math.PI;const p=(c+1)/2,_=(f+1)/2,E=(v+1)/2,A=(l+u)/4,b=(h+m)/4,C=(d+y)/4;return p>_&&p>E?p<s?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(p),i=A/n,r=b/n):_>E?_<s?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(_),n=A/i,r=C/i):E<s?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=b/r,i=C/r),this.set(n,i,r,t),this}let g=Math.sqrt((y-d)*(y-d)+(h-m)*(h-m)+(u-l)*(u-l));return Math.abs(g)<.001&&(g=1),this.x=(y-d)/g,this.y=(h-m)/g,this.z=(u-l)/g,this.w=Math.acos((c+f+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function Bt(e,t,n){this.width=e,this.height=t,this.scissor=new He(0,0,e,t),this.scissorTest=!1,this.viewport=new He(0,0,e,t),n=n||{},this.texture=new Ue(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Ze,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Bt.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Bt,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function mc(e,t,n){Bt.call(this,e,t,n),this.samples=4}mc.prototype=Object.assign(Object.create(Bt.prototype),{constructor:mc,isWebGLMultisampleRenderTarget:!0,copy:function(e){return Bt.prototype.copy.call(this,e),this.samples=e.samples,this}});class dt{constructor(e=0,t=0,n=0,i=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return n.copy(e).slerp(t,i)}static slerpFlat(e,t,n,i,r,s,o){let a=n[i+0],c=n[i+1],l=n[i+2],h=n[i+3];const u=r[s+0],f=r[s+1],d=r[s+2],m=r[s+3];if(h!==m||a!==u||c!==f||l!==d){let y=1-o;const v=a*u+c*f+l*d+h*m,g=v>=0?1:-1,p=1-v*v;if(p>Number.EPSILON){const E=Math.sqrt(p),A=Math.atan2(E,v*g);y=Math.sin(y*A)/E,o=Math.sin(o*A)/E}const _=o*g;if(a=a*y+u*_,c=c*y+f*_,l=l*y+d*_,h=h*y+m*_,y===1-o){const E=1/Math.sqrt(a*a+c*c+l*l+h*h);a*=E,c*=E,l*=E,h*=E}}e[t]=a,e[t+1]=c,e[t+2]=l,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,r,s){const o=n[i],a=n[i+1],c=n[i+2],l=n[i+3],h=r[s],u=r[s+1],f=r[s+2],d=r[s+3];return e[t]=o*d+l*h+a*f-c*u,e[t+1]=a*d+l*u+c*h-o*f,e[t+2]=c*d+l*f+o*u-a*h,e[t+3]=l*d-o*h-a*u-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,r=e._z,s=e._order,o=Math.cos,a=Math.sin,c=o(n/2),l=o(i/2),h=o(r/2),u=a(n/2),f=a(i/2),d=a(r/2);switch(s){case"XYZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"YXZ":this._x=u*l*h+c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"ZXY":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h-u*f*d;break;case"ZYX":this._x=u*l*h-c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h+u*f*d;break;case"YZX":this._x=u*l*h+c*f*d,this._y=c*f*h+u*l*d,this._z=c*l*d-u*f*h,this._w=c*l*h-u*f*d;break;case"XZY":this._x=u*l*h-c*f*d,this._y=c*f*h-u*l*d,this._z=c*l*d+u*f*h,this._w=c*l*h+u*f*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],s=t[1],o=t[5],a=t[9],c=t[2],l=t[6],h=t[10],u=n+o+h;if(u>0){const f=.5/Math.sqrt(u+1);this._w=.25/f,this._x=(l-a)*f,this._y=(r-c)*f,this._z=(s-i)*f}else if(n>o&&n>h){const f=2*Math.sqrt(1+n-o-h);this._w=(l-a)/f,this._x=.25*f,this._y=(i+s)/f,this._z=(r+c)/f}else if(o>h){const f=2*Math.sqrt(1+o-n-h);this._w=(r-c)/f,this._x=(i+s)/f,this._y=.25*f,this._z=(a+l)/f}else{const f=2*Math.sqrt(1+h-n-o);this._w=(s-i)/f,this._x=(r+c)/f,this._y=(a+l)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){const n=1e-6;let i=e.dot(t)+1;return i<n?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ee.clamp(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}inverse(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,s=e._w,o=t._x,a=t._y,c=t._z,l=t._w;return this._x=n*l+s*o+i*c-r*a,this._y=i*l+s*a+r*o-n*c,this._z=r*l+s*c+n*a-i*o,this._w=s*l-n*o-i*a-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,s=this._w;let o=s*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=n,this._y=i,this._z=r,this;const a=1-o*o;if(a<=Number.EPSILON){const f=1-t;return this._w=f*s+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(a),l=Math.atan2(c,o),h=Math.sin((1-t)*l)/c,u=Math.sin(t*l)/c;return this._w=s*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class M{constructor(e=0,t=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(gc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(gc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,s=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*s,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*s,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*s,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,s=e.y,o=e.z,a=e.w,c=a*t+s*i-o*n,l=a*n+o*t-r*i,h=a*i+r*n-s*t,u=-r*t-s*n-o*i;return this.x=c*a+u*-r+l*-o-h*-s,this.y=l*a+u*-s+h*-r-c*-o,this.z=h*a+u*-o+c*-s-l*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,s=t.x,o=t.y,a=t.z;return this.x=i*a-r*o,this.y=r*s-n*a,this.z=n*o-i*s,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return So.copy(this).projectOnVector(e),this.sub(So)}reflect(e){return this.sub(So.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Ee.clamp(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const So=new M(),gc=new dt();class Gt{constructor(e,t){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new M(Infinity,Infinity,Infinity),this.max=t!==void 0?t:new M(-Infinity,-Infinity,-Infinity)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,n=Infinity,i=Infinity,r=-Infinity,s=-Infinity,o=-Infinity;for(let a=0,c=e.length;a<c;a+=3){const l=e[a],h=e[a+1],u=e[a+2];l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>s&&(s=h),u>o&&(o=u)}return this.min.set(t,n,i),this.max.set(r,s,o),this}setFromBufferAttribute(e){let t=Infinity,n=Infinity,i=Infinity,r=-Infinity,s=-Infinity,o=-Infinity;for(let a=0,c=e.count;a<c;a++){const l=e.getX(a),h=e.getY(a),u=e.getZ(a);l<t&&(t=l),h<n&&(n=h),u<i&&(i=u),l>r&&(r=l),h>s&&(s=h),u>o&&(o=u)}return this.min.set(t,n,i),this.max.set(r,s,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=dr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new M()),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new M()),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),Lo.copy(t.boundingBox),Lo.applyMatrix4(e.matrixWorld),this.union(Lo));const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new M()),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,dr),dr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(fr),hs.subVectors(this.max,fr),vi.subVectors(e.a,fr),yi.subVectors(e.b,fr),xi.subVectors(e.c,fr),Mn.subVectors(yi,vi),Tn.subVectors(xi,yi),Hn.subVectors(vi,xi);let t=[0,-Mn.z,Mn.y,0,-Tn.z,Tn.y,0,-Hn.z,Hn.y,Mn.z,0,-Mn.x,Tn.z,0,-Tn.x,Hn.z,0,-Hn.x,-Mn.y,Mn.x,0,-Tn.y,Tn.x,0,-Hn.y,Hn.x,0];return Ao(t,vi,yi,xi,hs)?(t=[1,0,0,0,1,0,0,0,1],Ao(t,vi,yi,xi,hs)?(ds.crossVectors(Mn,Tn),t=[ds.x,ds.y,ds.z],Ao(t,vi,yi,xi,hs)):!1):!1}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new M()),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=dr.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(dr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(nn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),nn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),nn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),nn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),nn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),nn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),nn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),nn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(nn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function Ao(e,t,n,i,r){for(let s=0,o=e.length-3;s<=o;s+=3){kn.fromArray(e,s);const a=r.x*Math.abs(kn.x)+r.y*Math.abs(kn.y)+r.z*Math.abs(kn.z),c=t.dot(kn),l=n.dot(kn),h=i.dot(kn);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const nn=[new M(),new M(),new M(),new M(),new M(),new M(),new M(),new M()],dr=new M(),Lo=new Gt(),vi=new M(),yi=new M(),xi=new M(),Mn=new M(),Tn=new M(),Hn=new M(),fr=new M(),hs=new M(),ds=new M(),kn=new M(),Kh=new Gt();class Wt{constructor(e,t){this.center=e!==void 0?e:new M(),this.radius=t!==void 0?t:-1}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Kh.setFromPoints(e).getCenter(n);let i=0;for(let r=0,s=e.length;r<s;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new M()),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Gt()),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const rn=new M(),Ro=new M(),fs=new M(),En=new M(),Co=new M(),ps=new M(),Po=new M();class pr{constructor(e,t){this.origin=e!==void 0?e:new M(),this.direction=t!==void 0?t:new M(0,0,-1)}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new M()),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,rn)),this}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new M()),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=rn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(rn.copy(this.direction).multiplyScalar(t).add(this.origin),rn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Ro.copy(e).add(t).multiplyScalar(.5),fs.copy(t).sub(e).normalize(),En.copy(this.origin).sub(Ro);const r=e.distanceTo(t)*.5,s=-this.direction.dot(fs),o=En.dot(this.direction),a=-En.dot(fs),c=En.lengthSq(),l=Math.abs(1-s*s);let h,u,f,d;if(l>0)if(h=s*a-o,u=s*o-a,d=r*l,h>=0)if(u>=-d)if(u<=d){const m=1/l;h*=m,u*=m,f=h*(h+s*u+2*o)+u*(s*h+u+2*a)+c}else u=r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;else u=-r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;else u<=-d?(h=Math.max(0,-(-s*r+o)),u=h>0?-r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c):u<=d?(h=0,u=Math.min(Math.max(-r,-a),r),f=u*(u+2*a)+c):(h=Math.max(0,-(s*r+o)),u=h>0?r:Math.min(Math.max(-r,-a),r),f=-h*h+u*(u+2*a)+c);else u=s>0?-r:r,h=Math.max(0,-(s*u+o)),f=-h*h+u*(u+2*a)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(fs).multiplyScalar(u).add(Ro),f}intersectSphere(e,t){rn.subVectors(e.center,this.origin);const n=rn.dot(this.direction),i=rn.dot(rn)-n*n,r=e.radius*e.radius;if(i>r)return null;const s=Math.sqrt(r-i),o=n-s,a=n+s;return o<0&&a<0?null:o<0?this.at(a,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);if(t===0)return!0;const n=e.normal.dot(this.direction);return n*t<0}intersectBox(e,t){let n,i,r,s,o,a;const c=1/this.direction.x,l=1/this.direction.y,h=1/this.direction.z,u=this.origin;return c>=0?(n=(e.min.x-u.x)*c,i=(e.max.x-u.x)*c):(n=(e.max.x-u.x)*c,i=(e.min.x-u.x)*c),l>=0?(r=(e.min.y-u.y)*l,s=(e.max.y-u.y)*l):(r=(e.max.y-u.y)*l,s=(e.min.y-u.y)*l),n>s||r>i?null:((r>n||n!==n)&&(n=r),(s<i||i!==i)&&(i=s),h>=0?(o=(e.min.z-u.z)*h,a=(e.max.z-u.z)*h):(o=(e.max.z-u.z)*h,a=(e.min.z-u.z)*h),n>a||o>i?null:((o>n||n!==n)&&(n=o),(a<i||i!==i)&&(i=a),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return this.intersectBox(e,rn)!==null}intersectTriangle(e,t,n,i,r){Co.subVectors(t,e),ps.subVectors(n,e),Po.crossVectors(Co,ps);let s=this.direction.dot(Po),o;if(s>0){if(i)return null;o=1}else if(s<0)o=-1,s=-s;else return null;En.subVectors(this.origin,e);const a=o*this.direction.dot(ps.crossVectors(En,ps));if(a<0)return null;const c=o*this.direction.dot(Co.cross(En));if(c<0)return null;if(a+c>s)return null;const l=-o*En.dot(Po);return l<0?null:this.at(l/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Re{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,r,s,o,a,c,l,h,u,f,d,m,y){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=r,v[5]=s,v[9]=o,v[13]=a,v[2]=c,v[6]=l,v[10]=h,v[14]=u,v[3]=f,v[7]=d,v[11]=m,v[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Re().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/bi.setFromMatrixColumn(e,0).length(),r=1/bi.setFromMatrixColumn(e,1).length(),s=1/bi.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*s,t[9]=n[9]*s,t[10]=n[10]*s,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,r=e.z,s=Math.cos(n),o=Math.sin(n),a=Math.cos(i),c=Math.sin(i),l=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const u=s*l,f=s*h,d=o*l,m=o*h;t[0]=a*l,t[4]=-a*h,t[8]=c,t[1]=f+d*c,t[5]=u-m*c,t[9]=-o*a,t[2]=m-u*c,t[6]=d+f*c,t[10]=s*a}else if(e.order==="YXZ"){const u=a*l,f=a*h,d=c*l,m=c*h;t[0]=u+m*o,t[4]=d*o-f,t[8]=s*c,t[1]=s*h,t[5]=s*l,t[9]=-o,t[2]=f*o-d,t[6]=m+u*o,t[10]=s*a}else if(e.order==="ZXY"){const u=a*l,f=a*h,d=c*l,m=c*h;t[0]=u-m*o,t[4]=-s*h,t[8]=d+f*o,t[1]=f+d*o,t[5]=s*l,t[9]=m-u*o,t[2]=-s*c,t[6]=o,t[10]=s*a}else if(e.order==="ZYX"){const u=s*l,f=s*h,d=o*l,m=o*h;t[0]=a*l,t[4]=d*c-f,t[8]=u*c+m,t[1]=a*h,t[5]=m*c+u,t[9]=f*c-d,t[2]=-c,t[6]=o*a,t[10]=s*a}else if(e.order==="YZX"){const u=s*a,f=s*c,d=o*a,m=o*c;t[0]=a*l,t[4]=m-u*h,t[8]=d*h+f,t[1]=h,t[5]=s*l,t[9]=-o*l,t[2]=-c*l,t[6]=f*h+d,t[10]=u-m*h}else if(e.order==="XZY"){const u=s*a,f=s*c,d=o*a,m=o*c;t[0]=a*l,t[4]=-h,t[8]=c*l,t[1]=u*h+m,t[5]=s*l,t[9]=f*h-d,t[2]=d*h-f,t[6]=o*l,t[10]=m*h+u}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Qh,e,$h)}lookAt(e,t,n){const i=this.elements;return Tt.subVectors(e,t),Tt.lengthSq()===0&&(Tt.z=1),Tt.normalize(),Sn.crossVectors(n,Tt),Sn.lengthSq()===0&&(Math.abs(n.z)===1?Tt.x+=1e-4:Tt.z+=1e-4,Tt.normalize(),Sn.crossVectors(n,Tt)),Sn.normalize(),ms.crossVectors(Tt,Sn),i[0]=Sn.x,i[4]=ms.x,i[8]=Tt.x,i[1]=Sn.y,i[5]=ms.y,i[9]=Tt.y,i[2]=Sn.z,i[6]=ms.z,i[10]=Tt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,s=n[0],o=n[4],a=n[8],c=n[12],l=n[1],h=n[5],u=n[9],f=n[13],d=n[2],m=n[6],y=n[10],v=n[14],g=n[3],p=n[7],_=n[11],E=n[15],A=i[0],b=i[4],C=i[8],j=i[12],N=i[1],ne=i[5],z=i[9],q=i[13],W=i[2],H=i[6],G=i[10],K=i[14],re=i[3],se=i[7],ue=i[11],ae=i[15];return r[0]=s*A+o*N+a*W+c*re,r[4]=s*b+o*ne+a*H+c*se,r[8]=s*C+o*z+a*G+c*ue,r[12]=s*j+o*q+a*K+c*ae,r[1]=l*A+h*N+u*W+f*re,r[5]=l*b+h*ne+u*H+f*se,r[9]=l*C+h*z+u*G+f*ue,r[13]=l*j+h*q+u*K+f*ae,r[2]=d*A+m*N+y*W+v*re,r[6]=d*b+m*ne+y*H+v*se,r[10]=d*C+m*z+y*G+v*ue,r[14]=d*j+m*q+y*K+v*ae,r[3]=g*A+p*N+_*W+E*re,r[7]=g*b+p*ne+_*H+E*se,r[11]=g*C+p*z+_*G+E*ue,r[15]=g*j+p*q+_*K+E*ae,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],s=e[1],o=e[5],a=e[9],c=e[13],l=e[2],h=e[6],u=e[10],f=e[14],d=e[3],m=e[7],y=e[11],v=e[15];return d*(+r*a*h-i*c*h-r*o*u+n*c*u+i*o*f-n*a*f)+m*(+t*a*f-t*c*u+r*s*u-i*s*f+i*c*l-r*a*l)+y*(+t*c*h-t*o*f-r*s*h+n*s*f+r*o*l-n*c*l)+v*(-i*o*l-t*a*h+t*o*u+i*s*h-n*s*u+n*a*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}getInverse(e,t){t!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");const n=this.elements,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],c=i[4],l=i[5],h=i[6],u=i[7],f=i[8],d=i[9],m=i[10],y=i[11],v=i[12],g=i[13],p=i[14],_=i[15],E=d*p*u-g*m*u+g*h*y-l*p*y-d*h*_+l*m*_,A=v*m*u-f*p*u-v*h*y+c*p*y+f*h*_-c*m*_,b=f*g*u-v*d*u+v*l*y-c*g*y-f*l*_+c*d*_,C=v*d*h-f*g*h-v*l*m+c*g*m+f*l*p-c*d*p,j=r*E+s*A+o*b+a*C;if(j===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/j;return n[0]=E*N,n[1]=(g*m*a-d*p*a-g*o*y+s*p*y+d*o*_-s*m*_)*N,n[2]=(l*p*a-g*h*a+g*o*u-s*p*u-l*o*_+s*h*_)*N,n[3]=(d*h*a-l*m*a-d*o*u+s*m*u+l*o*y-s*h*y)*N,n[4]=A*N,n[5]=(f*p*a-v*m*a+v*o*y-r*p*y-f*o*_+r*m*_)*N,n[6]=(v*h*a-c*p*a-v*o*u+r*p*u+c*o*_-r*h*_)*N,n[7]=(c*m*a-f*h*a+f*o*u-r*m*u-c*o*y+r*h*y)*N,n[8]=b*N,n[9]=(v*d*a-f*g*a-v*s*y+r*g*y+f*s*_-r*d*_)*N,n[10]=(c*g*a-v*l*a+v*s*u-r*g*u-c*s*_+r*l*_)*N,n[11]=(f*l*a-c*d*a-f*s*u+r*d*u+c*s*y-r*l*y)*N,n[12]=C*N,n[13]=(f*g*o-v*d*o+v*s*m-r*g*m-f*s*p+r*d*p)*N,n[14]=(v*l*o-c*g*o-v*s*h+r*g*h+c*s*p-r*l*p)*N,n[15]=(c*d*o-f*l*o+f*s*h-r*d*h-c*s*m+r*l*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,s=e.x,o=e.y,a=e.z,c=r*s,l=r*o;return this.set(c*s+n,c*o-i*a,c*a+i*o,0,c*o+i*a,l*o+n,l*a-i*s,0,c*a-i*o,l*a+i*s,r*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,s=t._y,o=t._z,a=t._w,c=r+r,l=s+s,h=o+o,u=r*c,f=r*l,d=r*h,m=s*l,y=s*h,v=o*h,g=a*c,p=a*l,_=a*h,E=n.x,A=n.y,b=n.z;return i[0]=(1-(m+v))*E,i[1]=(f+_)*E,i[2]=(d-p)*E,i[3]=0,i[4]=(f-_)*A,i[5]=(1-(u+v))*A,i[6]=(y+g)*A,i[7]=0,i[8]=(d+p)*b,i[9]=(y-g)*b,i[10]=(1-(u+m))*b,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=bi.set(i[0],i[1],i[2]).length();const s=bi.set(i[4],i[5],i[6]).length(),o=bi.set(i[8],i[9],i[10]).length(),a=this.determinant();a<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ut.copy(this);const c=1/r,l=1/s,h=1/o;return Ut.elements[0]*=c,Ut.elements[1]*=c,Ut.elements[2]*=c,Ut.elements[4]*=l,Ut.elements[5]*=l,Ut.elements[6]*=l,Ut.elements[8]*=h,Ut.elements[9]*=h,Ut.elements[10]*=h,t.setFromRotationMatrix(Ut),n.x=r,n.y=s,n.z=o,this}makePerspective(e,t,n,i,r,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,a=2*r/(t-e),c=2*r/(n-i),l=(t+e)/(t-e),h=(n+i)/(n-i),u=-(s+r)/(s-r),f=-2*s*r/(s-r);return o[0]=a,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,s){const o=this.elements,a=1/(t-e),c=1/(n-i),l=1/(s-r),h=(t+e)*a,u=(n+i)*c,f=(s+r)*l;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t){t===void 0&&(t=0);for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const bi=new M(),Ut=new Re(),Qh=new M(0,0,0),$h=new M(1,1,1),Sn=new M(),ms=new M(),Tt=new M();class gs{constructor(e=0,t=0,n=0,i=gs.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=Ee.clamp,r=e.elements,s=r[0],o=r[4],a=r[8],c=r[1],l=r[5],h=r[9],u=r[2],f=r[6],d=r[10];t=t||this._order;switch(t){case"XYZ":this._y=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(i(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return vc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(vc,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return yc.setFromEuler(this),this.setFromQuaternion(yc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new M(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}gs.DefaultOrder="XYZ";gs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const vc=new Re(),yc=new dt();class xc{constructor(){this.mask=1|0}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let ed=0;const bc=new M(),_i=new dt(),sn=new Re(),vs=new M(),mr=new M(),td=new M(),nd=new dt(),_c=new M(1,0,0),wc=new M(0,1,0),Mc=new M(0,0,1),id={type:"added"},rd={type:"removed"};function ge(){Object.defineProperty(this,"id",{value:ed++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ge.DefaultUp.clone();const e=new M(),t=new gs(),n=new dt(),i=new M(1,1,1);function r(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Re()},normalMatrix:{value:new vt()}}),this.matrix=new Re(),this.matrixWorld=new Re(),this.matrixAutoUpdate=ge.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new xc(),this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}ge.DefaultUp=new M(0,1,0);ge.DefaultMatrixAutoUpdate=!0;ge.prototype=Object.assign(Object.create(Nt.prototype),{constructor:ge,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _i.setFromAxisAngle(e,t),this.quaternion.multiply(_i),this},rotateOnWorldAxis:function(e,t){return _i.setFromAxisAngle(e,t),this.quaternion.premultiply(_i),this},rotateX:function(e){return this.rotateOnAxis(_c,e)},rotateY:function(e){return this.rotateOnAxis(wc,e)},rotateZ:function(e){return this.rotateOnAxis(Mc,e)},translateOnAxis:function(e,t){return bc.copy(e).applyQuaternion(this.quaternion),this.position.add(bc.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_c,e)},translateY:function(e){return this.translateOnAxis(wc,e)},translateZ:function(e){return this.translateOnAxis(Mc,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(sn.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?vs.copy(e):vs.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),mr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?sn.lookAt(mr,vs,this.up):sn.lookAt(vs,mr,this.up),this.quaternion.setFromRotationMatrix(sn),i&&(sn.extractRotation(i.matrixWorld),_i.setFromRotationMatrix(sn),this.quaternion.premultiply(_i.inverse()))},add:function(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(id)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(rd)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),sn.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),sn.multiply(e.parent.matrixWorld)),e.applyMatrix4(sn),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n],s=r.getObjectByProperty(e,t);if(s!==void 0)return s}return},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new M()),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new dt()),this.updateMatrixWorld(!0),this.matrixWorld.decompose(mr,e,td),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new M()),this.updateMatrixWorld(!0),this.matrixWorld.decompose(mr,nd,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new M()),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(e)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let c=0,l=a.length;c<l;c++){const h=a[c];r(e.shapes,h)}else r(e.shapes,a)}}if(this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,c=this.material.length;a<c;a++)o.push(r(e.materials,this.material[a]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(t){const o=s(e.geometries),a=s(e.materials),c=s(e.textures),l=s(e.images),h=s(e.shapes);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),c.length>0&&(n.textures=c),l.length>0&&(n.images=l),h.length>0&&(n.shapes=h)}return n.object=i,n;function s(o){const a=[];for(const c in o){const l=o[c];delete l.metadata,a.push(l)}return a}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}});const Io=new M(),sd=new M(),od=new vt();class on{constructor(e,t){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new M(1,0,0),this.constant=t!==void 0?t:0}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Io.subVectors(n,t).cross(sd.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new M()),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new M());const n=e.delta(Io),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?void 0:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new M()),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||od.getNormalMatrix(e),i=this.coplanarPoint(Io).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const Ht=new M(),an=new M(),Do=new M(),cn=new M(),wi=new M(),Mi=new M(),Tc=new M(),Oo=new M(),Fo=new M(),No=new M();class yt{constructor(e,t,n){this.a=e!==void 0?e:new M(),this.b=t!==void 0?t:new M(),this.c=n!==void 0?n:new M()}static getNormal(e,t,n,i){i===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new M()),i.subVectors(n,t),Ht.subVectors(e,t),i.cross(Ht);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Ht.subVectors(i,t),an.subVectors(n,t),Do.subVectors(e,t);const s=Ht.dot(Ht),o=Ht.dot(an),a=Ht.dot(Do),c=an.dot(an),l=an.dot(Do),h=s*c-o*o;if(r===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new M()),h===0)return r.set(-2,-1,-1);const u=1/h,f=(c*a-o*l)*u,d=(s*l-o*a)*u;return r.set(1-f-d,d,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,cn),cn.x>=0&&cn.y>=0&&cn.x+cn.y<=1}static getUV(e,t,n,i,r,s,o,a){return this.getBarycoord(e,t,n,i,cn),a.set(0,0),a.addScaledVector(r,cn.x),a.addScaledVector(s,cn.y),a.addScaledVector(o,cn.z),a}static isFrontFacing(e,t,n,i){return Ht.subVectors(n,t),an.subVectors(e,t),Ht.cross(an).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ht.subVectors(this.c,this.b),an.subVectors(this.a,this.b),Ht.cross(an).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new M()),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return yt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new on()),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return yt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return yt.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return yt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return yt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new M());const n=this.a,i=this.b,r=this.c;let s,o;wi.subVectors(i,n),Mi.subVectors(r,n),Oo.subVectors(e,n);const a=wi.dot(Oo),c=Mi.dot(Oo);if(a<=0&&c<=0)return t.copy(n);Fo.subVectors(e,i);const l=wi.dot(Fo),h=Mi.dot(Fo);if(l>=0&&h<=l)return t.copy(i);const u=a*h-l*c;if(u<=0&&a>=0&&l<=0)return s=a/(a-l),t.copy(n).addScaledVector(wi,s);No.subVectors(e,r);const f=wi.dot(No),d=Mi.dot(No);if(d>=0&&f<=d)return t.copy(r);const m=f*c-a*d;if(m<=0&&c>=0&&d<=0)return o=c/(c-d),t.copy(n).addScaledVector(Mi,o);const y=l*d-f*h;if(y<=0&&h-l>=0&&f-d>=0)return Tc.subVectors(r,i),o=(h-l)/(h-l+(f-d)),t.copy(i).addScaledVector(Tc,o);const v=1/(y+m+u);return s=m*v,o=u*v,t.copy(n).addScaledVector(wi,s).addScaledVector(Mi,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ec={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={h:0,s:0,l:0},ys={h:0,s:0,l:0};function Bo(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function Go(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function Uo(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}class fe{constructor(e,t,n){return Object.defineProperty(this,"isColor",{value:!0}),t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Ee.euclideanModulo(e,1),t=Ee.clamp(t,0,1),n=Ee.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=Bo(r,i,e+1/3),this.g=Bo(r,i,e),this.b=Bo(r,i,e-1/3)}return this}setStyle(e){function t(i){if(i===void 0)return;parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let i;const r=n[1],s=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)){const o=parseFloat(i[1])/360,a=parseInt(i[2],10)/100,c=parseInt(i[3],10)/100;return t(i[5]),this.setHSL(o,a,c)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){const i=n[1],r=i.length;if(r===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=Ec[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t){t===void 0&&(t=2);const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Go(e.r),this.g=Go(e.g),this.b=Go(e.b),this}copyLinearToSRGB(e){return this.r=Uo(e.r),this.g=Uo(e.g),this.b=Uo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const t=this.r,n=this.g,i=this.b,r=Math.max(t,n,i),s=Math.min(t,n,i);let o,a;const c=(s+r)/2;if(s===r)o=0,a=0;else{const l=r-s;a=c<=.5?l/(r+s):l/(2-r-s);switch(r){case t:o=(n-i)/l+(n<i?6:0);break;case n:o=(i-t)/l+2;break;case i:o=(t-n)/l+4;break}o/=6}return e.h=o,e.s=a,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(kt),kt.h+=e,kt.s+=t,kt.l+=n,this.setHSL(kt.h,kt.s,kt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpHSL(e,t){this.getHSL(kt),e.getHSL(ys);const n=Ee.lerp(kt.h,ys.h,t),i=Ee.lerp(kt.s,ys.s,t),r=Ee.lerp(kt.l,ys.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}fe.NAMES=Ec;fe.prototype.r=1;fe.prototype.g=1;fe.prototype.b=1;class Ho{constructor(e,t,n,i,r,s){this.a=e,this.b=t,this.c=n,this.normal=i&&i.isVector3?i:new M(),this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new fe(),this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=s!==void 0?s:0}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(let t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}let ad=0;function we(){Object.defineProperty(this,"id",{value:ad++}),this.uuid=Ee.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=sr,this.side=oi,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ja,this.blendDst=Ka,this.blendEquation=ci,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=vo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Zh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Eo,this.stencilZFail=Eo,this.stencilZPass=Eo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}we.prototype=Object.assign(Object.create(Nt.prototype),{constructor:we,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(e===void 0)return;for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Wa;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}},toJSON:function(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==sr&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==oi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(t){const r=i(e.textures),s=i(e.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(we.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function $e(e){we.call(this),this.type="MeshBasicMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}$e.prototype=Object.create(we.prototype);$e.prototype.constructor=$e;$e.prototype.isMeshBasicMaterial=!0;$e.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};const Ve=new M(),xs=new $();function Me(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=ls,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Me.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(Me.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new fe()),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this},copyVector2sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new $()),t[n++]=s.x,t[n++]=s.y}return this},copyVector3sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new M()),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this},copyVector4sArray:function(e){const t=this.array;let n=0;for(let i=0,r=e.length;i<r;i++){let s=e[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new He()),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this},applyMatrix3:function(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)xs.fromBufferAttribute(this,t),xs.applyMatrix3(e),this.setXY(t,xs.x,xs.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ve.fromBufferAttribute(this,t),Ve.applyMatrix3(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},applyMatrix4:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.applyMatrix4(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},applyNormalMatrix:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.applyNormalMatrix(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},transformDirection:function(e){for(let t=0,n=this.count;t<n;t++)Ve.x=this.getX(t),Ve.y=this.getY(t),Ve.z=this.getZ(t),Ve.transformDirection(e),this.setXYZ(t,Ve.x,Ve.y,Ve.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function ko(e,t,n){Me.call(this,new Int8Array(e),t,n)}ko.prototype=Object.create(Me.prototype);ko.prototype.constructor=ko;function zo(e,t,n){Me.call(this,new Uint8Array(e),t,n)}zo.prototype=Object.create(Me.prototype);zo.prototype.constructor=zo;function Vo(e,t,n){Me.call(this,new Uint8ClampedArray(e),t,n)}Vo.prototype=Object.create(Me.prototype);Vo.prototype.constructor=Vo;function Wo(e,t,n){Me.call(this,new Int16Array(e),t,n)}Wo.prototype=Object.create(Me.prototype);Wo.prototype.constructor=Wo;function gr(e,t,n){Me.call(this,new Uint16Array(e),t,n)}gr.prototype=Object.create(Me.prototype);gr.prototype.constructor=gr;function jo(e,t,n){Me.call(this,new Int32Array(e),t,n)}jo.prototype=Object.create(Me.prototype);jo.prototype.constructor=jo;function vr(e,t,n){Me.call(this,new Uint32Array(e),t,n)}vr.prototype=Object.create(Me.prototype);vr.prototype.constructor=vr;function ye(e,t,n){Me.call(this,new Float32Array(e),t,n)}ye.prototype=Object.create(Me.prototype);ye.prototype.constructor=ye;function qo(e,t,n){Me.call(this,new Float64Array(e),t,n)}qo.prototype=Object.create(Me.prototype);qo.prototype.constructor=qo;class cd{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const t=[];let n,i,r;const s=e.faces;for(i=0;i<s.length;i++){const o=s[i];o.materialIndex!==r&&(r=o.materialIndex,n!==void 0&&(n.count=i*3-n.start,t.push(n)),n={start:i*3,materialIndex:r})}n!==void 0&&(n.count=i*3-n.start,t.push(n)),this.groups=t}fromGeometry(e){const t=e.faces,n=e.vertices,i=e.faceVertexUvs,r=i[0]&&i[0].length>0,s=i[1]&&i[1].length>0,o=e.morphTargets,a=o.length;let c;if(a>0){c=[];for(let v=0;v<a;v++)c[v]={name:o[v].name,data:[]};this.morphTargets.position=c}const l=e.morphNormals,h=l.length;let u;if(h>0){u=[];for(let v=0;v<h;v++)u[v]={name:l[v].name,data:[]};this.morphTargets.normal=u}const f=e.skinIndices,d=e.skinWeights,m=f.length===n.length,y=d.length===n.length;n.length>0&&t.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let v=0;v<t.length;v++){const g=t[v];this.vertices.push(n[g.a],n[g.b],n[g.c]);const p=g.vertexNormals;if(p.length===3)this.normals.push(p[0],p[1],p[2]);else{const E=g.normal;this.normals.push(E,E,E)}const _=g.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{const E=g.color;this.colors.push(E,E,E)}if(r===!0){const E=i[0][v];E!==void 0?this.uvs.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",v),this.uvs.push(new $(),new $(),new $()))}if(s===!0){const E=i[1][v];E!==void 0?this.uvs2.push(E[0],E[1],E[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",v),this.uvs2.push(new $(),new $(),new $()))}for(let E=0;E<a;E++){const A=o[E].vertices;c[E].data.push(A[g.a],A[g.b],A[g.c])}for(let E=0;E<h;E++){const A=l[E].vertexNormals[v];u[E].data.push(A.a,A.b,A.c)}m&&this.skinIndices.push(f[g.a],f[g.b],f[g.c]),y&&this.skinWeights.push(d[g.a],d[g.b],d[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}function Sc(e){if(e.length===0)return-Infinity;let t=e[0];for(let n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}let ld=1;const jt=new Re(),Xo=new ge(),Ti=new M(),Et=new Gt(),yr=new Gt(),rt=new M();function Se(){Object.defineProperty(this,"id",{value:ld+=2}),this.uuid=Ee.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity},this.userData={}}Se.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Se,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(Sc(e)>65535?vr:gr)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new vt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return jt.makeRotationX(e),this.applyMatrix4(jt),this},rotateY:function(e){return jt.makeRotationY(e),this.applyMatrix4(jt),this},rotateZ:function(e){return jt.makeRotationZ(e),this.applyMatrix4(jt),this},translate:function(e,t,n){return jt.makeTranslation(e,t,n),this.applyMatrix4(jt),this},scale:function(e,t,n){return jt.makeScale(e,t,n),this.applyMatrix4(jt),this},lookAt:function(e){return Xo.lookAt(e),Xo.updateMatrix(),this.applyMatrix4(Xo.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ti).negate(),this.translate(Ti.x,Ti.y,Ti.z),this},setFromObject:function(e){const t=e.geometry;if(e.isPoints||e.isLine){const n=new ye(t.vertices.length*3,3),i=new ye(t.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){const r=new ye(t.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&(t&&t.isGeometry&&this.fromGeometry(t));return this},setFromPoints:function(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ye(t,3)),this},updateFromObject:function(e){let t=e.geometry;if(e.isMesh){let n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new cd().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){const t=new Float32Array(e.vertices.length*3);if(this.setAttribute("position",new Me(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){const n=new Float32Array(e.normals.length*3);this.setAttribute("normal",new Me(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){const n=new Float32Array(e.colors.length*3);this.setAttribute("color",new Me(n,3).copyColorsArray(e.colors))}if(e.uvs.length>0){const n=new Float32Array(e.uvs.length*2);this.setAttribute("uv",new Me(n,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){const n=new Float32Array(e.uvs2.length*2);this.setAttribute("uv2",new Me(n,2).copyVector2sArray(e.uvs2))}this.groups=e.groups;for(const n in e.morphTargets){const i=[],r=e.morphTargets[n];for(let s=0,o=r.length;s<o;s++){const a=r[s],c=new ye(a.data.length*3,3);c.name=a.name,i.push(c.copyVector3sArray(a.data))}this.morphAttributes[n]=i}if(e.skinIndices.length>0){const n=new ye(e.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){const n=new ye(e.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Gt());const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new M(-Infinity,-Infinity,-Infinity),new M(Infinity,Infinity,Infinity));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];Et.setFromBufferAttribute(r),this.morphTargetsRelative?(rt.addVectors(this.boundingBox.min,Et.min),this.boundingBox.expandByPoint(rt),rt.addVectors(this.boundingBox.max,Et.max),this.boundingBox.expandByPoint(rt)):(this.boundingBox.expandByPoint(Et.min),this.boundingBox.expandByPoint(Et.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Wt());const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new M(),Infinity);return}if(e){const n=this.boundingSphere.center;if(Et.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const o=t[r];yr.setFromBufferAttribute(o),this.morphTargetsRelative?(rt.addVectors(Et.min,yr.min),Et.expandByPoint(rt),rt.addVectors(Et.max,yr.max),Et.expandByPoint(rt)):(Et.expandByPoint(yr.min),Et.expandByPoint(yr.max))}Et.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)rt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(rt));if(t)for(let r=0,s=t.length;r<s;r++){const o=t[r],a=this.morphTargetsRelative;for(let c=0,l=o.count;c<l;c++)rt.fromBufferAttribute(o,c),a&&(Ti.fromBufferAttribute(e,c),rt.add(Ti)),i=Math.max(i,n.distanceToSquared(rt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Me(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let u=0,f=n.count;u<f;u++)n.setXYZ(u,0,0,0);const i=new M(),r=new M(),s=new M(),o=new M(),a=new M(),c=new M(),l=new M(),h=new M();if(e)for(let u=0,f=e.count;u<f;u+=3){const d=e.getX(u+0),m=e.getX(u+1),y=e.getX(u+2);i.fromBufferAttribute(t,d),r.fromBufferAttribute(t,m),s.fromBufferAttribute(t,y),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,m),c.fromBufferAttribute(n,y),o.add(l),a.add(l),c.add(l),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(y,c.x,c.y,c.z)}else for(let u=0,f=t.count;u<f;u+=3)i.fromBufferAttribute(t,u+0),r.fromBufferAttribute(t,u+1),s.fromBufferAttribute(t,u+2),l.subVectors(s,r),h.subVectors(i,r),l.cross(h),n.setXYZ(u+0,l.x,l.y,l.z),n.setXYZ(u+1,l.x,l.y,l.z),n.setXYZ(u+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const r=n[i],s=r.array,o=e.attributes[i],a=o.array,c=o.itemSize*t,l=Math.min(a.length,s.length-c);for(let h=0,u=c;h<l;h++,u++)s[u]=a[h]}return this},normalizeNormals:function(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)rt.fromBufferAttribute(e,t),rt.normalize(),e.setXYZ(t,rt.x,rt.y,rt.z)},toNonIndexed:function(){function e(o,a){const c=o.array,l=o.itemSize,h=o.normalized,u=new c.constructor(a.length*l);let f=0,d=0;for(let m=0,y=a.length;m<y;m++){f=a[m]*l;for(let v=0;v<l;v++)u[d++]=c[f++]}return new Me(u,l,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const t=new Se(),n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],c=e(a,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const a=[],c=r[o];for(let l=0,h=c.length;l<h;l++){const u=c[l],f=e(u,n);a.push(f)}t.morphAttributes[o]=a}t.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const c=s[o];t.addGroup(c.start,c.count,c.materialIndex)}return t},toJSON:function(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const c in a)a[c]!==void 0&&(e[c]=a[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const a in n){const c=n[a],l=c.toJSON(e.data);c.name!==""&&(l.name=c.name),e.data.attributes[a]=l}const i={};let r=!1;for(const a in this.morphAttributes){const c=this.morphAttributes[a],l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=f.toJSON(e.data);f.name!==""&&(d.name=f.name),l.push(d)}l.length>0&&(i[a]=l,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e},clone:function(){return new Se().copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const l=i[c];this.setAttribute(c,l.clone(t))}const r=e.morphAttributes;for(const c in r){const l=[],h=r[c];for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone(t));this.morphAttributes[c]=l}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,l=s.length;c<l;c++){const h=s[c];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Ac=new Re(),zn=new pr(),Yo=new Wt(),An=new M(),Ln=new M(),Rn=new M(),Zo=new M(),Jo=new M(),Ko=new M(),bs=new M(),_s=new M(),ws=new M(),Ei=new $(),Si=new $(),Ai=new $(),xr=new M(),Ms=new M();function qe(e,t){ge.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new Se(),this.material=t!==void 0?t:new $e(),this.updateMorphTargets()}qe.prototype=Object.assign(Object.create(ge.prototype),{constructor:qe,isMesh:!0,copy:function(e){return ge.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0)return;if(n.boundingSphere===null&&n.computeBoundingSphere(),Yo.copy(n.boundingSphere),Yo.applyMatrix4(r),e.ray.intersectsSphere(Yo)===!1)return;if(Ac.getInverse(r),zn.copy(e.ray).applyMatrix4(Ac),n.boundingBox!==null&&zn.intersectsBox(n.boundingBox)===!1)return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,c=n.morphAttributes.position,l=n.morphTargetsRelative,h=n.attributes.uv,u=n.attributes.uv2,f=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(i))for(let m=0,y=f.length;m<y;m++){const v=f[m],g=i[v.materialIndex],p=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let E=p,A=_;E<A;E+=3){const b=o.getX(E),C=o.getX(E+1),j=o.getX(E+2);s=Ts(this,g,e,zn,a,c,l,h,u,b,C,j),s&&(s.faceIndex=Math.floor(E/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const m=Math.max(0,d.start),y=Math.min(o.count,d.start+d.count);for(let v=m,g=y;v<g;v+=3){const p=o.getX(v),_=o.getX(v+1),E=o.getX(v+2);s=Ts(this,i,e,zn,a,c,l,h,u,p,_,E),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let m=0,y=f.length;m<y;m++){const v=f[m],g=i[v.materialIndex],p=Math.max(v.start,d.start),_=Math.min(v.start+v.count,d.start+d.count);for(let E=p,A=_;E<A;E+=3){const b=E,C=E+1,j=E+2;s=Ts(this,g,e,zn,a,c,l,h,u,b,C,j),s&&(s.faceIndex=Math.floor(E/3),s.face.materialIndex=v.materialIndex,t.push(s))}}else{const m=Math.max(0,d.start),y=Math.min(a.count,d.start+d.count);for(let v=m,g=y;v<g;v+=3){const p=v,_=v+1,E=v+2;s=Ts(this,i,e,zn,a,c,l,h,u,p,_,E),s&&(s.faceIndex=Math.floor(v/3),t.push(s))}}}else if(n.isGeometry){const o=Array.isArray(i),a=n.vertices,c=n.faces;let l;const h=n.faceVertexUvs[0];h.length>0&&(l=h);for(let u=0,f=c.length;u<f;u++){const d=c[u],m=o?i[d.materialIndex]:i;if(m===void 0)continue;const y=a[d.a],v=a[d.b],g=a[d.c];if(s=Lc(this,m,e,zn,y,v,g,xr),s){if(l&&l[u]){const p=l[u];Ei.copy(p[0]),Si.copy(p[1]),Ai.copy(p[2]),s.uv=yt.getUV(xr,y,v,g,Ei,Si,Ai,new $())}s.face=d,s.faceIndex=u,t.push(s)}}}}});function Lc(e,t,n,i,r,s,o,a){let c;if(t.side===st?c=i.intersectTriangle(o,s,r,!0,a):c=i.intersectTriangle(r,s,o,t.side!==ai,a),c===null)return null;Ms.copy(a),Ms.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Ms);return l<n.near||l>n.far?null:{distance:l,point:Ms.clone(),object:e}}function Ts(e,t,n,i,r,s,o,a,c,l,h,u){An.fromBufferAttribute(r,l),Ln.fromBufferAttribute(r,h),Rn.fromBufferAttribute(r,u);const f=e.morphTargetInfluences;if(t.morphTargets&&s&&f){bs.set(0,0,0),_s.set(0,0,0),ws.set(0,0,0);for(let m=0,y=s.length;m<y;m++){const v=f[m],g=s[m];if(v===0)continue;Zo.fromBufferAttribute(g,l),Jo.fromBufferAttribute(g,h),Ko.fromBufferAttribute(g,u),o?(bs.addScaledVector(Zo,v),_s.addScaledVector(Jo,v),ws.addScaledVector(Ko,v)):(bs.addScaledVector(Zo.sub(An),v),_s.addScaledVector(Jo.sub(Ln),v),ws.addScaledVector(Ko.sub(Rn),v))}An.add(bs),Ln.add(_s),Rn.add(ws)}e.isSkinnedMesh&&(e.boneTransform(l,An),e.boneTransform(h,Ln),e.boneTransform(u,Rn));const d=Lc(e,t,n,i,An,Ln,Rn,xr);if(d){a&&(Ei.fromBufferAttribute(a,l),Si.fromBufferAttribute(a,h),Ai.fromBufferAttribute(a,u),d.uv=yt.getUV(xr,An,Ln,Rn,Ei,Si,Ai,new $())),c&&(Ei.fromBufferAttribute(c,l),Si.fromBufferAttribute(c,h),Ai.fromBufferAttribute(c,u),d.uv2=yt.getUV(xr,An,Ln,Rn,Ei,Si,Ai,new $()));const m=new Ho(l,h,u);yt.getNormal(An,Ln,Rn,m.normal),d.face=m}return d}let ud=0;const qt=new Re(),Qo=new ge(),Es=new M();function Ge(){Object.defineProperty(this,"id",{value:ud+=2}),this.uuid=Ee.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Ge.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Ge,isGeometry:!0,applyMatrix4:function(e){const t=new vt().getNormalMatrix(e);for(let n=0,i=this.vertices.length;n<i;n++){const r=this.vertices[n];r.applyMatrix4(e)}for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];r.normal.applyMatrix3(t).normalize();for(let s=0,o=r.vertexNormals.length;s<o;s++)r.vertexNormals[s].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return qt.makeRotationX(e),this.applyMatrix4(qt),this},rotateY:function(e){return qt.makeRotationY(e),this.applyMatrix4(qt),this},rotateZ:function(e){return qt.makeRotationZ(e),this.applyMatrix4(qt),this},translate:function(e,t,n){return qt.makeTranslation(e,t,n),this.applyMatrix4(qt),this},scale:function(e,t,n){return qt.makeScale(e,t,n),this.applyMatrix4(qt),this},lookAt:function(e){return Qo.lookAt(e),Qo.updateMatrix(),this.applyMatrix4(Qo.matrix),this},fromBufferGeometry:function(e){const t=this,n=e.index!==null?e.index:void 0,i=e.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const r=i.position,s=i.normal,o=i.color,a=i.uv,c=i.uv2;c!==void 0&&(this.faceVertexUvs[1]=[]);for(let u=0;u<r.count;u++)t.vertices.push(new M().fromBufferAttribute(r,u)),o!==void 0&&t.colors.push(new fe().fromBufferAttribute(o,u));function l(u,f,d,m){const y=o===void 0?[]:[t.colors[u].clone(),t.colors[f].clone(),t.colors[d].clone()],v=s===void 0?[]:[new M().fromBufferAttribute(s,u),new M().fromBufferAttribute(s,f),new M().fromBufferAttribute(s,d)],g=new Ho(u,f,d,v,y,m);t.faces.push(g),a!==void 0&&t.faceVertexUvs[0].push([new $().fromBufferAttribute(a,u),new $().fromBufferAttribute(a,f),new $().fromBufferAttribute(a,d)]),c!==void 0&&t.faceVertexUvs[1].push([new $().fromBufferAttribute(c,u),new $().fromBufferAttribute(c,f),new $().fromBufferAttribute(c,d)])}const h=e.groups;if(h.length>0)for(let u=0;u<h.length;u++){const f=h[u],d=f.start,m=f.count;for(let y=d,v=d+m;y<v;y+=3)n!==void 0?l(n.getX(y),n.getX(y+1),n.getX(y+2),f.materialIndex):l(y,y+1,y+2,f.materialIndex)}else if(n!==void 0)for(let u=0;u<n.count;u+=3)l(n.getX(u),n.getX(u+1),n.getX(u+2));else for(let u=0;u<r.count;u+=3)l(u,u+1,u+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Es).negate(),this.translate(Es.x,Es.y,Es.z),this},normalize:function(){this.computeBoundingSphere();const e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new Re();return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const e=new M(),t=new M();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=this.vertices[r.a],o=this.vertices[r.b],a=this.vertices[r.c];e.subVectors(a,o),t.subVectors(s,o),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);const t=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)t[n]=new M();if(e){const n=new M(),i=new M();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c];n.subVectors(l,c),i.subVectors(a,c),n.cross(i),t[o.a].add(n),t[o.b].add(n),t[o.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n];t[r.a].add(r.normal),t[r.b].add(r.normal),t[r.c].add(r.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)t[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const r=this.faces[n],s=r.vertexNormals;s.length===3?(s[0].copy(t[r.a]),s[1].copy(t[r.b]),s[2].copy(t[r.c])):(s[0]=t[r.a].clone(),s[1]=t[r.b].clone(),s[2]=t[r.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let e=0,t=this.faces.length;e<t;e++){const n=this.faces[e],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let r=0,s=i.vertexNormals.length;r<s;r++)i.__originalVertexNormals[r]?i.__originalVertexNormals[r].copy(i.vertexNormals[r]):i.__originalVertexNormals[r]=i.vertexNormals[r].clone()}const e=new Ge();e.faces=this.faces;for(let t=0,n=this.morphTargets.length;t<n;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];const r=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(let o=0,a=this.faces.length;o<a;o++){const c=new M(),l={a:new M(),b:new M(),c:new M()};r.push(c),s.push(l)}}const i=this.morphNormals[t];e.vertices=this.morphTargets[t].vertices,e.computeFaceNormals(),e.computeVertexNormals();for(let r=0,s=this.faces.length;r<s;r++){const o=this.faces[r],a=i.faceNormals[r],c=i.vertexNormals[r];a.copy(o.normal),c.a.copy(o.vertexNormals[0]),c.b.copy(o.vertexNormals[1]),c.c.copy(o.vertexNormals[2])}}for(let t=0,n=this.faces.length;t<n;t++){const i=this.faces[t];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Gt()),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Wt()),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!(e&&e.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}let i;const r=this.vertices.length,s=this.vertices,o=e.vertices,a=this.faces,c=e.faces,l=this.colors,h=e.colors;n===void 0&&(n=0),t!==void 0&&(i=new vt().getNormalMatrix(t));for(let u=0,f=o.length;u<f;u++){const d=o[u],m=d.clone();t!==void 0&&m.applyMatrix4(t),s.push(m)}for(let u=0,f=h.length;u<f;u++)l.push(h[u].clone());for(let u=0,f=c.length;u<f;u++){const d=c[u];let m,y;const v=d.vertexNormals,g=d.vertexColors,p=new Ho(d.a+r,d.b+r,d.c+r);p.normal.copy(d.normal),i!==void 0&&p.normal.applyMatrix3(i).normalize();for(let _=0,E=v.length;_<E;_++)m=v[_].clone(),i!==void 0&&m.applyMatrix3(i).normalize(),p.vertexNormals.push(m);p.color.copy(d.color);for(let _=0,E=g.length;_<E;_++)y=g[_],p.vertexColors.push(y.clone());p.materialIndex=d.materialIndex+n,a.push(p)}for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,y=d.length;m<y;m++){const v=d[m],g=[];for(let p=0,_=v.length;p<_;p++)g.push(v[p].clone());this.faceVertexUvs[u].push(g)}}},mergeMesh:function(e){if(!(e&&e.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){const e={},t=[],n=[],i=4,r=Math.pow(10,i);for(let a=0,c=this.vertices.length;a<c;a++){const l=this.vertices[a],h=Math.round(l.x*r)+"_"+Math.round(l.y*r)+"_"+Math.round(l.z*r);e[h]===void 0?(e[h]=a,t.push(this.vertices[a]),n[a]=t.length-1):n[a]=n[e[h]]}const s=[];for(let a=0,c=this.faces.length;a<c;a++){const l=this.faces[a];l.a=n[l.a],l.b=n[l.b],l.c=n[l.c];const h=[l.a,l.b,l.c];for(let u=0;u<3;u++)if(h[u]===h[(u+1)%3]){s.push(a);break}}for(let a=s.length-1;a>=0;a--){const c=s[a];this.faces.splice(c,1);for(let l=0,h=this.faceVertexUvs.length;l<h;l++)this.faceVertexUvs[l].splice(c,1)}const o=this.vertices.length-t.length;return this.vertices=t,o},setFromPoints:function(e){this.vertices=[];for(let t=0,n=e.length;t<n;t++){const i=e[t];this.vertices.push(new M(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const e=this.faces,t=e.length;for(let a=0;a<t;a++)e[a]._id=a;function n(a,c){return a.materialIndex-c.materialIndex}e.sort(n);const i=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let s,o;i&&i.length===t&&(s=[]),r&&r.length===t&&(o=[]);for(let a=0;a<t;a++){const c=e[a]._id;s&&s.push(i[c]),o&&o.push(r[c])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const e={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){const d=this.parameters;for(const m in d)d[m]!==void 0&&(e[m]=d[m]);return e}const t=[];for(let d=0;d<this.vertices.length;d++){const m=this.vertices[d];t.push(m.x,m.y,m.z)}const n=[],i=[],r={},s=[],o={},a=[],c={};for(let d=0;d<this.faces.length;d++){const m=this.faces[d],y=!0,v=!1,g=this.faceVertexUvs[0][d]!==void 0,p=m.normal.length()>0,_=m.vertexNormals.length>0,E=m.color.r!==1||m.color.g!==1||m.color.b!==1,A=m.vertexColors.length>0;let b=0;if(b=l(b,0,0),b=l(b,1,y),b=l(b,2,v),b=l(b,3,g),b=l(b,4,p),b=l(b,5,_),b=l(b,6,E),b=l(b,7,A),n.push(b),n.push(m.a,m.b,m.c),n.push(m.materialIndex),g){const C=this.faceVertexUvs[0][d];n.push(f(C[0]),f(C[1]),f(C[2]))}if(p&&n.push(h(m.normal)),_){const C=m.vertexNormals;n.push(h(C[0]),h(C[1]),h(C[2]))}if(E&&n.push(u(m.color)),A){const C=m.vertexColors;n.push(u(C[0]),u(C[1]),u(C[2]))}}function l(d,m,y){return y?d|1<<m:d&~(1<<m)}function h(d){const m=d.x.toString()+d.y.toString()+d.z.toString();return r[m]!==void 0||(r[m]=i.length/3,i.push(d.x,d.y,d.z)),r[m]}function u(d){const m=d.r.toString()+d.g.toString()+d.b.toString();return o[m]!==void 0||(o[m]=s.length,s.push(d.getHex())),o[m]}function f(d){const m=d.x.toString()+d.y.toString();return c[m]!==void 0||(c[m]=a.length/2,a.push(d.x,d.y)),c[m]}return e.data={},e.data.vertices=t,e.data.normals=i,s.length>0&&(e.data.colors=s),a.length>0&&(e.data.uvs=[a]),e.data.faces=n,e},clone:function(){return new Ge().copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;const t=e.vertices;for(let u=0,f=t.length;u<f;u++)this.vertices.push(t[u].clone());const n=e.colors;for(let u=0,f=n.length;u<f;u++)this.colors.push(n[u].clone());const i=e.faces;for(let u=0,f=i.length;u<f;u++)this.faces.push(i[u].clone());for(let u=0,f=e.faceVertexUvs.length;u<f;u++){const d=e.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(let m=0,y=d.length;m<y;m++){const v=d[m],g=[];for(let p=0,_=v.length;p<_;p++){const E=v[p];g.push(E.clone())}this.faceVertexUvs[u].push(g)}}const r=e.morphTargets;for(let u=0,f=r.length;u<f;u++){const d={};if(d.name=r[u].name,r[u].vertices!==void 0){d.vertices=[];for(let m=0,y=r[u].vertices.length;m<y;m++)d.vertices.push(r[u].vertices[m].clone())}if(r[u].normals!==void 0){d.normals=[];for(let m=0,y=r[u].normals.length;m<y;m++)d.normals.push(r[u].normals[m].clone())}this.morphTargets.push(d)}const s=e.morphNormals;for(let u=0,f=s.length;u<f;u++){const d={};if(s[u].vertexNormals!==void 0){d.vertexNormals=[];for(let m=0,y=s[u].vertexNormals.length;m<y;m++){const v=s[u].vertexNormals[m],g={};g.a=v.a.clone(),g.b=v.b.clone(),g.c=v.c.clone(),d.vertexNormals.push(g)}}if(s[u].faceNormals!==void 0){d.faceNormals=[];for(let m=0,y=s[u].faceNormals.length;m<y;m++)d.faceNormals.push(s[u].faceNormals[m].clone())}this.morphNormals.push(d)}const o=e.skinWeights;for(let u=0,f=o.length;u<f;u++)this.skinWeights.push(o[u].clone());const a=e.skinIndices;for(let u=0,f=a.length;u<f;u++)this.skinIndices.push(a[u].clone());const c=e.lineDistances;for(let u=0,f=c.length;u<f;u++)this.lineDistances.push(c[u]);const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=e.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class hd extends Ge{constructor(e,t,n,i,r,s){super();this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s},this.fromBufferGeometry(new Ss(e,t,n,i,r,s)),this.mergeVertices()}}class Ss extends Se{constructor(e=1,t=1,n=1,i=1,r=1,s=1){super();this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:s};const o=this;i=Math.floor(i),r=Math.floor(r),s=Math.floor(s);const a=[],c=[],l=[],h=[];let u=0,f=0;d("z","y","x",-1,-1,n,t,e,s,r,0),d("z","y","x",1,-1,n,t,-e,s,r,1),d("x","z","y",1,1,e,n,t,i,s,2),d("x","z","y",1,-1,e,n,-t,i,s,3),d("x","y","z",1,-1,e,t,n,i,r,4),d("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(a),this.setAttribute("position",new ye(c,3)),this.setAttribute("normal",new ye(l,3)),this.setAttribute("uv",new ye(h,2));function d(m,y,v,g,p,_,E,A,b,C,j){const N=_/b,ne=E/C,z=_/2,q=E/2,W=A/2,H=b+1,G=C+1;let K=0,re=0;const se=new M();for(let ue=0;ue<G;ue++){const ae=ue*ne-q;for(let ve=0;ve<H;ve++){const Ce=ve*N-z;se[m]=Ce*g,se[y]=ae*p,se[v]=W,c.push(se.x,se.y,se.z),se[m]=0,se[y]=0,se[v]=A>0?1:-1,l.push(se.x,se.y,se.z),h.push(ve/b),h.push(1-ue/C),K+=1}}for(let ue=0;ue<C;ue++)for(let ae=0;ae<b;ae++){const ve=u+ae+H*ue,Ce=u+ae+H*(ue+1),Ae=u+(ae+1)+H*(ue+1),T=u+(ae+1)+H*ue;a.push(ve,Ce,T),a.push(Ce,Ae,T),re+=6}o.addGroup(f,re,j),f+=re,u+=K}}}function Li(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function lt(e){const t={};for(let n=0;n<e.length;n++){const i=Li(e[n]);for(const r in i)t[r]=i[r]}return t}const dd={clone:Li,merge:lt};var fd=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,pd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function xt(e){we.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=fd,this.fragmentShader=pd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}xt.prototype=Object.create(we.prototype);xt.prototype.constructor=xt;xt.prototype.isShaderMaterial=!0;xt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Li(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this};xt.prototype.toJSON=function(e){const t=we.prototype.toJSON.call(this,e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i],s=r.value;s&&s.isTexture?t.uniforms[i]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?t.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?t.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?t.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?t.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?t.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?t.uniforms[i]={type:"m4",value:s.toArray()}:t.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t};function ln(){ge.call(this),this.type="Camera",this.matrixWorldInverse=new Re(),this.projectionMatrix=new Re(),this.projectionMatrixInverse=new Re()}ln.prototype=Object.assign(Object.create(ge.prototype),{constructor:ln,isCamera:!0,copy:function(e,t){return ge.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new M()),this.updateMatrixWorld(!0);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){ge.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){ge.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Je(e,t,n,i){ln.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Je.prototype=Object.assign(Object.create(ln.prototype),{constructor:Je,isPerspectiveCamera:!0,copy:function(e,t){return ln.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){const t=.5*this.getFilmHeight()/e;this.fov=Ee.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){const e=Math.tan(Ee.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return Ee.RAD2DEG*2*Math.atan(Math.tan(Ee.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,s){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=this.near;let t=e*Math.tan(Ee.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,c=s.fullHeight;r+=s.offsetX*i/a,t-=s.offsetY*n/c,i*=s.width/a,n*=s.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=ge.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});const Ri=90,Ci=1;function br(e,t,n){if(ge.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new Je(Ri,Ci,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new M(1,0,0)),this.add(i);const r=new Je(Ri,Ci,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new M(-1,0,0)),this.add(r);const s=new Je(Ri,Ci,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new M(0,1,0)),this.add(s);const o=new Je(Ri,Ci,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new M(0,-1,0)),this.add(o);const a=new Je(Ri,Ci,e,t);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new M(0,0,1)),this.add(a);const c=new Je(Ri,Ci,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new M(0,0,-1)),this.add(c),this.update=function(l,h){this.parent===null&&this.updateMatrixWorld();const u=l.xr.enabled,f=l.getRenderTarget();l.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,l.setRenderTarget(n,0),l.render(h,i),l.setRenderTarget(n,1),l.render(h,r),l.setRenderTarget(n,2),l.render(h,s),l.setRenderTarget(n,3),l.render(h,o),l.setRenderTarget(n,4),l.render(h,a),n.texture.generateMipmaps=d,l.setRenderTarget(n,5),l.render(h,c),l.setRenderTarget(f),l.xr.enabled=u},this.clear=function(l,h,u,f){const d=l.getRenderTarget();for(let m=0;m<6;m++)l.setRenderTarget(n,m),l.clear(h,u,f);l.setRenderTarget(d)}}br.prototype=Object.create(ge.prototype);br.prototype.constructor=br;function Pi(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),Bt.call(this,e,e,t),this.texture.isWebGLCubeRenderTargetTexture=!0}Pi.prototype=Object.create(Bt.prototype);Pi.prototype.constructor=Pi;Pi.prototype.isWebGLCubeRenderTarget=!0;Pi.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=Ft,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Ss(5,5,5),r=new xt({name:"CubemapFromEquirect",uniforms:Li(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:st,blending:rr});r.uniforms.tEquirect.value=t;const s=new qe(i,r),o=t.minFilter;t.minFilter===bn&&(t.minFilter=Ze);const a=new br(1,10,this);return a.update(e,s),t.minFilter=o,s.geometry.dispose(),s.material.dispose(),this};function Ii(e,t,n,i,r,s,o,a,c,l,h,u){Ue.call(this,null,s,o,a,c,l,i,r,h,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=c!==void 0?c:it,this.minFilter=l!==void 0?l:it,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Ii.prototype=Object.create(Ue.prototype);Ii.prototype.constructor=Ii;Ii.prototype.isDataTexture=!0;const Di=new Wt(),As=new M();class Ls{constructor(e,t,n,i,r,s){this.planes=[e!==void 0?e:new on(),t!==void 0?t:new on(),n!==void 0?n:new on(),i!==void 0?i:new on(),r!==void 0?r:new on(),s!==void 0?s:new on()]}set(e,t,n,i,r,s){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(s),this}clone(){return new this.constructor().copy(this)}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],s=n[2],o=n[3],a=n[4],c=n[5],l=n[6],h=n[7],u=n[8],f=n[9],d=n[10],m=n[11],y=n[12],v=n[13],g=n[14],p=n[15];return t[0].setComponents(o-i,h-a,m-u,p-y).normalize(),t[1].setComponents(o+i,h+a,m+u,p+y).normalize(),t[2].setComponents(o+r,h+c,m+f,p+v).normalize(),t[3].setComponents(o-r,h-c,m-f,p-v).normalize(),t[4].setComponents(o-s,h-l,m-d,p-g).normalize(),t[5].setComponents(o+s,h+l,m+d,p+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Di.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Di)}intersectsSprite(e){return Di.center.set(0,0,0),Di.radius=.7071067811865476,Di.applyMatrix4(e.matrixWorld),this.intersectsSphere(Di)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++){const s=t[r].distanceToPoint(n);if(s<i)return!1}return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(As.x=i.normal.x>0?e.max.x:e.min.x,As.y=i.normal.y>0?e.max.y:e.min.y,As.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(As)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}}function Rc(){let e=null,t=!1,n=null,i=null;function r(s,o){n(s,o),i=e.requestAnimationFrame(r)}return{start:function(){if(t===!0)return;if(n===null)return;i=e.requestAnimationFrame(r),t=!0},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(s){n=s},setContext:function(s){e=s}}}function md(e,t){const n=t.isWebGL2,i=new WeakMap();function r(l,h){const u=l.array,f=l.usage,d=e.createBuffer();e.bindBuffer(h,d),e.bufferData(h,u,f),l.onUploadCallback();let m=5126;return u instanceof Float32Array?m=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?m=5123:u instanceof Int16Array?m=5122:u instanceof Uint32Array?m=5125:u instanceof Int32Array?m=5124:u instanceof Int8Array?m=5120:u instanceof Uint8Array&&(m=5121),{buffer:d,type:m,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version}}function s(l,h,u){const f=h.array,d=h.updateRange;e.bindBuffer(u,l),d.count===-1?e.bufferSubData(u,0,f):(n?e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):e.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),i.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=i.get(l);h&&(e.deleteBuffer(h.buffer),i.delete(l))}function c(l,h){if(l.isGLBufferAttribute){var u=i.get(l);(!u||u.version<l.version)&&i.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const f=i.get(l);f===void 0?i.set(l,r(l,h)):f.version<l.version&&(s(f.buffer,l,h),f.version=l.version)}return{get:o,remove:a,update:c}}class gd extends Ge{constructor(e,t,n,i){super();this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new $o(e,t,n,i)),this.mergeVertices()}}class $o extends Se{constructor(e,t,n,i){super();this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},e=e||1,t=t||1;const r=e/2,s=t/2,o=Math.floor(n)||1,a=Math.floor(i)||1,c=o+1,l=a+1,h=e/o,u=t/a,f=[],d=[],m=[],y=[];for(let v=0;v<l;v++){const g=v*u-s;for(let p=0;p<c;p++){const _=p*h-r;d.push(_,-g,0),m.push(0,0,1),y.push(p/o),y.push(1-v/a)}}for(let v=0;v<a;v++)for(let g=0;g<o;g++){const p=g+c*v,_=g+c*(v+1),E=g+1+c*(v+1),A=g+1+c*v;f.push(p,_,A),f.push(_,E,A)}this.setIndex(f),this.setAttribute("position",new ye(d,3)),this.setAttribute("normal",new ye(m,3)),this.setAttribute("uv",new ye(y,2))}}var vd=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,yd=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,xd=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,bd=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,_d=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,wd="vec3 transformed = vec3( position );",Md=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Td=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Ed=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Sd=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Ad=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Ld=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Rd=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Cd=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,Pd=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Id=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Dd=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Od=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Fd=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Nd=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Bd=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Gd=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Ud=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Hd=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,kd="gl_FragColor = linearToOutputTexel( gl_FragColor );",zd=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Vd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Wd=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,jd=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,qd=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Xd=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Yd=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,Zd=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,Jd=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Kd=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Qd=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,$d=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,ef=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,tf=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,nf=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,rf=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,sf=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,of=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,af=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,cf=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,lf=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,uf=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,hf=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,df=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,ff=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,pf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,mf=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,gf=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,vf=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,yf=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,xf=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,bf=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,_f=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wf=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Mf=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Tf=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,Ef=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Sf=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Af=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Lf=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,Rf=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,Cf=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Pf=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,If=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Df=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Of=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Ff=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Nf=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Bf=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Gf=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Uf=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Hf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,kf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,zf=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Vf=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Wf=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,jf=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,qf=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Xf=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Yf=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Zf=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Jf=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Kf=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Qf=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,$f=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,ep=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,tp=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,np=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ip=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,rp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,sp=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,op=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,ap=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cp=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,lp=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,up=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,hp=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,dp=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fp=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,pp=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mp=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,gp=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,vp=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yp=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,xp=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bp=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,_p=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wp=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mp=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tp=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Ep=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sp=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ap=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lp=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Rp=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cp=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Pp=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,Ip=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Dp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Op=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Fp=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Np=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Bp=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Gp=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const De={alphamap_fragment:vd,alphamap_pars_fragment:yd,alphatest_fragment:xd,aomap_fragment:bd,aomap_pars_fragment:_d,begin_vertex:wd,beginnormal_vertex:Md,bsdfs:Td,bumpmap_pars_fragment:Ed,clipping_planes_fragment:Sd,clipping_planes_pars_fragment:Ad,clipping_planes_pars_vertex:Ld,clipping_planes_vertex:Rd,color_fragment:Cd,color_pars_fragment:Pd,color_pars_vertex:Id,color_vertex:Dd,common:Od,cube_uv_reflection_fragment:Fd,defaultnormal_vertex:Nd,displacementmap_pars_vertex:Bd,displacementmap_vertex:Gd,emissivemap_fragment:Ud,emissivemap_pars_fragment:Hd,encodings_fragment:kd,encodings_pars_fragment:zd,envmap_fragment:Vd,envmap_common_pars_fragment:Wd,envmap_pars_fragment:jd,envmap_pars_vertex:qd,envmap_physical_pars_fragment:rf,envmap_vertex:Xd,fog_vertex:Yd,fog_pars_vertex:Zd,fog_fragment:Jd,fog_pars_fragment:Kd,gradientmap_pars_fragment:Qd,lightmap_fragment:$d,lightmap_pars_fragment:ef,lights_lambert_vertex:tf,lights_pars_begin:nf,lights_toon_fragment:sf,lights_toon_pars_fragment:of,lights_phong_fragment:af,lights_phong_pars_fragment:cf,lights_physical_fragment:lf,lights_physical_pars_fragment:uf,lights_fragment_begin:hf,lights_fragment_maps:df,lights_fragment_end:ff,logdepthbuf_fragment:pf,logdepthbuf_pars_fragment:mf,logdepthbuf_pars_vertex:gf,logdepthbuf_vertex:vf,map_fragment:yf,map_pars_fragment:xf,map_particle_fragment:bf,map_particle_pars_fragment:_f,metalnessmap_fragment:wf,metalnessmap_pars_fragment:Mf,morphnormal_vertex:Tf,morphtarget_pars_vertex:Ef,morphtarget_vertex:Sf,normal_fragment_begin:Af,normal_fragment_maps:Lf,normalmap_pars_fragment:Rf,clearcoat_normal_fragment_begin:Cf,clearcoat_normal_fragment_maps:Pf,clearcoat_pars_fragment:If,packing:Df,premultiplied_alpha_fragment:Of,project_vertex:Ff,dithering_fragment:Nf,dithering_pars_fragment:Bf,roughnessmap_fragment:Gf,roughnessmap_pars_fragment:Uf,shadowmap_pars_fragment:Hf,shadowmap_pars_vertex:kf,shadowmap_vertex:zf,shadowmask_pars_fragment:Vf,skinbase_vertex:Wf,skinning_pars_vertex:jf,skinning_vertex:qf,skinnormal_vertex:Xf,specularmap_fragment:Yf,specularmap_pars_fragment:Zf,tonemapping_fragment:Jf,tonemapping_pars_fragment:Kf,transmissionmap_fragment:Qf,transmissionmap_pars_fragment:$f,uv_pars_fragment:ep,uv_pars_vertex:tp,uv_vertex:np,uv2_pars_fragment:ip,uv2_pars_vertex:rp,uv2_vertex:sp,worldpos_vertex:op,background_frag:ap,background_vert:cp,cube_frag:lp,cube_vert:up,depth_frag:hp,depth_vert:dp,distanceRGBA_frag:fp,distanceRGBA_vert:pp,equirect_frag:mp,equirect_vert:gp,linedashed_frag:vp,linedashed_vert:yp,meshbasic_frag:xp,meshbasic_vert:bp,meshlambert_frag:_p,meshlambert_vert:wp,meshmatcap_frag:Mp,meshmatcap_vert:Tp,meshtoon_frag:Ep,meshtoon_vert:Sp,meshphong_frag:Ap,meshphong_vert:Lp,meshphysical_frag:Rp,meshphysical_vert:Cp,normal_frag:Pp,normal_vert:Ip,points_frag:Dp,points_vert:Op,shadow_frag:Fp,shadow_vert:Np,sprite_frag:Bp,sprite_vert:Gp},de={common:{diffuse:{value:new fe(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new vt()},uv2Transform:{value:new vt()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new $(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fe(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vt()}},sprite:{diffuse:{value:new fe(15658734)},opacity:{value:1},center:{value:new $(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new vt()}}},Xt={basic:{uniforms:lt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.fog]),vertexShader:De.meshbasic_vert,fragmentShader:De.meshbasic_frag},lambert:{uniforms:lt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.fog,de.lights,{emissive:{value:new fe(0)}}]),vertexShader:De.meshlambert_vert,fragmentShader:De.meshlambert_frag},phong:{uniforms:lt([de.common,de.specularmap,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.fog,de.lights,{emissive:{value:new fe(0)},specular:{value:new fe(1118481)},shininess:{value:30}}]),vertexShader:De.meshphong_vert,fragmentShader:De.meshphong_frag},standard:{uniforms:lt([de.common,de.envmap,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.roughnessmap,de.metalnessmap,de.fog,de.lights,{emissive:{value:new fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag},toon:{uniforms:lt([de.common,de.aomap,de.lightmap,de.emissivemap,de.bumpmap,de.normalmap,de.displacementmap,de.gradientmap,de.fog,de.lights,{emissive:{value:new fe(0)}}]),vertexShader:De.meshtoon_vert,fragmentShader:De.meshtoon_frag},matcap:{uniforms:lt([de.common,de.bumpmap,de.normalmap,de.displacementmap,de.fog,{matcap:{value:null}}]),vertexShader:De.meshmatcap_vert,fragmentShader:De.meshmatcap_frag},points:{uniforms:lt([de.points,de.fog]),vertexShader:De.points_vert,fragmentShader:De.points_frag},dashed:{uniforms:lt([de.common,de.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:De.linedashed_vert,fragmentShader:De.linedashed_frag},depth:{uniforms:lt([de.common,de.displacementmap]),vertexShader:De.depth_vert,fragmentShader:De.depth_frag},normal:{uniforms:lt([de.common,de.bumpmap,de.normalmap,de.displacementmap,{opacity:{value:1}}]),vertexShader:De.normal_vert,fragmentShader:De.normal_frag},sprite:{uniforms:lt([de.sprite,de.fog]),vertexShader:De.sprite_vert,fragmentShader:De.sprite_frag},background:{uniforms:{uvTransform:{value:new vt()},t2D:{value:null}},vertexShader:De.background_vert,fragmentShader:De.background_frag},cube:{uniforms:lt([de.envmap,{opacity:{value:1}}]),vertexShader:De.cube_vert,fragmentShader:De.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:De.equirect_vert,fragmentShader:De.equirect_frag},distanceRGBA:{uniforms:lt([de.common,de.displacementmap,{referencePosition:{value:new M()},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:De.distanceRGBA_vert,fragmentShader:De.distanceRGBA_frag},shadow:{uniforms:lt([de.lights,de.fog,{color:{value:new fe(0)},opacity:{value:1}}]),vertexShader:De.shadow_vert,fragmentShader:De.shadow_frag}};Xt.physical={uniforms:lt([Xt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new $(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new fe(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:De.meshphysical_vert,fragmentShader:De.meshphysical_frag};function Up(e,t,n,i,r){const s=new fe(0);let o=0,a,c,l=null,h=0,u=null;function f(m,y,v,g){let p=y.isScene===!0?y.background:null;p&&p.isTexture&&(p=t.get(p));const _=e.xr,E=_.getSession&&_.getSession();E&&E.environmentBlendMode==="additive"&&(p=null),p===null?d(s,o):p&&p.isColor&&(d(p,1),g=!0),(e.autoClear||g)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),p&&(p.isCubeTexture||p.isWebGLCubeRenderTarget||p.isWebGLCubeRenderTargetTexture||p.mapping===ts)?(c===void 0&&(c=new qe(new Ss(1,1,1),new xt({name:"BackgroundCubeMaterial",uniforms:Li(Xt.cube.uniforms),vertexShader:Xt.cube.vertexShader,fragmentShader:Xt.cube.fragmentShader,side:st,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(A,b,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),p.isWebGLCubeRenderTarget&&(p=p.texture),c.material.uniforms.envMap.value=p,c.material.uniforms.flipEnvMap.value=p.isCubeTexture?-1:1,(l!==p||h!==p.version||u!==e.toneMapping)&&(c.material.needsUpdate=!0,l=p,h=p.version,u=e.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null)):p&&p.isTexture&&(a===void 0&&(a=new qe(new $o(2,2),new xt({name:"BackgroundMaterial",uniforms:Li(Xt.background.uniforms),vertexShader:Xt.background.vertexShader,fragmentShader:Xt.background.fragmentShader,side:oi,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=p,p.matrixAutoUpdate===!0&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),(l!==p||h!==p.version||u!==e.toneMapping)&&(a.material.needsUpdate=!0,l=p,h=p.version,u=e.toneMapping),m.unshift(a,a.geometry,a.material,0,0,null))}function d(m,y){n.buffers.color.setClear(m.r,m.g,m.b,y,r)}return{getClearColor:function(){return s},setClearColor:function(m,y){s.set(m),o=y!==void 0?y:1,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,d(s,o)},render:f}}function Hp(e,t,n,i){const r=e.getParameter(34921),s=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},c=y(null);let l=c;function h(W,H,G,K,re){let se=!1;if(o){const ue=m(K,G,H);l!==ue&&(l=ue,f(l.object)),se=v(K,re),se&&g(K,re)}else{const ue=H.wireframe===!0;(l.geometry!==K.id||l.program!==G.id||l.wireframe!==ue)&&(l.geometry=K.id,l.program=G.id,l.wireframe=ue,se=!0)}W.isInstancedMesh===!0&&(se=!0),re!==null&&n.update(re,34963),se&&(C(W,H,G,K),re!==null&&e.bindBuffer(34963,n.get(re).buffer))}function u(){return i.isWebGL2?e.createVertexArray():s.createVertexArrayOES()}function f(W){return i.isWebGL2?e.bindVertexArray(W):s.bindVertexArrayOES(W)}function d(W){return i.isWebGL2?e.deleteVertexArray(W):s.deleteVertexArrayOES(W)}function m(W,H,G){const K=G.wireframe===!0;let re=a[W.id];re===void 0&&(re={},a[W.id]=re);let se=re[H.id];se===void 0&&(se={},re[H.id]=se);let ue=se[K];return ue===void 0&&(ue=y(u()),se[K]=ue),ue}function y(W){const H=[],G=[],K=[];for(let re=0;re<r;re++)H[re]=0,G[re]=0,K[re]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:H,enabledAttributes:G,attributeDivisors:K,object:W,attributes:{},index:null}}function v(W,H){const G=l.attributes,K=W.attributes;if(Object.keys(G).length!==Object.keys(K).length)return!0;for(const re in K){const se=G[re],ue=K[re];if(se===void 0)return!0;if(se.attribute!==ue)return!0;if(se.data!==ue.data)return!0}return l.index!==H}function g(W,H){const G={},K=W.attributes;for(const re in K){const se=K[re],ue={};ue.attribute=se,se.data&&(ue.data=se.data),G[re]=ue}l.attributes=G,l.index=H}function p(){const W=l.newAttributes;for(let H=0,G=W.length;H<G;H++)W[H]=0}function _(W){E(W,0)}function E(W,H){const G=l.newAttributes,K=l.enabledAttributes,re=l.attributeDivisors;if(G[W]=1,K[W]===0&&(e.enableVertexAttribArray(W),K[W]=1),re[W]!==H){const se=i.isWebGL2?e:t.get("ANGLE_instanced_arrays");se[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,H),re[W]=H}}function A(){const W=l.newAttributes,H=l.enabledAttributes;for(let G=0,K=H.length;G<K;G++)H[G]!==W[G]&&(e.disableVertexAttribArray(G),H[G]=0)}function b(W,H,G,K,re,se){i.isWebGL2===!0&&(G===5124||G===5125)?e.vertexAttribIPointer(W,H,G,re,se):e.vertexAttribPointer(W,H,G,K,re,se)}function C(W,H,G,K){if(i.isWebGL2===!1&&(W.isInstancedMesh||K.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;p();const re=K.attributes,se=G.getAttributes(),ue=H.defaultAttributeValues;for(const ae in se){const ve=se[ae];if(ve>=0){const Ce=re[ae];if(Ce!==void 0){const Ae=Ce.normalized,T=Ce.itemSize,x=n.get(Ce);if(x===void 0)continue;const I=x.buffer,L=x.type,D=x.bytesPerElement;if(Ce.isInterleavedBufferAttribute){const O=Ce.data,B=O.stride,P=Ce.offset;O&&O.isInstancedInterleavedBuffer?(E(ve,O.meshPerAttribute),K._maxInstanceCount===void 0&&(K._maxInstanceCount=O.meshPerAttribute*O.count)):_(ve),e.bindBuffer(34962,I),b(ve,T,L,Ae,B*D,P*D)}else Ce.isInstancedBufferAttribute?(E(ve,Ce.meshPerAttribute),K._maxInstanceCount===void 0&&(K._maxInstanceCount=Ce.meshPerAttribute*Ce.count)):_(ve),e.bindBuffer(34962,I),b(ve,T,L,Ae,0,0)}else if(ae==="instanceMatrix"){const Ae=n.get(W.instanceMatrix);if(Ae===void 0)continue;const T=Ae.buffer,x=Ae.type;E(ve+0,1),E(ve+1,1),E(ve+2,1),E(ve+3,1),e.bindBuffer(34962,T),e.vertexAttribPointer(ve+0,4,x,!1,64,0),e.vertexAttribPointer(ve+1,4,x,!1,64,16),e.vertexAttribPointer(ve+2,4,x,!1,64,32),e.vertexAttribPointer(ve+3,4,x,!1,64,48)}else if(ae==="instanceColor"){const Ae=n.get(W.instanceColor);if(Ae===void 0)continue;const T=Ae.buffer,x=Ae.type;E(ve,1),e.bindBuffer(34962,T),e.vertexAttribPointer(ve,3,x,!1,12,0)}else if(ue!==void 0){const Ae=ue[ae];if(Ae!==void 0)switch(Ae.length){case 2:e.vertexAttrib2fv(ve,Ae);break;case 3:e.vertexAttrib3fv(ve,Ae);break;case 4:e.vertexAttrib4fv(ve,Ae);break;default:e.vertexAttrib1fv(ve,Ae)}}}}A()}function j(){z();for(const W in a){const H=a[W];for(const G in H){const K=H[G];for(const re in K)d(K[re].object),delete K[re];delete H[G]}delete a[W]}}function N(W){if(a[W.id]===void 0)return;const H=a[W.id];for(const G in H){const K=H[G];for(const re in K)d(K[re].object),delete K[re];delete H[G]}delete a[W.id]}function ne(W){for(const H in a){const G=a[H];if(G[W.id]===void 0)continue;const K=G[W.id];for(const re in K)d(K[re].object),delete K[re];delete G[W.id]}}function z(){if(q(),l===c)return;l=c,f(l.object)}function q(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:h,reset:z,resetDefaultState:q,dispose:j,releaseStatesOfGeometry:N,releaseStatesOfProgram:ne,initAttributes:p,enableAttribute:_,disableUnusedAttributes:A}}function kp(e,t,n,i){const r=i.isWebGL2;let s;function o(l){s=l}function a(l,h){e.drawArrays(s,l,h),n.update(h,s,1)}function c(l,h,u){if(u===0)return;let f,d;if(r)f=e,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,l,h,u),n.update(h,s,u)}this.setMode=o,this.render=a,this.renderInstances=c}function zp(e,t,n){let i;function r(){if(i!==void 0)return i;const b=t.get("EXT_texture_filter_anisotropic");return b!==null?i=e.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(b){if(b==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&(e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0)?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&e instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=n.logarithmicDepthBuffer===!0,h=e.getParameter(34930),u=e.getParameter(35660),f=e.getParameter(3379),d=e.getParameter(34076),m=e.getParameter(34921),y=e.getParameter(36347),v=e.getParameter(36348),g=e.getParameter(36349),p=u>0,_=o||!!t.get("OES_texture_float"),E=p&&_,A=o?e.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:m,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:p,floatFragmentTextures:_,floatVertexTextures:E,maxSamples:A}}function Vp(e){const t=this;let n=null,i=0,r=!1,s=!1;const o=new on(),a=new vt(),c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,d){const m=u.length!==0||f||i!==0||r;return r=f,n=h(u,d,0),i=u.length,m},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1,l()},this.setState=function(u,f,d){const m=u.clippingPlanes,y=u.clipIntersection,v=u.clipShadows,g=e.get(u);if(!r||m===null||m.length===0||s&&!v)s?h(null):l();else{const p=s?0:i,_=p*4;let E=g.clippingState||null;c.value=E,E=h(m,f,_,d);for(let A=0;A!==_;++A)E[A]=n[A];g.clippingState=E,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=p}};function l(){c.value!==n&&(c.value=n,c.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(u,f,d,m){const y=u!==null?u.length:0;let v=null;if(y!==0){if(v=c.value,m!==!0||v===null){const g=d+y*4,p=f.matrixWorldInverse;a.getNormalMatrix(p),(v===null||v.length<g)&&(v=new Float32Array(g));for(let _=0,E=d;_!==y;++_,E+=4)o.copy(u[_]).applyMatrix4(p,a),o.normal.toArray(v,E),v[E+3]=o.constant}c.value=v,c.needsUpdate=!0}return t.numPlanes=y,t.numIntersection=0,v}}function Wp(e){let t=new WeakMap();function n(s,o){return o===xo?s.mapping=$r:o===bo&&(s.mapping=es),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===xo||o===bo)if(t.has(s)){const a=t.get(s).texture;return n(a,s.mapping)}else{const a=s.image;if(a&&a.height>0){const c=e.getRenderList(),l=e.getRenderTarget(),h=e.getRenderState(),u=new Pi(a.height/2);return u.fromEquirectangularTexture(e,s),t.set(s,u),e.setRenderTarget(l),e.setRenderList(c),e.setRenderState(h),n(u.texture,s.mapping)}else return null}}return s}function r(){t=new WeakMap()}return{get:i,dispose:r}}function jp(e){const t={};return{has:function(n){if(t[n]!==void 0)return t[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]}}}function qp(e,t,n,i){const r=new WeakMap(),s=new WeakMap();function o(u){const f=u.target,d=r.get(f);d.index!==null&&t.remove(d.index);for(const y in d.attributes)t.remove(d.attributes[y]);f.removeEventListener("dispose",o),r.delete(f);const m=s.get(d);m&&(t.remove(m),s.delete(d)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function a(u,f){let d=r.get(f);return d||(f.addEventListener("dispose",o),f.isBufferGeometry?d=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new Se().setFromObject(u)),d=f._bufferGeometry),r.set(f,d),n.memory.geometries++,d)}function c(u){const f=u.attributes;for(const m in f)t.update(f[m],34962);const d=u.morphAttributes;for(const m in d){const y=d[m];for(let v=0,g=y.length;v<g;v++)t.update(y[v],34962)}}function l(u){const f=[],d=u.index,m=u.attributes.position;let y=0;if(d!==null){const p=d.array;y=d.version;for(let _=0,E=p.length;_<E;_+=3){const A=p[_+0],b=p[_+1],C=p[_+2];f.push(A,b,b,C,C,A)}}else{const p=m.array;y=m.version;for(let _=0,E=p.length/3-1;_<E;_+=3){const A=_+0,b=_+1,C=_+2;f.push(A,b,b,C,C,A)}}const v=new(Sc(f)>65535?vr:gr)(f,1);v.version=y;const g=s.get(u);g&&t.remove(g),s.set(u,v)}function h(u){const f=s.get(u);if(f){const d=u.index;d!==null&&(f.version<d.version&&l(u))}else l(u);return s.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function Xp(e,t,n,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,c;function l(f){a=f.type,c=f.bytesPerElement}function h(f,d){e.drawElements(s,d,a,f*c),n.update(d,s,1)}function u(f,d,m){if(m===0)return;let y,v;if(r)y=e,v="drawElementsInstanced";else if(y=t.get("ANGLE_instanced_arrays"),v="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[v](s,d,a,f*c,m),n.update(d,s,m)}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u}function Yp(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){n.calls++;switch(o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function Zp(e,t){return e[0]-t[0]}function Jp(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Kp(e){const t={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,c){const l=s.morphTargetInfluences,h=l===void 0?0:l.length;let u=t[o.id];if(u===void 0){u=[];for(let v=0;v<h;v++)u[v]=[v,0];t[o.id]=u}for(let v=0;v<h;v++){const g=u[v];g[0]=v,g[1]=l[v]}u.sort(Jp);for(let v=0;v<8;v++)v<h&&u[v][1]?(i[v][0]=u[v][0],i[v][1]=u[v][1]):(i[v][0]=Number.MAX_SAFE_INTEGER,i[v][1]=0);i.sort(Zp);const f=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let m=0;for(let v=0;v<8;v++){const g=i[v],p=g[0],_=g[1];p!==Number.MAX_SAFE_INTEGER&&_?(f&&o.getAttribute("morphTarget"+v)!==f[p]&&o.setAttribute("morphTarget"+v,f[p]),d&&o.getAttribute("morphNormal"+v)!==d[p]&&o.setAttribute("morphNormal"+v,d[p]),n[v]=_,m+=_):(f&&o.getAttribute("morphTarget"+v)!==void 0&&o.deleteAttribute("morphTarget"+v),d&&o.getAttribute("morphNormal"+v)!==void 0&&o.deleteAttribute("morphNormal"+v),n[v]=0)}const y=o.morphTargetsRelative?1:1-m;c.getUniforms().setValue(e,"morphTargetBaseInfluence",y),c.getUniforms().setValue(e,"morphTargetInfluences",n)}return{update:r}}function Qp(e,t,n,i){let r=new WeakMap();function s(a){const c=i.render.frame,l=a.geometry,h=t.get(a,l);return r.get(h)!==c&&(l.isGeometry&&h.updateFromObject(a),t.update(h),r.set(h,c)),a.isInstancedMesh&&(n.update(a.instanceMatrix,34962),a.instanceColor!==null&&n.update(a.instanceColor,34962)),h}function o(){r=new WeakMap()}return{update:s,dispose:o}}function Cn(e,t,n,i,r,s,o,a,c,l){e=e!==void 0?e:[],t=t!==void 0?t:$r,o=o!==void 0?o:tn,Ue.call(this,e,t,n,i,r,s,o,a,c,l),this.flipY=!1}Cn.prototype=Object.create(Ue.prototype);Cn.prototype.constructor=Cn;Cn.prototype.isCubeTexture=!0;Object.defineProperty(Cn.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function _r(e,t,n,i){Ue.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=it,this.minFilter=it,this.wrapR=nt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}_r.prototype=Object.create(Ue.prototype);_r.prototype.constructor=_r;_r.prototype.isDataTexture2DArray=!0;function wr(e,t,n,i){Ue.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:i||1},this.magFilter=it,this.minFilter=it,this.wrapR=nt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}wr.prototype=Object.create(Ue.prototype);wr.prototype.constructor=wr;wr.prototype.isDataTexture3D=!0;const Cc=new Ue(),$p=new _r(),em=new wr(),Pc=new Cn(),Ic=[],Dc=[],Oc=new Float32Array(16),Fc=new Float32Array(9),Nc=new Float32Array(4);function Oi(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let s=Ic[r];if(s===void 0&&(s=new Float32Array(r),Ic[r]=s),t!==0){i.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=n,e[o].toArray(s,a)}return s}function Ct(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function St(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Bc(e,t){let n=Dc[t];n===void 0&&(n=new Int32Array(t),Dc[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function tm(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1f(this.addr,t),n[0]=t}function nm(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Ct(n,t))return;e.uniform2fv(this.addr,t),St(n,t)}}function im(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Ct(n,t))return;e.uniform3fv(this.addr,t),St(n,t)}}function rm(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Ct(n,t))return;e.uniform4fv(this.addr,t),St(n,t)}}function sm(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Ct(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),St(n,t)}else{if(Ct(n,i))return;Nc.set(i),e.uniformMatrix2fv(this.addr,!1,Nc),St(n,i)}}function om(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Ct(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),St(n,t)}else{if(Ct(n,i))return;Fc.set(i),e.uniformMatrix3fv(this.addr,!1,Fc),St(n,i)}}function am(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Ct(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),St(n,t)}else{if(Ct(n,i))return;Oc.set(i),e.uniformMatrix4fv(this.addr,!1,Oc),St(n,i)}}function cm(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||Cc,r)}function lm(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||$p,r)}function um(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||em,r)}function hm(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||Pc,r)}function dm(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1i(this.addr,t),n[0]=t}function fm(e,t){const n=this.cache;if(Ct(n,t))return;e.uniform2iv(this.addr,t),St(n,t)}function pm(e,t){const n=this.cache;if(Ct(n,t))return;e.uniform3iv(this.addr,t),St(n,t)}function mm(e,t){const n=this.cache;if(Ct(n,t))return;e.uniform4iv(this.addr,t),St(n,t)}function gm(e,t){const n=this.cache;if(n[0]===t)return;e.uniform1ui(this.addr,t),n[0]=t}function vm(e){switch(e){case 5126:return tm;case 35664:return nm;case 35665:return im;case 35666:return rm;case 35674:return sm;case 35675:return om;case 35676:return am;case 5124:case 35670:return dm;case 35667:case 35671:return fm;case 35668:case 35672:return pm;case 35669:case 35673:return mm;case 5125:return gm;case 35678:case 36198:case 36298:case 36306:case 35682:return cm;case 35679:case 36299:case 36307:return um;case 35680:case 36300:case 36308:case 36293:return hm;case 36289:case 36303:case 36311:case 36292:return lm}}function ym(e,t){e.uniform1fv(this.addr,t)}function xm(e,t){e.uniform1iv(this.addr,t)}function bm(e,t){e.uniform2iv(this.addr,t)}function _m(e,t){e.uniform3iv(this.addr,t)}function wm(e,t){e.uniform4iv(this.addr,t)}function Mm(e,t){const n=Oi(t,this.size,2);e.uniform2fv(this.addr,n)}function Tm(e,t){const n=Oi(t,this.size,3);e.uniform3fv(this.addr,n)}function Em(e,t){const n=Oi(t,this.size,4);e.uniform4fv(this.addr,n)}function Sm(e,t){const n=Oi(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Am(e,t){const n=Oi(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Lm(e,t){const n=Oi(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Rm(e,t,n){const i=t.length,r=Bc(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(t[s]||Cc,r[s])}function Cm(e,t,n){const i=t.length,r=Bc(n,i);e.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(t[s]||Pc,r[s])}function Pm(e){switch(e){case 5126:return ym;case 35664:return Mm;case 35665:return Tm;case 35666:return Em;case 35674:return Sm;case 35675:return Am;case 35676:return Lm;case 5124:case 35670:return xm;case 35667:case 35671:return bm;case 35668:case 35672:return _m;case 35669:case 35673:return wm;case 35678:case 36198:case 36298:case 36306:case 35682:return Rm;case 35680:case 36300:case 36308:case 36293:return Cm}}function Im(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=vm(t.type)}function Gc(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Pm(t.type)}Gc.prototype.updateCache=function(e){const t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),St(t,e)};function Uc(e){this.id=e,this.seq=[],this.map={}}Uc.prototype.setValue=function(e,t,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(e,t[o.id],n)}};const ea=/([\w\d_]+)(\])?(\[|\.)?/g;function Hc(e,t){e.seq.push(t),e.map[t.id]=t}function Dm(e,t,n){const i=e.name,r=i.length;for(ea.lastIndex=0;;){const s=ea.exec(i),o=ea.lastIndex;let a=s[1];const c=s[2]==="]",l=s[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===r){Hc(n,l===void 0?new Im(a,e,t):new Gc(a,e,t));break}else{const h=n.map;let u=h[a];u===void 0&&(u=new Uc(a),Hc(n,u)),n=u}}}function Pn(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),s=e.getUniformLocation(t,r.name);Dm(r,s,this)}}Pn.prototype.setValue=function(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)};Pn.prototype.setOptional=function(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)};Pn.upload=function(e,t,n,i){for(let r=0,s=t.length;r!==s;++r){const o=t[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(e,a.value,i)}};Pn.seqWithValue=function(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const s=e[i];s.id in t&&n.push(s)}return n};function kc(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let Om=0;function Fm(e){const t=e.split(`
`);for(let n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function zc(e){switch(e){case pi:return["Linear","( value )"];case mi:return["sRGB","( value )"];case uc:return["RGBE","( value )"];case hc:return["RGBM","( value, 7.0 )"];case dc:return["RGBM","( value, 16.0 )"];case fc:return["RGBD","( value, 256.0 )"];case cs:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case jh:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function Vc(e,t,n){const i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const s=e.getShaderSource(t);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Fm(s)}function Mr(e,t){const n=zc(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Nm(e,t){const n=zc(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Bm(e,t){let n;switch(t){case ju:n="Linear";break;case qu:n="Reinhard";break;case Xu:n="OptimizedCineon";break;case Yu:n="ACESFilmic";break;case Zu:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Gm(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(Tr).join(`
`)}function Um(e){const t=[];for(const n in e){const i=e[n];if(i===!1)continue;t.push("#define "+n+" "+i)}return t.join(`
`)}function Hm(e,t){const n={},i=e.getProgramParameter(t,35721);for(let r=0;r<i;r++){const s=e.getActiveAttrib(t,r),o=s.name;n[o]=e.getAttribLocation(t,o)}return n}function Tr(e){return e!==""}function Wc(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function jc(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const km=/^[ \t]*#include +<([\w\d./]+)>/gm;function ta(e){return e.replace(km,zm)}function zm(e,t){const n=De[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return ta(n)}const Vm=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Wm=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xc(e){return e.replace(Wm,qc).replace(Vm,jm)}function jm(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),qc(e,t,n,i)}function qc(e,t,n,i){let r="";for(let s=parseInt(t);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Yc(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function qm(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===Va?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===Mu?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===ir&&(t="SHADOWMAP_TYPE_VSM"),t}function Xm(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case $r:case es:t="ENVMAP_TYPE_CUBE";break;case ts:case ns:t="ENVMAP_TYPE_CUBE_UV";break}return t}function Ym(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case es:case ns:t="ENVMAP_MODE_REFRACTION";break}return t}function Zm(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Qr:t="ENVMAP_BLENDING_MULTIPLY";break;case Vu:t="ENVMAP_BLENDING_MIX";break;case Wu:t="ENVMAP_BLENDING_ADD";break}return t}function Jm(e,t,n,i){const r=e.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const c=qm(n),l=Xm(n),h=Ym(n),u=Zm(n),f=e.gammaFactor>0?e.gammaFactor:1,d=n.isWebGL2?"":Gm(n),m=Um(s),y=r.createProgram();let v,g,p=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(v=[m].filter(Tr).join(`
`),v.length>0&&(v+=`
`),g=[d,m].filter(Tr).join(`
`),g.length>0&&(g+=`
`)):(v=[Yc(n),"#define SHADER_NAME "+n.shaderName,m,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Tr).join(`
`),g=[d,Yc(n),"#define SHADER_NAME "+n.shaderName,m,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==or?"#define TONE_MAPPING":"",n.toneMapping!==or?De.tonemapping_pars_fragment:"",n.toneMapping!==or?Bm("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",De.encodings_pars_fragment,n.map?Mr("mapTexelToLinear",n.mapEncoding):"",n.matcap?Mr("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Mr("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Mr("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Mr("lightMapTexelToLinear",n.lightMapEncoding):"",Nm("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Tr).join(`
`)),o=ta(o),o=Wc(o,n),o=jc(o,n),a=ta(a),a=Wc(a,n),a=jc(a,n),o=Xc(o),a=Xc(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(p=`#version 300 es
`,v=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,g=["#define varying in",n.glslVersion===pc?"":"out highp vec4 pc_fragColor;",n.glslVersion===pc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const _=p+v+o,E=p+g+a,A=kc(r,35633,_),b=kc(r,35632,E);if(r.attachShader(y,A),r.attachShader(y,b),n.index0AttributeName!==void 0?r.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y),e.debug.checkShaderErrors){const N=r.getProgramInfoLog(y).trim(),ne=r.getShaderInfoLog(A).trim(),z=r.getShaderInfoLog(b).trim();let q=!0,W=!0;if(r.getProgramParameter(y,35714)===!1){q=!1;const H=Vc(r,A,"vertex"),G=Vc(r,b,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(y,35715),"gl.getProgramInfoLog",N,H,G)}else N!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",N):(ne===""||z==="")&&(W=!1);W&&(this.diagnostics={runnable:q,programLog:N,vertexShader:{log:ne,prefix:v},fragmentShader:{log:z,prefix:g}})}r.deleteShader(A),r.deleteShader(b);let C;this.getUniforms=function(){return C===void 0&&(C=new Pn(r,y)),C};let j;return this.getAttributes=function(){return j===void 0&&(j=Hm(r,y)),j},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.name=n.shaderName,this.id=Om++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=A,this.fragmentShader=b,this}function Km(e,t,n,i,r,s){const o=[],a=i.isWebGL2,c=i.logarithmicDepthBuffer,l=i.floatVertexTextures,h=i.maxVertexUniforms,u=i.vertexTextures;let f=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(b){const C=b.skeleton,j=C.bones;if(l)return 1024;{const N=h,ne=Math.floor((N-20)/4),z=Math.min(ne,j.length);return z<j.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+j.length+" bones. This GPU supports "+z+"."),0):z}}function v(b){let C;return b?b.isTexture?C=b.encoding:b.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),C=b.texture.encoding):C=pi,C}function g(b,C,j,N,ne){const z=N.fog,q=b.isMeshStandardMaterial?N.environment:null,W=t.get(b.envMap||q),H=d[b.type],G=ne.isSkinnedMesh?y(ne):0;b.precision!==null&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));let K,re;if(H){const ae=Xt[H];K=ae.vertexShader,re=ae.fragmentShader}else K=b.vertexShader,re=b.fragmentShader;const se=e.getRenderTarget(),ue={isWebGL2:a,shaderID:H,shaderName:b.type,vertexShader:K,fragmentShader:re,defines:b.defines,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,instancing:ne.isInstancedMesh===!0,instancingColor:ne.isInstancedMesh===!0&&ne.instanceColor!==null,supportsVertexTextures:u,outputEncoding:se!==null?v(se.texture):e.outputEncoding,map:!!b.map,mapEncoding:v(b.map),matcap:!!b.matcap,matcapEncoding:v(b.matcap),envMap:!!W,envMapMode:W&&W.mapping,envMapEncoding:v(W),envMapCubeUV:!!W&&(W.mapping===ts||W.mapping===ns),lightMap:!!b.lightMap,lightMapEncoding:v(b.lightMap),aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:v(b.emissiveMap),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===Yh,tangentSpaceNormalMap:b.normalMapType===wn,clearcoatMap:!!b.clearcoatMap,clearcoatRoughnessMap:!!b.clearcoatRoughnessMap,clearcoatNormalMap:!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,alphaMap:!!b.alphaMap,gradientMap:!!b.gradientMap,sheen:!!b.sheen,transmissionMap:!!b.transmissionMap,combine:b.combine,vertexTangents:b.normalMap&&b.vertexTangents,vertexColors:b.vertexColors,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.displacementMap||!!b.transmissionMap,uvsVertexOnly:!(!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatNormalMap||!!b.transmissionMap)&&!!b.displacementMap,fog:!!z,useFog:b.fog,fogExp2:z&&z.isFogExp2,flatShading:b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:c,skinning:b.skinning&&G>0,maxBones:G,useVertexTexture:l,morphTargets:b.morphTargets,morphNormals:b.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:b.dithering,shadowMapEnabled:e.shadowMap.enabled&&j.length>0,shadowMapType:e.shadowMap.type,toneMapping:b.toneMapped?e.toneMapping:or,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,alphaTest:b.alphaTest,doubleSided:b.side===ai,flipSided:b.side===st,depthPacking:b.depthPacking!==void 0?b.depthPacking:!1,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()};return ue}function p(b){const C=[];if(b.shaderID?C.push(b.shaderID):(C.push(b.fragmentShader),C.push(b.vertexShader)),b.defines!==void 0)for(const j in b.defines)C.push(j),C.push(b.defines[j]);if(b.isRawShaderMaterial===!1){for(let j=0;j<m.length;j++)C.push(b[m[j]]);C.push(e.outputEncoding),C.push(e.gammaFactor)}return C.push(b.customProgramCacheKey),C.join()}function _(b){const C=d[b.type];let j;if(C){const N=Xt[C];j=dd.clone(N.uniforms)}else j=b.uniforms;return j}function E(b,C){let j;for(let N=0,ne=o.length;N<ne;N++){const z=o[N];if(z.cacheKey===C){j=z,++j.usedTimes;break}}return j===void 0&&(j=new Jm(e,C,b,r),o.push(j)),j}function A(b){if(--b.usedTimes===0){const C=o.indexOf(b);o[C]=o[o.length-1],o.pop(),b.destroy()}}return{getParameters:g,getProgramCacheKey:p,getUniforms:_,acquireProgram:E,releaseProgram:A,programs:o}}function Qm(){let e=new WeakMap();function t(s){let o=e.get(s);return o===void 0&&(o={},e.set(s,o)),o}function n(s){e.delete(s)}function i(s,o,a){e.get(s)[o]=a}function r(){e=new WeakMap()}return{get:t,remove:n,update:i,dispose:r}}function $m(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function eg(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Zc(e){const t=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(f,d,m,y,v,g){let p=t[n];const _=e.get(m);return p===void 0?(p={id:f.id,object:f,geometry:d,material:m,program:_.program||s,groupOrder:y,renderOrder:f.renderOrder,z:v,group:g},t[n]=p):(p.id=f.id,p.object=f,p.geometry=d,p.material=m,p.program=_.program||s,p.groupOrder=y,p.renderOrder=f.renderOrder,p.z=v,p.group=g),n++,p}function c(f,d,m,y,v,g){const p=a(f,d,m,y,v,g);(m.transparent===!0?r:i).push(p)}function l(f,d,m,y,v,g){const p=a(f,d,m,y,v,g);(m.transparent===!0?r:i).unshift(p)}function h(f,d){i.length>1&&i.sort(f||$m),r.length>1&&r.sort(d||eg)}function u(){for(let f=n,d=t.length;f<d;f++){const m=t[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.program=null,m.group=null}}return{opaque:i,transparent:r,init:o,push:c,unshift:l,finish:u,sort:h}}function tg(e){let t=new WeakMap();function n(r,s){const o=t.get(r);let a;return o===void 0?(a=new Zc(e),t.set(r,new WeakMap()),t.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new Zc(e),o.set(s,a))),a}function i(){t=new WeakMap()}return{get:n,dispose:i}}function ng(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new M(),color:new fe()};break;case"SpotLight":n={position:new M(),direction:new M(),color:new fe(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new M(),color:new fe(),distance:0,decay:0};break;case"HemisphereLight":n={direction:new M(),skyColor:new fe(),groundColor:new fe()};break;case"RectAreaLight":n={color:new fe(),position:new M(),halfWidth:new M(),halfHeight:new M()};break}return e[t.id]=n,n}}}function ig(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $()};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $()};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new $(),shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let rg=0;function sg(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function og(){const e=new ng(),t=ig(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new M());const i=new M(),r=new Re(),s=new Re();function o(a,c,l){let h=0,u=0,f=0;for(let C=0;C<9;C++)n.probe[C].set(0,0,0);let d=0,m=0,y=0,v=0,g=0,p=0,_=0,E=0;const A=l.matrixWorldInverse;a.sort(sg);for(let C=0,j=a.length;C<j;C++){const N=a[C],ne=N.color,z=N.intensity,q=N.distance,W=N.shadow&&N.shadow.map?N.shadow.map.texture:null;if(N.isAmbientLight)h+=ne.r*z,u+=ne.g*z,f+=ne.b*z;else if(N.isLightProbe)for(let H=0;H<9;H++)n.probe[H].addScaledVector(N.sh.coefficients[H],z);else if(N.isDirectionalLight){const H=e.get(N);if(H.color.copy(N.color).multiplyScalar(N.intensity),H.direction.setFromMatrixPosition(N.matrixWorld),i.setFromMatrixPosition(N.target.matrixWorld),H.direction.sub(i),H.direction.transformDirection(A),N.castShadow){const G=N.shadow,K=t.get(N);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.directionalShadow[d]=K,n.directionalShadowMap[d]=W,n.directionalShadowMatrix[d]=N.shadow.matrix,p++}n.directional[d]=H,d++}else if(N.isSpotLight){const H=e.get(N);if(H.position.setFromMatrixPosition(N.matrixWorld),H.position.applyMatrix4(A),H.color.copy(ne).multiplyScalar(z),H.distance=q,H.direction.setFromMatrixPosition(N.matrixWorld),i.setFromMatrixPosition(N.target.matrixWorld),H.direction.sub(i),H.direction.transformDirection(A),H.coneCos=Math.cos(N.angle),H.penumbraCos=Math.cos(N.angle*(1-N.penumbra)),H.decay=N.decay,N.castShadow){const G=N.shadow,K=t.get(N);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,n.spotShadow[y]=K,n.spotShadowMap[y]=W,n.spotShadowMatrix[y]=N.shadow.matrix,E++}n.spot[y]=H,y++}else if(N.isRectAreaLight){const H=e.get(N);H.color.copy(ne).multiplyScalar(z),H.position.setFromMatrixPosition(N.matrixWorld),H.position.applyMatrix4(A),s.identity(),r.copy(N.matrixWorld),r.premultiply(A),s.extractRotation(r),H.halfWidth.set(N.width*.5,0,0),H.halfHeight.set(0,N.height*.5,0),H.halfWidth.applyMatrix4(s),H.halfHeight.applyMatrix4(s),n.rectArea[v]=H,v++}else if(N.isPointLight){const H=e.get(N);if(H.position.setFromMatrixPosition(N.matrixWorld),H.position.applyMatrix4(A),H.color.copy(N.color).multiplyScalar(N.intensity),H.distance=N.distance,H.decay=N.decay,N.castShadow){const G=N.shadow,K=t.get(N);K.shadowBias=G.bias,K.shadowNormalBias=G.normalBias,K.shadowRadius=G.radius,K.shadowMapSize=G.mapSize,K.shadowCameraNear=G.camera.near,K.shadowCameraFar=G.camera.far,n.pointShadow[m]=K,n.pointShadowMap[m]=W,n.pointShadowMatrix[m]=N.shadow.matrix,_++}n.point[m]=H,m++}else if(N.isHemisphereLight){const H=e.get(N);H.direction.setFromMatrixPosition(N.matrixWorld),H.direction.transformDirection(A),H.direction.normalize(),H.skyColor.copy(N.color).multiplyScalar(z),H.groundColor.copy(N.groundColor).multiplyScalar(z),n.hemi[g]=H,g++}}v>0&&(n.rectAreaLTC1=de.LTC_1,n.rectAreaLTC2=de.LTC_2),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=f;const b=n.hash;(b.directionalLength!==d||b.pointLength!==m||b.spotLength!==y||b.rectAreaLength!==v||b.hemiLength!==g||b.numDirectionalShadows!==p||b.numPointShadows!==_||b.numSpotShadows!==E)&&(n.directional.length=d,n.spot.length=y,n.rectArea.length=v,n.point.length=m,n.hemi.length=g,n.directionalShadow.length=p,n.directionalShadowMap.length=p,n.pointShadow.length=_,n.pointShadowMap.length=_,n.spotShadow.length=E,n.spotShadowMap.length=E,n.directionalShadowMatrix.length=p,n.pointShadowMatrix.length=_,n.spotShadowMatrix.length=E,b.directionalLength=d,b.pointLength=m,b.spotLength=y,b.rectAreaLength=v,b.hemiLength=g,b.numDirectionalShadows=p,b.numPointShadows=_,b.numSpotShadows=E,n.version=rg++)}return{setup:o,state:n}}function Jc(){const e=new og(),t=[],n=[];function i(){t.length=0,n.length=0}function r(c){t.push(c)}function s(c){n.push(c)}function o(c){e.setup(t,n,c)}const a={lightsArray:t,shadowsArray:n,lights:e};return{init:i,state:a,setupLights:o,pushLight:r,pushShadow:s}}function ag(){let e=new WeakMap();function t(i,r){let s;return e.has(i)===!1?(s=new Jc(),e.set(i,new WeakMap()),e.get(i).set(r,s)):e.get(i).has(r)===!1?(s=new Jc(),e.get(i).set(r,s)):s=e.get(i).get(r),s}function n(){e=new WeakMap()}return{get:t,dispose:n}}function Vn(e){we.call(this),this.type="MeshDepthMaterial",this.depthPacking=qh,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}Vn.prototype=Object.create(we.prototype);Vn.prototype.constructor=Vn;Vn.prototype.isMeshDepthMaterial=!0;Vn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function Wn(e){we.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new M(),this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}Wn.prototype=Object.create(we.prototype);Wn.prototype.constructor=Wn;Wn.prototype.isMeshDistanceMaterial=!0;Wn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this};var cg=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,lg=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Kc(e,t,n){let i=new Ls();const r=new $(),s=new $(),o=new He(),a=[],c=[],l={},h={0:st,1:oi,2:ai},u=new xt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new $()},radius:{value:4}},vertexShader:lg,fragmentShader:cg}),f=u.clone();f.defines.HORIZONAL_PASS=1;const d=new Se();d.setAttribute("position",new Me(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new qe(d,u),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Va,this.render=function(A,b,C){if(y.enabled===!1)return;if(y.autoUpdate===!1&&y.needsUpdate===!1)return;if(A.length===0)return;const j=e.getRenderTarget(),N=e.getActiveCubeFace(),ne=e.getActiveMipmapLevel(),z=e.state;z.setBlending(rr),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let q=0,W=A.length;q<W;q++){const H=A[q],G=H.shadow;if(G.autoUpdate===!1&&G.needsUpdate===!1)continue;if(G===void 0){console.warn("THREE.WebGLShadowMap:",H,"has no shadow.");continue}r.copy(G.mapSize);const K=G.getFrameExtents();if(r.multiply(K),s.copy(G.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/K.x),r.x=s.x*K.x,G.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/K.y),r.y=s.y*K.y,G.mapSize.y=s.y)),G.map===null&&!G.isPointLightShadow&&this.type===ir){const se={minFilter:Ze,magFilter:Ze,format:Ft};G.map=new Bt(r.x,r.y,se),G.map.texture.name=H.name+".shadowMap",G.mapPass=new Bt(r.x,r.y,se),G.camera.updateProjectionMatrix()}if(G.map===null){const se={minFilter:it,magFilter:it,format:Ft};G.map=new Bt(r.x,r.y,se),G.map.texture.name=H.name+".shadowMap",G.camera.updateProjectionMatrix()}e.setRenderTarget(G.map),e.clear();const re=G.getViewportCount();for(let se=0;se<re;se++){const ue=G.getViewport(se);o.set(s.x*ue.x,s.y*ue.y,s.x*ue.z,s.y*ue.w),z.viewport(o),G.updateMatrices(H,se),i=G.getFrustum(),E(b,C,G.camera,H,this.type)}!G.isPointLightShadow&&this.type===ir&&v(G,C),G.needsUpdate=!1}y.needsUpdate=!1,e.setRenderTarget(j,N,ne)};function v(A,b){const C=t.update(m);u.uniforms.shadow_pass.value=A.map.texture,u.uniforms.resolution.value=A.mapSize,u.uniforms.radius.value=A.radius,e.setRenderTarget(A.mapPass),e.clear(),e.renderBufferDirect(b,null,C,u,m,null),f.uniforms.shadow_pass.value=A.mapPass.texture,f.uniforms.resolution.value=A.mapSize,f.uniforms.radius.value=A.radius,e.setRenderTarget(A.map),e.clear(),e.renderBufferDirect(b,null,C,f,m,null)}function g(A,b,C){const j=A<<0|b<<1|C<<2;let N=a[j];return N===void 0&&(N=new Vn({depthPacking:Xh,morphTargets:A,skinning:b}),a[j]=N),N}function p(A,b,C){const j=A<<0|b<<1|C<<2;let N=c[j];return N===void 0&&(N=new Wn({morphTargets:A,skinning:b}),c[j]=N),N}function _(A,b,C,j,N,ne,z){let q=null,W=g,H=A.customDepthMaterial;if(j.isPointLight===!0&&(W=p,H=A.customDistanceMaterial),H===void 0){let G=!1;C.morphTargets===!0&&(G=b.morphAttributes&&b.morphAttributes.position&&b.morphAttributes.position.length>0);let K=!1;A.isSkinnedMesh===!0&&(C.skinning===!0?K=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",A));const re=A.isInstancedMesh===!0;q=W(G,K,re)}else q=H;if(e.localClippingEnabled&&C.clipShadows===!0&&C.clippingPlanes.length!==0){const G=q.uuid,K=C.uuid;let re=l[G];re===void 0&&(re={},l[G]=re);let se=re[K];se===void 0&&(se=q.clone(),re[K]=se),q=se}return q.visible=C.visible,q.wireframe=C.wireframe,z===ir?q.side=C.shadowSide!==null?C.shadowSide:C.side:q.side=C.shadowSide!==null?C.shadowSide:h[C.side],q.clipShadows=C.clipShadows,q.clippingPlanes=C.clippingPlanes,q.clipIntersection=C.clipIntersection,q.wireframeLinewidth=C.wireframeLinewidth,q.linewidth=C.linewidth,j.isPointLight===!0&&q.isMeshDistanceMaterial===!0&&(q.referencePosition.setFromMatrixPosition(j.matrixWorld),q.nearDistance=N,q.farDistance=ne),q}function E(A,b,C,j,N){if(A.visible===!1)return;const ne=A.layers.test(b.layers);if(ne&&(A.isMesh||A.isLine||A.isPoints)&&((A.castShadow||A.receiveShadow&&N===ir)&&(!A.frustumCulled||i.intersectsObject(A)))){A.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,A.matrixWorld);const q=t.update(A),W=A.material;if(Array.isArray(W)){const H=q.groups;for(let G=0,K=H.length;G<K;G++){const re=H[G],se=W[re.materialIndex];if(se&&se.visible){const ue=_(A,q,se,j,C.near,C.far,N);e.renderBufferDirect(C,null,q,ue,A,re)}}}else if(W.visible){const H=_(A,q,W,j,C.near,C.far,N);e.renderBufferDirect(C,null,q,H,A,null)}}const z=A.children;for(let q=0,W=z.length;q<W;q++)E(z[q],b,C,j,N)}}function ug(e,t,n){const i=n.isWebGL2;function r(){let F=!1;const ie=new He();let oe=null;const xe=new He(0,0,0,0);return{setMask:function(ce){oe!==ce&&!F&&(e.colorMask(ce,ce,ce,ce),oe=ce)},setLocked:function(ce){F=ce},setClear:function(ce,pe,me,Te,le){le===!0&&(ce*=Te,pe*=Te,me*=Te),ie.set(ce,pe,me,Te),xe.equals(ie)===!1&&(e.clearColor(ce,pe,me,Te),xe.copy(ie))},reset:function(){F=!1,oe=null,xe.set(-1,0,0,0)}}}function s(){let F=!1,ie=null,oe=null,xe=null;return{setTest:function(ce){ce?ae(2929):ve(2929)},setMask:function(ce){ie!==ce&&!F&&(e.depthMask(ce),ie=ce)},setFunc:function(ce){if(oe!==ce){if(ce)switch(ce){case Nu:e.depthFunc(512);break;case Bu:e.depthFunc(519);break;case Gu:e.depthFunc(513);break;case vo:e.depthFunc(515);break;case Uu:e.depthFunc(514);break;case Hu:e.depthFunc(518);break;case ku:e.depthFunc(516);break;case zu:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);oe=ce}},setLocked:function(ce){F=ce},setClear:function(ce){xe!==ce&&(e.clearDepth(ce),xe=ce)},reset:function(){F=!1,ie=null,oe=null,xe=null}}}function o(){let F=!1,ie=null,oe=null,xe=null,ce=null,pe=null,me=null,Te=null,le=null;return{setTest:function(_e){F||(_e?ae(2960):ve(2960))},setMask:function(_e){ie!==_e&&!F&&(e.stencilMask(_e),ie=_e)},setFunc:function(_e,Be,et){(oe!==_e||xe!==Be||ce!==et)&&(e.stencilFunc(_e,Be,et),oe=_e,xe=Be,ce=et)},setOp:function(_e,Be,et){(pe!==_e||me!==Be||Te!==et)&&(e.stencilOp(_e,Be,et),pe=_e,me=Be,Te=et)},setLocked:function(_e){F=_e},setClear:function(_e){le!==_e&&(e.clearStencil(_e),le=_e)},reset:function(){F=!1,ie=null,oe=null,xe=null,ce=null,pe=null,me=null,Te=null,le=null}}}const a=new r(),c=new s(),l=new o();let h={},u=null,f=null,d=null,m=null,y=null,v=null,g=null,p=null,_=null,E=!1,A=null,b=null,C=null,j=null,N=null;const ne=e.getParameter(35661);let z=!1,q=0;const W=e.getParameter(7938);W.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL\ ([0-9])/.exec(W)[1]),z=q>=1):W.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(W)[1]),z=q>=2);let H=null,G={};const K=new He(),re=new He();function se(F,ie,oe){const xe=new Uint8Array(4),ce=e.createTexture();e.bindTexture(F,ce),e.texParameteri(F,10241,9728),e.texParameteri(F,10240,9728);for(let pe=0;pe<oe;pe++)e.texImage2D(ie+pe,0,6408,1,1,0,6408,5121,xe);return ce}const ue={};ue[3553]=se(3553,3553,1),ue[34067]=se(34067,34069,6),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),ae(2929),c.setFunc(vo),L(!1),D(za),ae(2884),x(rr);function ae(F){h[F]!==!0&&(e.enable(F),h[F]=!0)}function ve(F){h[F]!==!1&&(e.disable(F),h[F]=!1)}function Ce(F){return u!==F?(e.useProgram(F),u=F,!0):!1}const Ae={[ci]:32774,[Eu]:32778,[Su]:32779};if(i)Ae[Ya]=32775,Ae[Za]=32776;else{const F=t.get("EXT_blend_minmax");F!==null&&(Ae[Ya]=F.MIN_EXT,Ae[Za]=F.MAX_EXT)}const T={[Au]:0,[Lu]:1,[Ru]:768,[Ja]:770,[Fu]:776,[Du]:774,[Pu]:772,[Cu]:769,[Ka]:771,[Ou]:775,[Iu]:773};function x(F,ie,oe,xe,ce,pe,me,Te){if(F===rr){f&&(ve(3042),f=!1);return}if(f||(ae(3042),f=!0),F!==Tu){if(F!==d||Te!==E){if((m!==ci||g!==ci)&&(e.blendEquation(32774),m=ci,g=ci),Te)switch(F){case sr:e.blendFuncSeparate(1,771,1,771);break;case ja:e.blendFunc(1,1);break;case qa:e.blendFuncSeparate(0,0,769,771);break;case Xa:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case sr:e.blendFuncSeparate(770,771,1,771);break;case ja:e.blendFunc(770,1);break;case qa:e.blendFunc(0,769);break;case Xa:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}y=null,v=null,p=null,_=null,d=F,E=Te}return}ce=ce||ie,pe=pe||oe,me=me||xe,(ie!==m||ce!==g)&&(e.blendEquationSeparate(Ae[ie],Ae[ce]),m=ie,g=ce),(oe!==y||xe!==v||pe!==p||me!==_)&&(e.blendFuncSeparate(T[oe],T[xe],T[pe],T[me]),y=oe,v=xe,p=pe,_=me),d=F,E=null}function I(F,ie){F.side===ai?ve(2884):ae(2884);let oe=F.side===st;ie&&(oe=!oe),L(oe),F.blending===sr&&F.transparent===!1?x(rr):x(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),c.setFunc(F.depthFunc),c.setTest(F.depthTest),c.setMask(F.depthWrite),a.setMask(F.colorWrite);const xe=F.stencilWrite;l.setTest(xe),xe&&(l.setMask(F.stencilWriteMask),l.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),l.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),B(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits)}function L(F){A!==F&&(F?e.frontFace(2304):e.frontFace(2305),A=F)}function D(F){F!==_u?(ae(2884),F!==b&&(F===za?e.cullFace(1029):F===wu?e.cullFace(1028):e.cullFace(1032))):ve(2884),b=F}function O(F){F!==C&&(z&&e.lineWidth(F),C=F)}function B(F,ie,oe){F?(ae(32823),(j!==ie||N!==oe)&&(e.polygonOffset(ie,oe),j=ie,N=oe)):ve(32823)}function P(F){F?ae(3089):ve(3089)}function U(F){F===void 0&&(F=33984+ne-1),H!==F&&(e.activeTexture(F),H=F)}function k(F,ie){H===null&&U();let oe=G[H];oe===void 0&&(oe={type:void 0,texture:void 0},G[H]=oe),(oe.type!==F||oe.texture!==ie)&&(e.bindTexture(F,ie||ue[F]),oe.type=F,oe.texture=ie)}function X(){const F=G[H];F!==void 0&&F.type!==void 0&&(e.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function V(){try{e.compressedTexImage2D.apply(e,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ee(){try{e.texImage2D.apply(e,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function w(){try{e.texImage3D.apply(e,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function S(F){K.equals(F)===!1&&(e.scissor(F.x,F.y,F.z,F.w),K.copy(F))}function Q(F){re.equals(F)===!1&&(e.viewport(F.x,F.y,F.z,F.w),re.copy(F))}function J(){h={},H=null,G={},u=null,d=null,A=null,b=null,a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:ae,disable:ve,useProgram:Ce,setBlending:x,setMaterial:I,setFlipSided:L,setCullFace:D,setLineWidth:O,setPolygonOffset:B,setScissorTest:P,activeTexture:U,bindTexture:k,unbindTexture:X,compressedTexImage2D:V,texImage2D:ee,texImage3D:w,scissor:S,viewport:Q,reset:J}}function hg(e,t,n,i,r,s,o){const a=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap();let d,m=!1;try{m=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(w){}function y(w,S){return m?new OffscreenCanvas(w,S):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function v(w,S,Q,J){let F=1;if((w.width>J||w.height>J)&&(F=J/Math.max(w.width,w.height)),F<1||S===!0)if(typeof HTMLImageElement!="undefined"&&w instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&w instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&w instanceof ImageBitmap){const ie=S?Ee.floorPowerOfTwo:Math.floor,oe=ie(F*w.width),xe=ie(F*w.height);d===void 0&&(d=y(oe,xe));const ce=Q?y(oe,xe):d;ce.width=oe,ce.height=xe;const pe=ce.getContext("2d");return pe.drawImage(w,0,0,oe,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+w.width+"x"+w.height+") to ("+oe+"x"+xe+")."),ce}else return"data"in w&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+w.width+"x"+w.height+")."),w;return w}function g(w){return Ee.isPowerOfTwo(w.width)&&Ee.isPowerOfTwo(w.height)}function p(w){return a?!1:w.wrapS!==nt||w.wrapT!==nt||w.minFilter!==it&&w.minFilter!==Ze}function _(w,S){return w.generateMipmaps&&S&&w.minFilter!==it&&w.minFilter!==Ze}function E(w,S,Q,J){e.generateMipmap(w);const F=i.get(S);F.__maxMipLevel=Math.log(Math.max(Q,J))*Math.LOG2E}function A(w,S,Q){if(a===!1)return S;if(w!==null){if(e[w]!==void 0)return e[w];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+w+"'")}let J=S;return S===6403&&(Q===5126&&(J=33326),Q===5131&&(J=33325),Q===5121&&(J=33321)),S===6407&&(Q===5126&&(J=34837),Q===5131&&(J=34843),Q===5121&&(J=32849)),S===6408&&(Q===5126&&(J=34836),Q===5131&&(J=34842),Q===5121&&(J=32856)),(J===33325||J===33326||J===34842||J===34836)&&t.get("EXT_color_buffer_float"),J}function b(w){return w===it||w===ar||w===cr?9728:9729}function C(w){const S=w.target;S.removeEventListener("dispose",C),N(S),S.isVideoTexture&&f.delete(S),o.memory.textures--}function j(w){const S=w.target;S.removeEventListener("dispose",j),ne(S),o.memory.textures--}function N(w){const S=i.get(w);if(S.__webglInit===void 0)return;e.deleteTexture(S.__webglTexture),i.remove(w)}function ne(w){const S=i.get(w),Q=i.get(w.texture);if(!w)return;if(Q.__webglTexture!==void 0&&e.deleteTexture(Q.__webglTexture),w.depthTexture&&w.depthTexture.dispose(),w.isWebGLCubeRenderTarget)for(let J=0;J<6;J++)e.deleteFramebuffer(S.__webglFramebuffer[J]),S.__webglDepthbuffer&&e.deleteRenderbuffer(S.__webglDepthbuffer[J]);else e.deleteFramebuffer(S.__webglFramebuffer),S.__webglDepthbuffer&&e.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&e.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer&&e.deleteRenderbuffer(S.__webglColorRenderbuffer),S.__webglDepthRenderbuffer&&e.deleteRenderbuffer(S.__webglDepthRenderbuffer);i.remove(w.texture),i.remove(w)}let z=0;function q(){z=0}function W(){const w=z;return w>=c&&console.warn("THREE.WebGLTextures: Trying to use "+w+" texture units while this GPU supports only "+c),z+=1,w}function H(w,S){const Q=i.get(w);if(w.isVideoTexture&&U(w),w.version>0&&Q.__version!==w.version){const J=w.image;if(J===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(J.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(Q,w,S);return}}n.activeTexture(33984+S),n.bindTexture(3553,Q.__webglTexture)}function G(w,S){const Q=i.get(w);if(w.version>0&&Q.__version!==w.version){Ae(Q,w,S);return}n.activeTexture(33984+S),n.bindTexture(35866,Q.__webglTexture)}function K(w,S){const Q=i.get(w);if(w.version>0&&Q.__version!==w.version){Ae(Q,w,S);return}n.activeTexture(33984+S),n.bindTexture(32879,Q.__webglTexture)}function re(w,S){if(w.image.length!==6)return;const Q=i.get(w);if(w.version>0&&Q.__version!==w.version){Ce(Q,w),n.activeTexture(33984+S),n.bindTexture(34067,Q.__webglTexture),e.pixelStorei(37440,w.flipY);const J=w&&(w.isCompressedTexture||w.image[0].isCompressedTexture),F=w.image[0]&&w.image[0].isDataTexture,ie=[];for(let le=0;le<6;le++)!J&&!F?ie[le]=v(w.image[le],!1,!0,l):ie[le]=F?w.image[le].image:w.image[le];const oe=ie[0],xe=g(oe)||a,ce=s.convert(w.format),pe=s.convert(w.type),me=A(w.internalFormat,ce,pe);ve(34067,w,xe);let Te;if(J){for(let le=0;le<6;le++){Te=ie[le].mipmaps;for(let _e=0;_e<Te.length;_e++){const Be=Te[_e];w.format!==Ft&&w.format!==tn?ce!==null?n.compressedTexImage2D(34069+le,_e,me,Be.width,Be.height,0,Be.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+le,_e,me,Be.width,Be.height,0,ce,pe,Be.data)}}Q.__maxMipLevel=Te.length-1}else{Te=w.mipmaps;for(let le=0;le<6;le++)if(F){n.texImage2D(34069+le,0,me,ie[le].width,ie[le].height,0,ce,pe,ie[le].data);for(let _e=0;_e<Te.length;_e++){const Be=Te[_e],et=Be.image[le].image;n.texImage2D(34069+le,_e+1,me,et.width,et.height,0,ce,pe,et.data)}}else{n.texImage2D(34069+le,0,me,ce,pe,ie[le]);for(let _e=0;_e<Te.length;_e++){const Be=Te[_e];n.texImage2D(34069+le,_e+1,me,ce,pe,Be.image[le])}}Q.__maxMipLevel=Te.length}_(w,xe)&&E(34067,w,oe.width,oe.height),Q.__version=w.version,w.onUpdate&&w.onUpdate(w)}else n.activeTexture(33984+S),n.bindTexture(34067,Q.__webglTexture)}function se(w,S){n.activeTexture(33984+S),n.bindTexture(34067,i.get(w).__webglTexture)}const ue={[xn]:10497,[nt]:33071,[li]:33648},ae={[it]:9728,[ar]:9984,[cr]:9986,[Ze]:9729,[is]:9985,[bn]:9987};function ve(w,S,Q){Q?(e.texParameteri(w,10242,ue[S.wrapS]),e.texParameteri(w,10243,ue[S.wrapT]),(w===32879||w===35866)&&e.texParameteri(w,32882,ue[S.wrapR]),e.texParameteri(w,10240,ae[S.magFilter]),e.texParameteri(w,10241,ae[S.minFilter])):(e.texParameteri(w,10242,33071),e.texParameteri(w,10243,33071),(w===32879||w===35866)&&e.texParameteri(w,32882,33071),(S.wrapS!==nt||S.wrapT!==nt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(w,10240,b(S.magFilter)),e.texParameteri(w,10241,b(S.minFilter)),S.minFilter!==it&&S.minFilter!==Ze&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const J=t.get("EXT_texture_filter_anisotropic");if(J){if(S.type===_n&&t.get("OES_texture_float_linear")===null)return;if(S.type===os&&(a||t.get("OES_texture_half_float_linear"))===null)return;(S.anisotropy>1||i.get(S).__currentAnisotropy)&&(e.texParameterf(w,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,r.getMaxAnisotropy())),i.get(S).__currentAnisotropy=S.anisotropy)}}function Ce(w,S){w.__webglInit===void 0&&(w.__webglInit=!0,S.addEventListener("dispose",C),w.__webglTexture=e.createTexture(),o.memory.textures++)}function Ae(w,S,Q){let J=3553;S.isDataTexture2DArray&&(J=35866),S.isDataTexture3D&&(J=32879),Ce(w,S),n.activeTexture(33984+Q),n.bindTexture(J,w.__webglTexture),e.pixelStorei(37440,S.flipY),e.pixelStorei(37441,S.premultiplyAlpha),e.pixelStorei(3317,S.unpackAlignment);const F=p(S)&&g(S.image)===!1,ie=v(S.image,F,!1,h),oe=g(ie)||a,xe=s.convert(S.format);let ce=s.convert(S.type),pe=A(S.internalFormat,xe,ce);ve(J,S,oe);let me;const Te=S.mipmaps;if(S.isDepthTexture)pe=6402,a?S.type===_n?pe=36012:S.type===ss?pe=33190:S.type===lr?pe=35056:pe=33189:S.type===_n&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===ui&&pe===6402&&(S.type!==rs&&S.type!==ss&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=rs,ce=s.convert(S.type))),S.format===ur&&pe===6402&&(pe=34041,S.type!==lr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=lr,ce=s.convert(S.type))),n.texImage2D(3553,0,pe,ie.width,ie.height,0,xe,ce,null);else if(S.isDataTexture)if(Te.length>0&&oe){for(let le=0,_e=Te.length;le<_e;le++)me=Te[le],n.texImage2D(3553,le,pe,me.width,me.height,0,xe,ce,me.data);S.generateMipmaps=!1,w.__maxMipLevel=Te.length-1}else n.texImage2D(3553,0,pe,ie.width,ie.height,0,xe,ce,ie.data),w.__maxMipLevel=0;else if(S.isCompressedTexture){for(let le=0,_e=Te.length;le<_e;le++)me=Te[le],S.format!==Ft&&S.format!==tn?xe!==null?n.compressedTexImage2D(3553,le,pe,me.width,me.height,0,me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,le,pe,me.width,me.height,0,xe,ce,me.data);w.__maxMipLevel=Te.length-1}else if(S.isDataTexture2DArray)n.texImage3D(35866,0,pe,ie.width,ie.height,ie.depth,0,xe,ce,ie.data),w.__maxMipLevel=0;else if(S.isDataTexture3D)n.texImage3D(32879,0,pe,ie.width,ie.height,ie.depth,0,xe,ce,ie.data),w.__maxMipLevel=0;else if(Te.length>0&&oe){for(let le=0,_e=Te.length;le<_e;le++)me=Te[le],n.texImage2D(3553,le,pe,xe,ce,me);S.generateMipmaps=!1,w.__maxMipLevel=Te.length-1}else n.texImage2D(3553,0,pe,xe,ce,ie),w.__maxMipLevel=0;_(S,oe)&&E(J,S,ie.width,ie.height),w.__version=S.version,S.onUpdate&&S.onUpdate(S)}function T(w,S,Q,J){const F=s.convert(S.texture.format),ie=s.convert(S.texture.type),oe=A(S.texture.internalFormat,F,ie);n.texImage2D(J,0,oe,S.width,S.height,0,F,ie,null),e.bindFramebuffer(36160,w),e.framebufferTexture2D(36160,Q,J,i.get(S.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function x(w,S,Q){if(e.bindRenderbuffer(36161,w),S.depthBuffer&&!S.stencilBuffer){let J=33189;if(Q){const F=S.depthTexture;F&&F.isDepthTexture&&(F.type===_n?J=36012:F.type===ss&&(J=33190));const ie=P(S);e.renderbufferStorageMultisample(36161,ie,J,S.width,S.height)}else e.renderbufferStorage(36161,J,S.width,S.height);e.framebufferRenderbuffer(36160,36096,36161,w)}else if(S.depthBuffer&&S.stencilBuffer){if(Q){const J=P(S);e.renderbufferStorageMultisample(36161,J,35056,S.width,S.height)}else e.renderbufferStorage(36161,34041,S.width,S.height);e.framebufferRenderbuffer(36160,33306,36161,w)}else{const J=s.convert(S.texture.format),F=s.convert(S.texture.type),ie=A(S.texture.internalFormat,J,F);if(Q){const oe=P(S);e.renderbufferStorageMultisample(36161,oe,ie,S.width,S.height)}else e.renderbufferStorage(36161,ie,S.width,S.height)}e.bindRenderbuffer(36161,null)}function I(w,S){const Q=S&&S.isWebGLCubeRenderTarget;if(Q)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,w),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),H(S.depthTexture,0);const J=i.get(S.depthTexture).__webglTexture;if(S.depthTexture.format===ui)e.framebufferTexture2D(36160,36096,3553,J,0);else if(S.depthTexture.format===ur)e.framebufferTexture2D(36160,33306,3553,J,0);else throw new Error("Unknown depthTexture format")}function L(w){const S=i.get(w),Q=w.isWebGLCubeRenderTarget===!0;if(w.depthTexture){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");I(S.__webglFramebuffer,w)}else if(Q){S.__webglDepthbuffer=[];for(let J=0;J<6;J++)e.bindFramebuffer(36160,S.__webglFramebuffer[J]),S.__webglDepthbuffer[J]=e.createRenderbuffer(),x(S.__webglDepthbuffer[J],w,!1)}else e.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=e.createRenderbuffer(),x(S.__webglDepthbuffer,w,!1);e.bindFramebuffer(36160,null)}function D(w){const S=i.get(w),Q=i.get(w.texture);w.addEventListener("dispose",j),Q.__webglTexture=e.createTexture(),o.memory.textures++;const J=w.isWebGLCubeRenderTarget===!0,F=w.isWebGLMultisampleRenderTarget===!0,ie=g(w)||a;if(a&&w.texture.format===tn&&(w.texture.type===_n||w.texture.type===os)&&(w.texture.format=Ft,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),J){S.__webglFramebuffer=[];for(let oe=0;oe<6;oe++)S.__webglFramebuffer[oe]=e.createFramebuffer()}else if(S.__webglFramebuffer=e.createFramebuffer(),F)if(a){S.__webglMultisampledFramebuffer=e.createFramebuffer(),S.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,S.__webglColorRenderbuffer);const oe=s.convert(w.texture.format),xe=s.convert(w.texture.type),ce=A(w.texture.internalFormat,oe,xe),pe=P(w);e.renderbufferStorageMultisample(36161,pe,ce,w.width,w.height),e.bindFramebuffer(36160,S.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,S.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),w.depthBuffer&&(S.__webglDepthRenderbuffer=e.createRenderbuffer(),x(S.__webglDepthRenderbuffer,w,!0)),e.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(J){n.bindTexture(34067,Q.__webglTexture),ve(34067,w.texture,ie);for(let oe=0;oe<6;oe++)T(S.__webglFramebuffer[oe],w,36064,34069+oe);_(w.texture,ie)&&E(34067,w.texture,w.width,w.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Q.__webglTexture),ve(3553,w.texture,ie),T(S.__webglFramebuffer,w,36064,3553),_(w.texture,ie)&&E(3553,w.texture,w.width,w.height),n.bindTexture(3553,null);w.depthBuffer&&L(w)}function O(w){const S=w.texture,Q=g(w)||a;if(_(S,Q)){const J=w.isWebGLCubeRenderTarget?34067:3553,F=i.get(S).__webglTexture;n.bindTexture(J,F),E(J,S,w.width,w.height),n.bindTexture(J,null)}}function B(w){if(w.isWebGLMultisampleRenderTarget)if(a){const S=i.get(w);e.bindFramebuffer(36008,S.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,S.__webglFramebuffer);const Q=w.width,J=w.height;let F=16384;w.depthBuffer&&(F|=256),w.stencilBuffer&&(F|=1024),e.blitFramebuffer(0,0,Q,J,0,0,Q,J,F,9728),e.bindFramebuffer(36160,S.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function P(w){return a&&w.isWebGLMultisampleRenderTarget?Math.min(u,w.samples):0}function U(w){const S=o.render.frame;f.get(w)!==S&&(f.set(w,S),w.update())}let k=!1,X=!1;function V(w,S){w&&w.isWebGLRenderTarget&&(k===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),k=!0),w=w.texture),H(w,S)}function ee(w,S){w&&w.isWebGLCubeRenderTarget&&(X===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),X=!0),w=w.texture),w&&w.isCubeTexture||Array.isArray(w.image)&&w.image.length===6?re(w,S):se(w,S)}this.allocateTextureUnit=W,this.resetTextureUnits=q,this.setTexture2D=H,this.setTexture2DArray=G,this.setTexture3D=K,this.setTextureCube=re,this.setTextureCubeDynamic=se,this.setupRenderTarget=D,this.updateRenderTargetMipmap=O,this.updateMultisampleRenderTarget=B,this.safeSetTexture2D=V,this.safeSetTextureCube=ee}function dg(e,t,n){const i=n.isWebGL2;function r(s){let o;if(s===_o)return 5121;if(s===$u)return 32819;if(s===eh)return 32820;if(s===th)return 33635;if(s===Ju)return 5120;if(s===Ku)return 5122;if(s===rs)return 5123;if(s===Qu)return 5124;if(s===ss)return 5125;if(s===_n)return 5126;if(s===os)return i?5131:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===nh)return 6406;if(s===tn)return 6407;if(s===Ft)return 6408;if(s===ih)return 6409;if(s===rh)return 6410;if(s===ui)return 6402;if(s===ur)return 34041;if(s===sh)return 6403;if(s===oh)return 36244;if(s===ah)return 33319;if(s===ch)return 33320;if(s===lh)return 36248;if(s===uh)return 36249;if(s===Qa||s===$a||s===ec||s===tc)if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Qa)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===$a)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ec)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===tc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===nc||s===ic||s===rc||s===sc)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===nc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===ic)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===rc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===sc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===hh)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===oc||s===ac)&&(o=t.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===oc)return o.COMPRESSED_RGB8_ETC2;if(s===ac)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===dh||s===fh||s===ph||s===mh||s===gh||s===vh||s===yh||s===xh||s===bh||s===_h||s===wh||s===Mh||s===Th||s===Eh||s===Ah||s===Lh||s===Rh||s===Ch||s===Ph||s===Ih||s===Dh||s===Oh||s===Fh||s===Nh||s===Bh||s===Gh||s===Uh||s===Hh)return o=t.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===Sh)return o=t.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===lr)return i?34042:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function na(e){Je.call(this),this.cameras=e||[]}na.prototype=Object.assign(Object.create(Je.prototype),{constructor:na,isArrayCamera:!0});function At(){ge.call(this),this.type="Group"}At.prototype=Object.assign(Object.create(ge.prototype),{constructor:At,isGroup:!0});function Er(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Er.prototype,{constructor:Er,getHandSpace:function(){if(this._hand===null&&(this._hand=new At(),this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let e=0;e<=window.XRHand.LITTLE_PHALANX_TIP;e++){const t=new At();t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new At(),this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new At(),this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this},disconnect:function(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(e,t,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,c=this._hand;if(e)if(c&&e.hand){s=!0;for(let l=0;l<=window.XRHand.LITTLE_PHALANX_TIP;l++)if(e.hand[l]){const h=t.getJointPose(e.hand[l],n),u=c.joints[l];h!==null&&(u.matrix.fromArray(h.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.jointRadius=h.radius),u.visible=h!==null;const f=c.joints[window.XRHand.INDEX_PHALANX_TIP],d=c.joints[window.XRHand.THUMB_PHALANX_TIP],m=f.position.distanceTo(d.position),y=.02,v=.005;c.inputState.pinching&&m>y+v?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&m<=y-v&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}}else o!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),c!==null&&(c.visible=s!==null),this}});function Qc(e,t){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const c=[],l=new Map(),h=new Je();h.layers.enable(1),h.viewport=new He();const u=new Je();u.layers.enable(2),u.viewport=new He();const f=[h,u],d=new na();d.layers.enable(1),d.layers.enable(2);let m=null,y=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(z){let q=c[z];return q===void 0&&(q=new Er(),c[z]=q),q.getTargetRaySpace()},this.getControllerGrip=function(z){let q=c[z];return q===void 0&&(q=new Er(),c[z]=q),q.getGripSpace()},this.getHand=function(z){let q=c[z];return q===void 0&&(q=new Er(),c[z]=q),q.getHandSpace()};function v(z){const q=l.get(z.inputSource);q&&q.dispatchEvent({type:z.type})}function g(){l.forEach(function(z,q){z.disconnect(q)}),l.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),ne.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function p(z){s=z,ne.setContext(i),ne.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(z){r=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(z){o=z,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=function(z){if(i=z,i!==null){i.addEventListener("select",v),i.addEventListener("selectstart",v),i.addEventListener("selectend",v),i.addEventListener("squeeze",v),i.addEventListener("squeezestart",v),i.addEventListener("squeezeend",v),i.addEventListener("end",g);const q=t.getContextAttributes();q.xrCompatible!==!0&&t.makeXRCompatible();const W={antialias:q.antialias,alpha:q.alpha,depth:q.depth,stencil:q.stencil,framebufferScaleFactor:r},H=new XRWebGLLayer(i,t,W);i.updateRenderState({baseLayer:H}),i.requestReferenceSpace(o).then(p),i.addEventListener("inputsourceschange",_)}};function _(z){const q=i.inputSources;for(let W=0;W<c.length;W++)l.set(q[W],c[W]);for(let W=0;W<z.removed.length;W++){const H=z.removed[W],G=l.get(H);G&&(G.dispatchEvent({type:"disconnected",data:H}),l.delete(H))}for(let W=0;W<z.added.length;W++){const H=z.added[W],G=l.get(H);G&&G.dispatchEvent({type:"connected",data:H})}}const E=new M(),A=new M();function b(z,q,W){E.setFromMatrixPosition(q.matrixWorld),A.setFromMatrixPosition(W.matrixWorld);const H=E.distanceTo(A),G=q.projectionMatrix.elements,K=W.projectionMatrix.elements,re=G[14]/(G[10]-1),se=G[14]/(G[10]+1),ue=(G[9]+1)/G[5],ae=(G[9]-1)/G[5],ve=(G[8]-1)/G[0],Ce=(K[8]+1)/K[0],Ae=re*ve,T=re*Ce,x=H/(-ve+Ce),I=x*-ve;q.matrixWorld.decompose(z.position,z.quaternion,z.scale),z.translateX(I),z.translateZ(x),z.matrixWorld.compose(z.position,z.quaternion,z.scale),z.matrixWorldInverse.getInverse(z.matrixWorld);const L=re+x,D=se+x,O=Ae-I,B=T+(H-I),P=ue*se/D*L,U=ae*se/D*L;z.projectionMatrix.makePerspective(O,B,P,U,L,D)}function C(z,q){q===null?z.matrixWorld.copy(z.matrix):z.matrixWorld.multiplyMatrices(q.matrixWorld,z.matrix),z.matrixWorldInverse.getInverse(z.matrixWorld)}this.getCamera=function(z){d.near=u.near=h.near=z.near,d.far=u.far=h.far=z.far,(m!==d.near||y!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),m=d.near,y=d.far);const q=z.parent,W=d.cameras;C(d,q);for(let G=0;G<W.length;G++)C(W[G],q);z.matrixWorld.copy(d.matrixWorld);const H=z.children;for(let G=0,K=H.length;G<K;G++)H[G].updateMatrixWorld(!0);return W.length===2?b(d,h,u):d.projectionMatrix.copy(h.projectionMatrix),d};let j=null;function N(z,q){if(a=q.getViewerPose(s),a!==null){const H=a.views,G=i.renderState.baseLayer;e.setFramebuffer(G.framebuffer);let K=!1;H.length!==d.cameras.length&&(d.cameras.length=0,K=!0);for(let re=0;re<H.length;re++){const se=H[re],ue=G.getViewport(se),ae=f[re];ae.matrix.fromArray(se.transform.matrix),ae.projectionMatrix.fromArray(se.projectionMatrix),ae.viewport.set(ue.x,ue.y,ue.width,ue.height),re===0&&d.matrix.copy(ae.matrix),K===!0&&d.cameras.push(ae)}}const W=i.inputSources;for(let H=0;H<c.length;H++){const G=c[H],K=W[H];G.update(K,q,s)}j&&j(z,q)}const ne=new Rc();ne.setAnimationLoop(N),this.setAnimationLoop=function(z){j=z},this.dispose=function(){}}Object.assign(Qc.prototype,Nt.prototype);function fg(e){function t(g,p){g.fogColor.value.copy(p.color),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function n(g,p,_,E){p.isMeshBasicMaterial?i(g,p):p.isMeshLambertMaterial?(i(g,p),c(g,p)):p.isMeshToonMaterial?(i(g,p),h(g,p)):p.isMeshPhongMaterial?(i(g,p),l(g,p)):p.isMeshStandardMaterial?(i(g,p),p.isMeshPhysicalMaterial?f(g,p):u(g,p)):p.isMeshMatcapMaterial?(i(g,p),d(g,p)):p.isMeshDepthMaterial?(i(g,p),m(g,p)):p.isMeshDistanceMaterial?(i(g,p),y(g,p)):p.isMeshNormalMaterial?(i(g,p),v(g,p)):p.isLineBasicMaterial?(r(g,p),p.isLineDashedMaterial&&s(g,p)):p.isPointsMaterial?o(g,p,_,E):p.isSpriteMaterial?a(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function i(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap),p.specularMap&&(g.specularMap.value=p.specularMap);const _=e.get(p).envMap;if(_){g.envMap.value=_,g.flipEnvMap.value=_.isCubeTexture?-1:1,g.reflectivity.value=p.reflectivity,g.refractionRatio.value=p.refractionRatio;const b=e.get(_).__maxMipLevel;b!==void 0&&(g.maxMipLevel.value=b)}p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity);let E;p.map?E=p.map:p.specularMap?E=p.specularMap:p.displacementMap?E=p.displacementMap:p.normalMap?E=p.normalMap:p.bumpMap?E=p.bumpMap:p.roughnessMap?E=p.roughnessMap:p.metalnessMap?E=p.metalnessMap:p.alphaMap?E=p.alphaMap:p.emissiveMap?E=p.emissiveMap:p.clearcoatMap?E=p.clearcoatMap:p.clearcoatNormalMap?E=p.clearcoatNormalMap:p.clearcoatRoughnessMap&&(E=p.clearcoatRoughnessMap),E!==void 0&&(E.isWebGLRenderTarget&&(E=E.texture),E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uvTransform.value.copy(E.matrix));let A;p.aoMap?A=p.aoMap:p.lightMap&&(A=p.lightMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),g.uv2Transform.value.copy(A.matrix))}function r(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity}function s(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function o(g,p,_,E){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*_,g.scale.value=E*.5,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap);let A;p.map?A=p.map:p.alphaMap&&(A=p.alphaMap),A!==void 0&&(A.matrixAutoUpdate===!0&&A.updateMatrix(),g.uvTransform.value.copy(A.matrix))}function a(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map),p.alphaMap&&(g.alphaMap.value=p.alphaMap);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix))}function c(g,p){p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap)}function l(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===st&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===st&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function h(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===st&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===st&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function u(g,p){g.roughness.value=p.roughness,g.metalness.value=p.metalness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===st&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===st&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias);const _=e.get(p).envMap;_&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p){u(g,p),g.reflectivity.value=p.reflectivity,g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.sheen&&g.sheen.value.copy(p.sheen),p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),g.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===st&&g.clearcoatNormalScale.value.negate()),g.transmission.value=p.transmission,p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap)}function d(g,p){p.matcap&&(g.matcap.value=p.matcap),p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===st&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===st&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function m(g,p){p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}function y(g,p){p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),g.referencePosition.value.copy(p.referencePosition),g.nearDistance.value=p.nearDistance,g.farDistance.value=p.farDistance}function v(g,p){p.bumpMap&&(g.bumpMap.value=p.bumpMap,g.bumpScale.value=p.bumpScale,p.side===st&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,g.normalScale.value.copy(p.normalScale),p.side===st&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias)}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Fi(e){e=e||{};const t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,s=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,a=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,c=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,l=e.powerPreference!==void 0?e.powerPreference:"default",h=e.failIfMajorPerformanceCaveat!==void 0?e.failIfMajorPerformanceCaveat:!1;let u=null,f=null;this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=pi,this.physicallyCorrectLights=!1,this.toneMapping=or,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const d=this;let m=!1,y=null,v=0,g=0,p=null,_=null,E=-1,A=null,b=null;const C=new He(),j=new He();let N=null,ne=t.width,z=t.height,q=1,W=null,H=null;const G=new He(0,0,ne,z),K=new He(0,0,ne,z);let re=!1;const se=new Ls();let ue=!1,ae=!1;const ve=new Re(),Ce=new M(),Ae={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function T(){return p===null?q:1}let x=n;function I(R,Z){for(let Y=0;Y<R.length;Y++){const te=R[Y],he=t.getContext(te,Z);if(he!==null)return he}return null}try{const R={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:l,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Be,!1),t.addEventListener("webglcontextrestored",et,!1),x===null){const Z=["webgl2","webgl","experimental-webgl"];if(d.isWebGL1Renderer===!0&&Z.shift(),x=I(Z,R),x===null)throw I(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}x.getShaderPrecisionFormat===void 0&&(x.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let L,D,O,B,P,U,k,X,V,ee,w,S,Q,J,F,ie,oe,xe,ce,pe,me;function Te(){L=new jp(x),D=new zp(x,L,e),D.isWebGL2===!1&&(L.get("WEBGL_depth_texture"),L.get("OES_texture_float"),L.get("OES_texture_half_float"),L.get("OES_texture_half_float_linear"),L.get("OES_standard_derivatives"),L.get("OES_element_index_uint"),L.get("OES_vertex_array_object"),L.get("ANGLE_instanced_arrays")),L.get("OES_texture_float_linear"),pe=new dg(x,L,D),O=new ug(x,L,D),O.scissor(j.copy(K).multiplyScalar(q).floor()),O.viewport(C.copy(G).multiplyScalar(q).floor()),B=new Yp(x),P=new Qm(),U=new hg(x,L,O,P,D,pe,B),k=new Wp(d),X=new md(x,D),me=new Hp(x,L,X,D),V=new qp(x,X,B,me),ee=new Qp(x,V,X,B),oe=new Kp(x),F=new Vp(P),w=new Km(d,k,L,D,me,F),S=new fg(P),Q=new tg(P),J=new ag(),ie=new Up(d,k,O,ee,a),xe=new kp(x,L,B,D),ce=new Xp(x,L,B,D),B.programs=w.programs,d.capabilities=D,d.extensions=L,d.properties=P,d.renderLists=Q,d.state=O,d.info=B}Te();const le=new Qc(d,x);this.xr=le;const _e=new Kc(d,ee,D.maxTextureSize);this.shadowMap=_e,this.getContext=function(){return x},this.getContextAttributes=function(){return x.getContextAttributes()},this.forceContextLoss=function(){const R=L.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=L.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(R){if(R===void 0)return;q=R,this.setSize(ne,z,!1)},this.getSize=function(R){return R===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),R=new $()),R.set(ne,z)},this.setSize=function(R,Z,Y){if(le.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ne=R,z=Z,t.width=Math.floor(R*q),t.height=Math.floor(Z*q),Y!==!1&&(t.style.width=R+"px",t.style.height=Z+"px"),this.setViewport(0,0,R,Z)},this.getDrawingBufferSize=function(R){return R===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),R=new $()),R.set(ne*q,z*q).floor()},this.setDrawingBufferSize=function(R,Z,Y){ne=R,z=Z,q=Y,t.width=Math.floor(R*Y),t.height=Math.floor(Z*Y),this.setViewport(0,0,R,Z)},this.getCurrentViewport=function(R){return R===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),R=new He()),R.copy(C)},this.getViewport=function(R){return R.copy(G)},this.setViewport=function(R,Z,Y,te){R.isVector4?G.set(R.x,R.y,R.z,R.w):G.set(R,Z,Y,te),O.viewport(C.copy(G).multiplyScalar(q).floor())},this.getScissor=function(R){return R.copy(K)},this.setScissor=function(R,Z,Y,te){R.isVector4?K.set(R.x,R.y,R.z,R.w):K.set(R,Z,Y,te),O.scissor(j.copy(K).multiplyScalar(q).floor())},this.getScissorTest=function(){return re},this.setScissorTest=function(R){O.setScissorTest(re=R)},this.setOpaqueSort=function(R){W=R},this.setTransparentSort=function(R){H=R},this.getClearColor=function(){return ie.getClearColor()},this.setClearColor=function(){ie.setClearColor.apply(ie,arguments)},this.getClearAlpha=function(){return ie.getClearAlpha()},this.setClearAlpha=function(){ie.setClearAlpha.apply(ie,arguments)},this.clear=function(R,Z,Y){let te=0;(R===void 0||R)&&(te|=16384),(Z===void 0||Z)&&(te|=256),(Y===void 0||Y)&&(te|=1024),x.clear(te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Be,!1),t.removeEventListener("webglcontextrestored",et,!1),Q.dispose(),J.dispose(),P.dispose(),k.dispose(),ee.dispose(),me.dispose(),le.dispose(),Dt.stop()};function Be(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function et(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,Te()}function ni(R){const Z=R.target;Z.removeEventListener("dispose",ni),ii(Z)}function ii(R){Jr(R),P.remove(R)}function Jr(R){const Z=P.get(R).program;Z!==void 0&&w.releaseProgram(Z)}function uo(R,Z){R.render(function(Y){d.renderBufferImmediate(Y,Z)})}this.renderBufferImmediate=function(R,Z){me.initAttributes();const Y=P.get(R);R.hasPositions&&!Y.position&&(Y.position=x.createBuffer()),R.hasNormals&&!Y.normal&&(Y.normal=x.createBuffer()),R.hasUvs&&!Y.uv&&(Y.uv=x.createBuffer()),R.hasColors&&!Y.color&&(Y.color=x.createBuffer());const te=Z.getAttributes();R.hasPositions&&(x.bindBuffer(34962,Y.position),x.bufferData(34962,R.positionArray,35048),me.enableAttribute(te.position),x.vertexAttribPointer(te.position,3,5126,!1,0,0)),R.hasNormals&&(x.bindBuffer(34962,Y.normal),x.bufferData(34962,R.normalArray,35048),me.enableAttribute(te.normal),x.vertexAttribPointer(te.normal,3,5126,!1,0,0)),R.hasUvs&&(x.bindBuffer(34962,Y.uv),x.bufferData(34962,R.uvArray,35048),me.enableAttribute(te.uv),x.vertexAttribPointer(te.uv,2,5126,!1,0,0)),R.hasColors&&(x.bindBuffer(34962,Y.color),x.bufferData(34962,R.colorArray,35048),me.enableAttribute(te.color),x.vertexAttribPointer(te.color,3,5126,!1,0,0)),me.disableUnusedAttributes(),x.drawArrays(4,0,R.count),R.count=0},this.renderBufferDirect=function(R,Z,Y,te,he,Oe){Z===null&&(Z=Ae);const Pe=he.isMesh&&he.matrixWorld.determinant()<0,Fe=Kr(R,Z,te,he);O.setMaterial(te,Pe);let Ie=Y.index;const Qe=Y.attributes.position;if(Ie===null){if(Qe===void 0||Qe.count===0)return}else if(Ie.count===0)return;let Ke=1;te.wireframe===!0&&(Ie=V.getWireframeAttribute(Y),Ke=2),(te.morphTargets||te.morphNormals)&&oe.update(he,Y,te,Fe),me.setup(he,te,Fe,Y,Ie);let Le,ke=xe;Ie!==null&&(Le=X.get(Ie),ke=ce,ke.setIndex(Le));const en=Ie!==null?Ie.count:Qe.count,ze=Y.drawRange.start*Ke,Bn=Y.drawRange.count*Ke,tt=Oe!==null?Oe.start*Ke:0,fo=Oe!==null?Oe.count*Ke:Infinity,gt=Math.max(ze,tt),er=Math.min(en,ze+Bn,tt+fo)-1,si=Math.max(0,er-gt+1);if(si===0)return;if(he.isMesh)te.wireframe===!0?(O.setLineWidth(te.wireframeLinewidth*T()),ke.setMode(1)):ke.setMode(4);else if(he.isLine){let tr=te.linewidth;tr===void 0&&(tr=1),O.setLineWidth(tr*T()),he.isLineSegments?ke.setMode(1):he.isLineLoop?ke.setMode(2):ke.setMode(3)}else he.isPoints?ke.setMode(0):he.isSprite&&ke.setMode(4);if(he.isInstancedMesh)ke.renderInstances(gt,si,he.count);else if(Y.isInstancedBufferGeometry){const tr=Math.min(Y.instanceCount,Y._maxInstanceCount);ke.renderInstances(gt,si,tr)}else ke.render(gt,si)},this.compile=function(R,Z){f=J.get(R,Z),f.init(),R.traverse(function(te){te.isLight&&(f.pushLight(te),te.castShadow&&f.pushShadow(te))}),f.setupLights(Z);const Y=new WeakMap();R.traverse(function(te){const he=te.material;if(he)if(Array.isArray(he))for(let Oe=0;Oe<he.length;Oe++){const Pe=he[Oe];Y.has(Pe)===!1&&(Mt(Pe,R,te),Y.set(Pe))}else Y.has(he)===!1&&(Mt(he,R,te),Y.set(he))})};let vn=null;function It(R){if(le.isPresenting)return;vn&&vn(R)}const Dt=new Rc();Dt.setAnimationLoop(It),typeof window!="undefined"&&Dt.setContext(window),this.setAnimationLoop=function(R){vn=R,le.setAnimationLoop(R),R===null?Dt.stop():Dt.start()},this.render=function(R,Z){let Y,te;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),Y=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),te=arguments[3]),Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;me.resetDefaultState(),E=-1,A=null,R.autoUpdate===!0&&R.updateMatrixWorld(),Z.parent===null&&Z.updateMatrixWorld(),le.enabled===!0&&le.isPresenting===!0&&(Z=le.getCamera(Z)),R.isScene===!0&&R.onBeforeRender(d,R,Z,Y||p),f=J.get(R,Z),f.init(),ve.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),se.setFromProjectionMatrix(ve),ae=this.localClippingEnabled,ue=F.init(this.clippingPlanes,ae,Z),u=Q.get(R,Z),u.init(),$i(R,Z,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(W,H),ue===!0&&F.beginShadows();const he=f.state.shadowsArray;_e.render(he,R,Z),f.setupLights(Z),ue===!0&&F.endShadows(),this.info.autoReset===!0&&this.info.reset(),Y!==void 0&&this.setRenderTarget(Y),ie.render(u,R,Z,te);const Oe=u.opaque,Pe=u.transparent;Oe.length>0&&Ot(Oe,R,Z),Pe.length>0&&Ot(Pe,R,Z),R.isScene===!0&&R.onAfterRender(d,R,Z),p!==null&&(U.updateRenderTargetMipmap(p),U.updateMultisampleRenderTarget(p)),O.buffers.depth.setTest(!0),O.buffers.depth.setMask(!0),O.buffers.color.setMask(!0),O.setPolygonOffset(!1),u=null,f=null};function $i(R,Z,Y,te){if(R.visible===!1)return;const he=R.layers.test(Z.layers);if(he){if(R.isGroup)Y=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(Z);else if(R.isLight)f.pushLight(R),R.castShadow&&f.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||se.intersectsSprite(R)){te&&Ce.setFromMatrixPosition(R.matrixWorld).applyMatrix4(ve);const Pe=ee.update(R),Fe=R.material;Fe.visible&&u.push(R,Pe,Fe,Y,Ce.z,null)}}else if(R.isImmediateRenderObject)te&&Ce.setFromMatrixPosition(R.matrixWorld).applyMatrix4(ve),u.push(R,null,R.material,Y,Ce.z,null);else if((R.isMesh||R.isLine||R.isPoints)&&(R.isSkinnedMesh&&(R.skeleton.frame!==B.render.frame&&(R.skeleton.update(),R.skeleton.frame=B.render.frame)),!R.frustumCulled||se.intersectsObject(R))){te&&Ce.setFromMatrixPosition(R.matrixWorld).applyMatrix4(ve);const Pe=ee.update(R),Fe=R.material;if(Array.isArray(Fe)){const Ie=Pe.groups;for(let Qe=0,Ke=Ie.length;Qe<Ke;Qe++){const Le=Ie[Qe],ke=Fe[Le.materialIndex];ke&&ke.visible&&u.push(R,Pe,ke,Y,Ce.z,Le)}}else Fe.visible&&u.push(R,Pe,Fe,Y,Ce.z,null)}}const Oe=R.children;for(let Pe=0,Fe=Oe.length;Pe<Fe;Pe++)$i(Oe[Pe],Z,Y,te)}function Ot(R,Z,Y){const te=Z.isScene===!0?Z.overrideMaterial:null;for(let he=0,Oe=R.length;he<Oe;he++){const Pe=R[he],Fe=Pe.object,Ie=Pe.geometry,Qe=te===null?Pe.material:te,Ke=Pe.group;if(Y.isArrayCamera){b=Y;const Le=Y.cameras;for(let ke=0,en=Le.length;ke<en;ke++){const ze=Le[ke];Fe.layers.test(ze.layers)&&(O.viewport(C.copy(ze.viewport)),f.setupLights(ze),ri(Fe,Z,ze,Ie,Qe,Ke))}}else b=null,ri(Fe,Z,Y,Ie,Qe,Ke)}}function ri(R,Z,Y,te,he,Oe){if(R.onBeforeRender(d,Z,Y,te,he,Oe),f=J.get(Z,b||Y),R.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),R.isImmediateRenderObject){const Pe=Kr(Y,Z,he,R);O.setMaterial(he),me.reset(),uo(R,Pe)}else d.renderBufferDirect(Y,Z,te,he,R,Oe);R.onAfterRender(d,Z,Y,te,he,Oe),f=J.get(Z,b||Y)}function Mt(R,Z,Y){Z.isScene!==!0&&(Z=Ae);const te=P.get(R),he=f.state.lights,Oe=f.state.shadowsArray,Pe=he.state.version,Fe=w.getParameters(R,he.state,Oe,Z,Y),Ie=w.getProgramCacheKey(Fe);let Qe=te.program,Ke=!0;if(Qe===void 0)R.addEventListener("dispose",ni);else if(Qe.cacheKey!==Ie)Jr(R);else if(te.lightsStateVersion!==Pe)Ke=!1;else if(Fe.shaderID!==void 0){const ze=R.isMeshStandardMaterial?Z.environment:null;te.envMap=k.get(R.envMap||ze);return}else Ke=!1;Ke&&(Fe.uniforms=w.getUniforms(R),R.onBeforeCompile(Fe,d),Qe=w.acquireProgram(Fe,Ie),te.program=Qe,te.uniforms=Fe.uniforms,te.outputEncoding=Fe.outputEncoding);const Le=te.uniforms;(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(te.numClippingPlanes=F.numPlanes,te.numIntersection=F.numIntersection,Le.clippingPlanes=F.uniform),te.environment=R.isMeshStandardMaterial?Z.environment:null,te.fog=Z.fog,te.envMap=k.get(R.envMap||te.environment),te.needsLights=ho(R),te.lightsStateVersion=Pe,te.needsLights&&(Le.ambientLightColor.value=he.state.ambient,Le.lightProbe.value=he.state.probe,Le.directionalLights.value=he.state.directional,Le.directionalLightShadows.value=he.state.directionalShadow,Le.spotLights.value=he.state.spot,Le.spotLightShadows.value=he.state.spotShadow,Le.rectAreaLights.value=he.state.rectArea,Le.ltc_1.value=he.state.rectAreaLTC1,Le.ltc_2.value=he.state.rectAreaLTC2,Le.pointLights.value=he.state.point,Le.pointLightShadows.value=he.state.pointShadow,Le.hemisphereLights.value=he.state.hemi,Le.directionalShadowMap.value=he.state.directionalShadowMap,Le.directionalShadowMatrix.value=he.state.directionalShadowMatrix,Le.spotShadowMap.value=he.state.spotShadowMap,Le.spotShadowMatrix.value=he.state.spotShadowMatrix,Le.pointShadowMap.value=he.state.pointShadowMap,Le.pointShadowMatrix.value=he.state.pointShadowMatrix);const ke=te.program.getUniforms(),en=Pn.seqWithValue(ke.seq,Le);te.uniformsList=en}function Kr(R,Z,Y,te){Z.isScene!==!0&&(Z=Ae),U.resetTextureUnits();const he=Z.fog,Oe=Y.isMeshStandardMaterial?Z.environment:null,Pe=p===null?d.outputEncoding:p.texture.encoding,Fe=k.get(Y.envMap||Oe),Ie=P.get(Y),Qe=f.state.lights;if(ue===!0&&(ae===!0||R!==A)){const tt=R===A&&Y.id===E;F.setState(Y,R,tt)}Y.version===Ie.__version?(Y.fog&&Ie.fog!==he||(Ie.environment!==Oe||(Ie.needsLights&&Ie.lightsStateVersion!==Qe.state.version||(Ie.numClippingPlanes!==void 0&&(Ie.numClippingPlanes!==F.numPlanes||Ie.numIntersection!==F.numIntersection)||(Ie.outputEncoding!==Pe||Ie.envMap!==Fe)))))&&Mt(Y,Z,te):(Mt(Y,Z,te),Ie.__version=Y.version);let Ke=!1,Le=!1,ke=!1;const en=Ie.program,ze=en.getUniforms(),Bn=Ie.uniforms;if(O.useProgram(en.program)&&(Ke=!0,Le=!0,ke=!0),Y.id!==E&&(E=Y.id,Le=!0),Ke||A!==R){if(ze.setValue(x,"projectionMatrix",R.projectionMatrix),D.logarithmicDepthBuffer&&ze.setValue(x,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),A!==R&&(A=R,Le=!0,ke=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const tt=ze.map.cameraPosition;tt!==void 0&&tt.setValue(x,Ce.setFromMatrixPosition(R.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&ze.setValue(x,"isOrthographic",R.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||Y.skinning)&&ze.setValue(x,"viewMatrix",R.matrixWorldInverse)}if(Y.skinning){ze.setOptional(x,te,"bindMatrix"),ze.setOptional(x,te,"bindMatrixInverse");const tt=te.skeleton;if(tt){const fo=tt.bones;if(D.floatVertexTextures){if(tt.boneTexture===void 0){let gt=Math.sqrt(fo.length*4);gt=Ee.ceilPowerOfTwo(gt),gt=Math.max(gt,4);const er=new Float32Array(gt*gt*4);er.set(tt.boneMatrices);const si=new Ii(er,gt,gt,Ft,_n);tt.boneMatrices=er,tt.boneTexture=si,tt.boneTextureSize=gt}ze.setValue(x,"boneTexture",tt.boneTexture,U),ze.setValue(x,"boneTextureSize",tt.boneTextureSize)}else ze.setOptional(x,tt,"boneMatrices")}}return(Le||Ie.receiveShadow!==te.receiveShadow)&&(Ie.receiveShadow=te.receiveShadow,ze.setValue(x,"receiveShadow",te.receiveShadow)),Le&&(ze.setValue(x,"toneMappingExposure",d.toneMappingExposure),Ie.needsLights&&yn(Bn,ke),he&&Y.fog&&S.refreshFogUniforms(Bn,he),S.refreshMaterialUniforms(Bn,Y,q,z),Pn.upload(x,Ie.uniformsList,Bn,U)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Pn.upload(x,Ie.uniformsList,Bn,U),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&ze.setValue(x,"center",te.center),ze.setValue(x,"modelViewMatrix",te.modelViewMatrix),ze.setValue(x,"normalMatrix",te.normalMatrix),ze.setValue(x,"modelMatrix",te.matrixWorld),en}function yn(R,Z){R.ambientLightColor.needsUpdate=Z,R.lightProbe.needsUpdate=Z,R.directionalLights.needsUpdate=Z,R.directionalLightShadows.needsUpdate=Z,R.pointLights.needsUpdate=Z,R.pointLightShadows.needsUpdate=Z,R.spotLights.needsUpdate=Z,R.spotLightShadows.needsUpdate=Z,R.rectAreaLights.needsUpdate=Z,R.hemisphereLights.needsUpdate=Z}function ho(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.setFramebuffer=function(R){y!==R&&p===null&&x.bindFramebuffer(36160,R),y=R},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return u},this.setRenderList=function(R){u=R},this.getRenderState=function(){return f},this.setRenderState=function(R){f=R},this.getRenderTarget=function(){return p},this.setRenderTarget=function(R,Z=0,Y=0){p=R,v=Z,g=Y,R&&P.get(R).__webglFramebuffer===void 0&&U.setupRenderTarget(R);let te=y,he=!1;if(R){const Oe=P.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(te=Oe[Z],he=!0):R.isWebGLMultisampleRenderTarget?te=P.get(R).__webglMultisampledFramebuffer:te=Oe,C.copy(R.viewport),j.copy(R.scissor),N=R.scissorTest}else C.copy(G).multiplyScalar(q).floor(),j.copy(K).multiplyScalar(q).floor(),N=re;if(_!==te&&(x.bindFramebuffer(36160,te),_=te),O.viewport(C),O.scissor(j),O.setScissorTest(N),he){const Oe=P.get(R.texture);x.framebufferTexture2D(36160,36064,34069+Z,Oe.__webglTexture,Y)}},this.readRenderTargetPixels=function(R,Z,Y,te,he,Oe,Pe){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Fe=P.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&Pe!==void 0&&(Fe=Fe[Pe]),Fe){let Ie=!1;Fe!==_&&(x.bindFramebuffer(36160,Fe),Ie=!0);try{const Qe=R.texture,Ke=Qe.format,Le=Qe.type;if(Ke!==Ft&&pe.convert(Ke)!==x.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Le!==_o&&pe.convert(Le)!==x.getParameter(35738)&&!(Le===_n&&(D.isWebGL2||L.get("OES_texture_float")||L.get("WEBGL_color_buffer_float")))&&!(Le===os&&(D.isWebGL2?L.get("EXT_color_buffer_float"):L.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}x.checkFramebufferStatus(36160)===36053?Z>=0&&Z<=R.width-te&&Y>=0&&Y<=R.height-he&&x.readPixels(Z,Y,te,he,pe.convert(Ke),pe.convert(Le),Oe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Ie&&x.bindFramebuffer(36160,_)}}},this.copyFramebufferToTexture=function(R,Z,Y){Y===void 0&&(Y=0);const te=Math.pow(2,-Y),he=Math.floor(Z.image.width*te),Oe=Math.floor(Z.image.height*te),Pe=pe.convert(Z.format);U.setTexture2D(Z,0),x.copyTexImage2D(3553,Y,Pe,R.x,R.y,he,Oe,0),O.unbindTexture()},this.copyTextureToTexture=function(R,Z,Y,te){te===void 0&&(te=0);const he=Z.image.width,Oe=Z.image.height,Pe=pe.convert(Y.format),Fe=pe.convert(Y.type);U.setTexture2D(Y,0),x.pixelStorei(37440,Y.flipY),x.pixelStorei(37441,Y.premultiplyAlpha),x.pixelStorei(3317,Y.unpackAlignment),Z.isDataTexture?x.texSubImage2D(3553,te,R.x,R.y,he,Oe,Pe,Fe,Z.image.data):Z.isCompressedTexture?x.compressedTexSubImage2D(3553,te,R.x,R.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Pe,Z.mipmaps[0].data):x.texSubImage2D(3553,te,R.x,R.y,Pe,Fe,Z.image),te===0&&Y.generateMipmaps&&x.generateMipmap(3553),O.unbindTexture()},this.initTexture=function(R){U.setTexture2D(R,0),O.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function $c(e){Fi.call(this,e)}$c.prototype=Object.assign(Object.create(Fi.prototype),{constructor:$c,isWebGL1Renderer:!0});class el{constructor(e,t){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new fe(e),this.density=t!==void 0?t:25e-5}clone(){return new el(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class tl{constructor(e,t,n){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new fe(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}clone(){return new tl(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Rs extends ge{constructor(){super();Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}function bt(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ls,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ee.generateUUID()}Object.defineProperty(bt.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(bt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ee.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new bt(t,this.stride);return n.setUsage(this.usage),n},onUpload:function(e){return this.onUploadCallback=e,this},toJSON:function(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Ee.generateUUID()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const jn=new M();function un(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}Object.defineProperties(un.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(e){this.data.needsUpdate=e}}});Object.assign(un.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(let t=0,n=this.data.count;t<n;t++)jn.x=this.getX(t),jn.y=this.getY(t),jn.z=this.getZ(t),jn.applyMatrix4(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this},clone:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Me(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new un(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function qn(e){we.call(this),this.type="SpriteMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}qn.prototype=Object.create(we.prototype);qn.prototype.constructor=qn;qn.prototype.isSpriteMaterial=!0;qn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this};let Ni;const Sr=new M(),Bi=new M(),Gi=new M(),Ui=new $(),Ar=new $(),nl=new Re(),Cs=new M(),Lr=new M(),Ps=new M(),il=new $(),ia=new $(),rl=new $();function ra(e){if(ge.call(this),this.type="Sprite",Ni===void 0){Ni=new Se();const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new bt(t,5);Ni.setIndex([0,1,2,0,2,3]),Ni.setAttribute("position",new un(n,3,0,!1)),Ni.setAttribute("uv",new un(n,2,3,!1))}this.geometry=Ni,this.material=e!==void 0?e:new qn(),this.center=new $(.5,.5)}ra.prototype=Object.assign(Object.create(ge.prototype),{constructor:ra,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Bi.setFromMatrixScale(this.matrixWorld),nl.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Gi.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Bi.multiplyScalar(-Gi.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;Is(Cs.set(-.5,-.5,0),Gi,s,Bi,i,r),Is(Lr.set(.5,-.5,0),Gi,s,Bi,i,r),Is(Ps.set(.5,.5,0),Gi,s,Bi,i,r),il.set(0,0),ia.set(1,0),rl.set(1,1);let o=e.ray.intersectTriangle(Cs,Lr,Ps,!1,Sr);if(o===null&&(Is(Lr.set(-.5,.5,0),Gi,s,Bi,i,r),ia.set(0,1),o=e.ray.intersectTriangle(Cs,Ps,Lr,!1,Sr),o===null))return;const a=e.ray.origin.distanceTo(Sr);if(a<e.near||a>e.far)return;t.push({distance:a,point:Sr.clone(),uv:yt.getUV(Sr,Cs,Lr,Ps,il,ia,rl,new $()),face:null,object:this})},copy:function(e){return ge.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}});function Is(e,t,n,i,r,s){Ui.subVectors(e,n).addScalar(.5).multiply(i),r!==void 0?(Ar.x=s*Ui.x-r*Ui.y,Ar.y=r*Ui.x+s*Ui.y):Ar.copy(Ui),e.copy(t),e.x+=Ar.x,e.y+=Ar.y,e.applyMatrix4(nl)}const Ds=new M(),sl=new M();function Os(){ge.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}Os.prototype=Object.assign(Object.create(ge.prototype),{constructor:Os,isLOD:!0,copy:function(e){ge.prototype.copy.call(this,e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null},raycast:function(e,t){const n=this.levels;if(n.length>0){Ds.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Ds);this.getObjectForDistance(i).raycast(e,t)}},update:function(e){const t=this.levels;if(t.length>1){Ds.setFromMatrixPosition(e.matrixWorld),sl.setFromMatrixPosition(this.matrixWorld);const n=Ds.distanceTo(sl)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}},toJSON:function(e){const t=ge.prototype.toJSON.call(this,e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}});function Rr(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),qe.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Re(),this.bindMatrixInverse=new Re()}Rr.prototype=Object.assign(Object.create(qe.prototype),{constructor:Rr,isSkinnedMesh:!0,copy:function(e){return qe.prototype.copy.call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this},bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const e=new He(),t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const r=1/e.manhattanLength();r!==Infinity?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}},updateMatrixWorld:function(e){qe.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const e=new M(),t=new He(),n=new He(),i=new M(),r=new Re();return function(s,o){const a=this.skeleton,c=this.geometry;t.fromBufferAttribute(c.attributes.skinIndex,s),n.fromBufferAttribute(c.attributes.skinWeight,s),e.fromBufferAttribute(c.attributes.position,s).applyMatrix4(this.bindMatrix),o.set(0,0,0);for(let l=0;l<4;l++){const h=n.getComponent(l);if(h!==0){const u=t.getComponent(l);r.multiplyMatrices(a.bones[u].matrixWorld,a.boneInverses[u]),o.addScaledVector(i.copy(e).applyMatrix4(r),h)}}return o.applyMatrix4(this.bindMatrixInverse)}}()});const ol=new Re(),pg=new Re();function Cr(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Re())}}Object.assign(Cr.prototype,{calculateInverses:function(){this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++){const n=new Re();this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.getInverse(this.boneInverses[e])}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.getInverse(n.parent.matrixWorld),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=e.length;r<s;r++){const o=e[r]?e[r].matrixWorld:pg;ol.multiplyMatrices(o,t[r]),ol.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new Cr(this.bones,this.boneInverses)},getBoneByName:function(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}return},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function Fs(){ge.call(this),this.type="Bone"}Fs.prototype=Object.assign(Object.create(ge.prototype),{constructor:Fs,isBone:!0});const al=new Re(),cl=new Re(),Ns=[],Pr=new qe();function sa(e,t,n){qe.call(this,e,t),this.instanceMatrix=new Me(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}sa.prototype=Object.assign(Object.create(qe.prototype),{constructor:sa,isInstancedMesh:!0,copy:function(e){return qe.prototype.copy.call(this,e),this.instanceMatrix.copy(e.instanceMatrix),this.count=e.count,this},setColorAt:function(e,t){this.instanceColor===null&&(this.instanceColor=new Me(new Float32Array(this.count*3),3)),t.toArray(this.instanceColor.array,e*3)},getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){const n=this.matrixWorld,i=this.count;if(Pr.geometry=this.geometry,Pr.material=this.material,Pr.material===void 0)return;for(let r=0;r<i;r++){this.getMatrixAt(r,al),cl.multiplyMatrices(n,al),Pr.matrixWorld=cl,Pr.raycast(e,Ns);for(let s=0,o=Ns.length;s<o;s++){const a=Ns[s];a.instanceId=r,a.object=this,t.push(a)}Ns.length=0}},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function _t(e){we.call(this),this.type="LineBasicMaterial",this.color=new fe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}_t.prototype=Object.create(we.prototype);_t.prototype.constructor=_t;_t.prototype.isLineBasicMaterial=!0;_t.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this};const ll=new M(),ul=new M(),hl=new Re(),Bs=new pr(),Gs=new Wt();function hn(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),ge.call(this),this.type="Line",this.geometry=e!==void 0?e:new Se(),this.material=t!==void 0?t:new _t(),this.updateMorphTargets()}hn.prototype=Object.assign(Object.create(ge.prototype),{constructor:hn,isLine:!0,copy:function(e){return ge.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)ll.fromBufferAttribute(t,i-1),ul.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ll.distanceTo(ul);e.setAttribute("lineDistance",new ye(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;n[0]=0;for(let i=1,r=t.length;i<r;i++)n[i]=n[i-1],n[i]+=t[i-1].distanceTo(t[i])}return this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Gs.copy(n.boundingSphere),Gs.applyMatrix4(i),Gs.radius+=r,e.ray.intersectsSphere(Gs)===!1)return;hl.getInverse(i),Bs.copy(e.ray).applyMatrix4(hl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new M(),c=new M(),l=new M(),h=new M(),u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,d=n.attributes,m=d.position.array;if(f!==null){const y=f.array;for(let v=0,g=y.length-1;v<g;v+=u){const p=y[v],_=y[v+1];a.fromArray(m,p*3),c.fromArray(m,_*3);const E=Bs.distanceSqToSegment(a,c,h,l);if(E>o)continue;h.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(h);if(A<e.near||A>e.far)continue;t.push({distance:A,point:l.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else for(let y=0,v=m.length/3-1;y<v;y+=u){a.fromArray(m,3*y),c.fromArray(m,3*y+3);const g=Bs.distanceSqToSegment(a,c,h,l);if(g>o)continue;h.applyMatrix4(this.matrixWorld);const p=e.ray.origin.distanceTo(h);if(p<e.near||p>e.far)continue;t.push({distance:p,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,d=f.length;for(let m=0;m<d-1;m+=u){const y=Bs.distanceSqToSegment(f[m],f[m+1],h,l);if(y>o)continue;h.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(h);if(v<e.near||v>e.far)continue;t.push({distance:v,point:l.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Us=new M(),Hs=new M();function Xn(e,t){hn.call(this,e,t),this.type="LineSegments"}Xn.prototype=Object.assign(Object.create(hn.prototype),{constructor:Xn,isLineSegments:!0,computeLineDistances:function(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Us.fromBufferAttribute(t,i),Hs.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Us.distanceTo(Hs);e.setAttribute("lineDistance",new ye(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(e.isGeometry){const t=e.vertices,n=e.lineDistances;for(let i=0,r=t.length;i<r;i+=2)Us.copy(t[i]),Hs.copy(t[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Us.distanceTo(Hs)}return this}});function Ir(e,t){hn.call(this,e,t),this.type="LineLoop"}Ir.prototype=Object.assign(Object.create(hn.prototype),{constructor:Ir,isLineLoop:!0});function dn(e){we.call(this),this.type="PointsMaterial",this.color=new fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}dn.prototype=Object.create(we.prototype);dn.prototype.constructor=dn;dn.prototype.isPointsMaterial=!0;dn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this};const dl=new Re(),oa=new pr(),ks=new Wt(),zs=new M();function Dr(e,t){ge.call(this),this.type="Points",this.geometry=e!==void 0?e:new Se(),this.material=t!==void 0?t:new dn(),this.updateMorphTargets()}Dr.prototype=Object.assign(Object.create(ge.prototype),{constructor:Dr,isPoints:!0,copy:function(e){return ge.prototype.copy.call(this,e),this.material=e.material,this.geometry=e.geometry,this},raycast:function(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),ks.copy(n.boundingSphere),ks.applyMatrix4(i),ks.radius+=r,e.ray.intersectsSphere(ks)===!1)return;dl.getInverse(i),oa.copy(e.ray).applyMatrix4(dl);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,c=n.attributes,l=c.position.array;if(a!==null){const h=a.array;for(let u=0,f=h.length;u<f;u++){const d=h[u];zs.fromArray(l,d*3),aa(zs,d,o,i,e,t,this)}}else for(let h=0,u=l.length/3;h<u;h++)zs.fromArray(l,h*3),aa(zs,h,o,i,e,t,this)}else{const a=n.vertices;for(let c=0,l=a.length;c<l;c++)aa(a[c],c,o,i,e,t,this)}},updateMorphTargets:function(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function aa(e,t,n,i,r,s,o){const a=oa.distanceSqToPoint(e);if(a<n){const c=new M();oa.closestPointToPoint(e,c),c.applyMatrix4(i);const l=r.ray.origin.distanceTo(c);if(l<r.near||l>r.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:o})}}function Vs(e,t,n,i,r,s,o,a,c){Ue.call(this,e,t,n,i,r,s,o,a,c),this.format=o!==void 0?o:tn,this.minFilter=s!==void 0?s:Ze,this.magFilter=r!==void 0?r:Ze,this.generateMipmaps=!1;const l=this;function h(){l.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}Vs.prototype=Object.assign(Object.create(Ue.prototype),{constructor:Vs,isVideoTexture:!0,update:function(){const e=this.image,t="requestVideoFrameCallback"in e;t===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Or(e,t,n,i,r,s,o,a,c,l,h,u){Ue.call(this,null,s,o,a,c,l,i,r,h,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}Or.prototype=Object.create(Ue.prototype);Or.prototype.constructor=Or;Or.prototype.isCompressedTexture=!0;function Hi(e,t,n,i,r,s,o,a,c){Ue.call(this,e,t,n,i,r,s,o,a,c),this.needsUpdate=!0}Hi.prototype=Object.create(Ue.prototype);Hi.prototype.constructor=Hi;Hi.prototype.isCanvasTexture=!0;function Ws(e,t,n,i,r,s,o,a,c,l){if(l=l!==void 0?l:ui,l!==ui&&l!==ur)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===ui&&(n=rs),n===void 0&&l===ur&&(n=lr),Ue.call(this,null,i,r,s,o,a,l,n,c),this.image={width:e,height:t},this.magFilter=o!==void 0?o:it,this.minFilter=a!==void 0?a:it,this.flipY=!1,this.generateMipmaps=!1}Ws.prototype=Object.create(Ue.prototype);Ws.prototype.constructor=Ws;Ws.prototype.isDepthTexture=!0;class mg extends Se{constructor(e){super();this.type="WireframeGeometry";const t=[],n=[0,0],i={},r=["a","b","c"];if(e&&e.isGeometry){const s=e.faces;for(let o=0,a=s.length;o<a;o++){const c=s[o];for(let l=0;l<3;l++){const h=c[r[l]],u=c[r[(l+1)%3]];n[0]=Math.min(h,u),n[1]=Math.max(h,u);const f=n[0]+","+n[1];i[f]===void 0&&(i[f]={index1:n[0],index2:n[1]})}}for(const o in i){const a=i[o];let c=e.vertices[a.index1];t.push(c.x,c.y,c.z),c=e.vertices[a.index2],t.push(c.x,c.y,c.z)}}else if(e&&e.isBufferGeometry){const s=new M();if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,h=c.length;l<h;++l){const u=c[l],f=u.start,d=u.count;for(let m=f,y=f+d;m<y;m+=3)for(let v=0;v<3;v++){const g=a.getX(m+v),p=a.getX(m+(v+1)%3);n[0]=Math.min(g,p),n[1]=Math.max(g,p);const _=n[0]+","+n[1];i[_]===void 0&&(i[_]={index1:n[0],index2:n[1]})}}for(const l in i){const h=i[l];s.fromBufferAttribute(o,h.index1),t.push(s.x,s.y,s.z),s.fromBufferAttribute(o,h.index2),t.push(s.x,s.y,s.z)}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let l=0;l<3;l++){const h=3*a+l;s.fromBufferAttribute(o,h),t.push(s.x,s.y,s.z);const u=3*a+(l+1)%3;s.fromBufferAttribute(o,u),t.push(s.x,s.y,s.z)}}}this.setAttribute("position",new ye(t,3))}}function js(e,t,n){Ge.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new Fr(e,t,n)),this.mergeVertices()}js.prototype=Object.create(Ge.prototype);js.prototype.constructor=js;function Fr(e,t,n){Se.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,c=new M(),l=new M(),h=new M(),u=new M(),f=new M();e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=t+1;for(let m=0;m<=n;m++){const y=m/n;for(let v=0;v<=t;v++){const g=v/t;e(g,y,l),r.push(l.x,l.y,l.z),g-a>=0?(e(g-a,y,h),u.subVectors(l,h)):(e(g+a,y,h),u.subVectors(h,l)),y-a>=0?(e(g,y-a,h),f.subVectors(l,h)):(e(g,y+a,h),f.subVectors(h,l)),c.crossVectors(u,f).normalize(),s.push(c.x,c.y,c.z),o.push(g,y)}}for(let m=0;m<n;m++)for(let y=0;y<t;y++){const v=m*d+y,g=m*d+y+1,p=(m+1)*d+y+1,_=(m+1)*d+y;i.push(v,g,_),i.push(g,p,_)}this.setIndex(i),this.setAttribute("position",new ye(r,3)),this.setAttribute("normal",new ye(s,3)),this.setAttribute("uv",new ye(o,2))}Fr.prototype=Object.create(Se.prototype);Fr.prototype.constructor=Fr;class gg extends Ge{constructor(e,t,n,i){super();this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},this.fromBufferGeometry(new ki(e,t,n,i)),this.mergeVertices()}}class ki extends Se{constructor(e,t,n,i){super();this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},n=n||1,i=i||0;const r=[],s=[];o(i),c(n),l(),this.setAttribute("position",new ye(r,3)),this.setAttribute("normal",new ye(r.slice(),3)),this.setAttribute("uv",new ye(s,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(g){const p=new M(),_=new M(),E=new M();for(let A=0;A<t.length;A+=3)f(t[A+0],p),f(t[A+1],_),f(t[A+2],E),a(p,_,E,g)}function a(g,p,_,E){const A=Math.pow(2,E),b=[];for(let C=0;C<=A;C++){b[C]=[];const j=g.clone().lerp(_,C/A),N=p.clone().lerp(_,C/A),ne=A-C;for(let z=0;z<=ne;z++)z===0&&C===A?b[C][z]=j:b[C][z]=j.clone().lerp(N,z/ne)}for(let C=0;C<A;C++)for(let j=0;j<2*(A-C)-1;j++){const N=Math.floor(j/2);j%2===0?(u(b[C][N+1]),u(b[C+1][N]),u(b[C][N])):(u(b[C][N+1]),u(b[C+1][N+1]),u(b[C+1][N]))}}function c(g){const p=new M();for(let _=0;_<r.length;_+=3)p.x=r[_+0],p.y=r[_+1],p.z=r[_+2],p.normalize().multiplyScalar(g),r[_+0]=p.x,r[_+1]=p.y,r[_+2]=p.z}function l(){const g=new M();for(let p=0;p<r.length;p+=3){g.x=r[p+0],g.y=r[p+1],g.z=r[p+2];const _=y(g)/2/Math.PI+.5,E=v(g)/Math.PI+.5;s.push(_,1-E)}d(),h()}function h(){for(let g=0;g<s.length;g+=6){const p=s[g+0],_=s[g+2],E=s[g+4],A=Math.max(p,_,E),b=Math.min(p,_,E);A>.9&&b<.1&&(p<.2&&(s[g+0]+=1),_<.2&&(s[g+2]+=1),E<.2&&(s[g+4]+=1))}}function u(g){r.push(g.x,g.y,g.z)}function f(g,p){const _=g*3;p.x=e[_+0],p.y=e[_+1],p.z=e[_+2]}function d(){const g=new M(),p=new M(),_=new M(),E=new M(),A=new $(),b=new $(),C=new $();for(let j=0,N=0;j<r.length;j+=9,N+=6){g.set(r[j+0],r[j+1],r[j+2]),p.set(r[j+3],r[j+4],r[j+5]),_.set(r[j+6],r[j+7],r[j+8]),A.set(s[N+0],s[N+1]),b.set(s[N+2],s[N+3]),C.set(s[N+4],s[N+5]),E.copy(g).add(p).add(_).divideScalar(3);const ne=y(E);m(A,N+0,g,ne),m(b,N+2,p,ne),m(C,N+4,_,ne)}}function m(g,p,_,E){E<0&&g.x===1&&(s[p]=g.x-1),_.x===0&&_.z===0&&(s[p]=E/2/Math.PI+.5)}function y(g){return Math.atan2(g.z,-g.x)}function v(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}}class vg extends Ge{constructor(e,t){super();this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new fl(e,t)),this.mergeVertices()}}class fl extends ki{constructor(e,t){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t);this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class yg extends Ge{constructor(e,t){super();this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new pl(e,t)),this.mergeVertices()}}class pl extends ki{constructor(e,t){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t);this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class xg extends Ge{constructor(e,t){super();this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new ml(e,t)),this.mergeVertices()}}class ml extends ki{constructor(e,t){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t);this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class bg extends Ge{constructor(e,t){super();this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new gl(e,t)),this.mergeVertices()}}class gl extends ki{constructor(e,t){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,s,e,t);this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}}class _g extends Ge{constructor(e,t,n,i,r,s){super();this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},s!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");const o=new vl(e,t,n,i,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}}class vl extends Se{constructor(e,t,n,i,r){super();this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},t=t||64,n=n||1,i=i||8,r=r||!1;const s=e.computeFrenetFrames(t,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals;const o=new M(),a=new M(),c=new $();let l=new M();const h=[],u=[],f=[],d=[];m(),this.setIndex(d),this.setAttribute("position",new ye(h,3)),this.setAttribute("normal",new ye(u,3)),this.setAttribute("uv",new ye(f,2));function m(){for(let p=0;p<t;p++)y(p);y(r===!1?t:0),g(),v()}function y(p){l=e.getPointAt(p/t,l);const _=s.normals[p],E=s.binormals[p];for(let A=0;A<=i;A++){const b=A/i*Math.PI*2,C=Math.sin(b),j=-Math.cos(b);a.x=j*_.x+C*E.x,a.y=j*_.y+C*E.y,a.z=j*_.z+C*E.z,a.normalize(),u.push(a.x,a.y,a.z),o.x=l.x+n*a.x,o.y=l.y+n*a.y,o.z=l.z+n*a.z,h.push(o.x,o.y,o.z)}}function v(){for(let p=1;p<=t;p++)for(let _=1;_<=i;_++){const E=(i+1)*(p-1)+(_-1),A=(i+1)*p+(_-1),b=(i+1)*p+_,C=(i+1)*(p-1)+_;d.push(E,A,C),d.push(A,b,C)}}function g(){for(let p=0;p<=t;p++)for(let _=0;_<=i;_++)c.x=p/t,c.y=_/i,f.push(c.x,c.y)}}toJSON(){const e=Se.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class wg extends Ge{constructor(e,t,n,i,r,s,o){super();this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new yl(e,t,n,i,r,s)),this.mergeVertices()}}class yl extends Se{constructor(e,t,n,i,r,s){super();this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:s},e=e||1,t=t||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,s=s||3;const o=[],a=[],c=[],l=[],h=new M(),u=new M(),f=new M(),d=new M(),m=new M(),y=new M(),v=new M();for(let p=0;p<=n;++p){const _=p/n*r*Math.PI*2;g(_,r,s,e,f),g(_+.01,r,s,e,d),y.subVectors(d,f),v.addVectors(d,f),m.crossVectors(y,v),v.crossVectors(m,y),m.normalize(),v.normalize();for(let E=0;E<=i;++E){const A=E/i*Math.PI*2,b=-t*Math.cos(A),C=t*Math.sin(A);h.x=f.x+(b*v.x+C*m.x),h.y=f.y+(b*v.y+C*m.y),h.z=f.z+(b*v.z+C*m.z),a.push(h.x,h.y,h.z),u.subVectors(h,f).normalize(),c.push(u.x,u.y,u.z),l.push(p/n),l.push(E/i)}}for(let p=1;p<=n;p++)for(let _=1;_<=i;_++){const E=(i+1)*(p-1)+(_-1),A=(i+1)*p+(_-1),b=(i+1)*p+_,C=(i+1)*(p-1)+_;o.push(E,A,C),o.push(A,b,C)}this.setIndex(o),this.setAttribute("position",new ye(a,3)),this.setAttribute("normal",new ye(c,3)),this.setAttribute("uv",new ye(l,2));function g(p,_,E,A,b){const C=Math.cos(p),j=Math.sin(p),N=E/_*p,ne=Math.cos(N);b.x=A*(2+ne)*.5*C,b.y=A*(2+ne)*j*.5,b.z=A*Math.sin(N)*.5}}}class Mg extends Ge{constructor(e,t,n,i,r){super();this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new xl(e,t,n,i,r)),this.mergeVertices()}}class xl extends Se{constructor(e,t,n,i,r){super();this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},e=e||1,t=t||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;const s=[],o=[],a=[],c=[],l=new M(),h=new M(),u=new M();for(let f=0;f<=n;f++)for(let d=0;d<=i;d++){const m=d/i*r,y=f/n*Math.PI*2;h.x=(e+t*Math.cos(y))*Math.cos(m),h.y=(e+t*Math.cos(y))*Math.sin(m),h.z=t*Math.sin(y),o.push(h.x,h.y,h.z),l.x=e*Math.cos(m),l.y=e*Math.sin(m),u.subVectors(h,l).normalize(),a.push(u.x,u.y,u.z),c.push(d/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let d=1;d<=i;d++){const m=(i+1)*f+d-1,y=(i+1)*(f-1)+d-1,v=(i+1)*(f-1)+d,g=(i+1)*f+d;s.push(m,y,g),s.push(y,v,g)}this.setIndex(s),this.setAttribute("position",new ye(o,3)),this.setAttribute("normal",new ye(a,3)),this.setAttribute("uv",new ye(c,2))}}const Eg={triangulate:function(e,t,n){n=n||2;const i=t&&t.length,r=i?t[0]*n:e.length;let s=bl(e,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,l,h,u,f,d;if(i&&(s=Tg(e,t,s,n)),e.length>80*n){a=l=e[0],c=h=e[1];for(let m=n;m<r;m+=n)u=e[m],f=e[m+1],u<a&&(a=u),f<c&&(c=f),u>l&&(l=u),f>h&&(h=f);d=Math.max(l-a,h-c),d=d!==0?1/d:0}return Nr(s,o,n,a,c,d),o}};function bl(e,t,n,i,r){let s,o;if(r===Sg(e,t,n,i)>0)for(s=t;s<n;s+=i)o=_l(s,e[s],e[s+1],o);else for(s=n-i;s>=t;s-=i)o=_l(s,e[s],e[s+1],o);return o&&qs(o,o.next)&&(Br(o),o=o.next),o}function In(e,t){if(!e)return e;t||(t=e);let n=e,i;do if(i=!1,!n.steiner&&(qs(n,n.next)||Ye(n.prev,n,n.next)===0)){if(Br(n),n=t=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==t);return t}function Nr(e,t,n,i,r,s,o){if(!e)return;!o&&s&&Pg(e,i,r,s);let a=e,c,l;for(;e.prev!==e.next;){if(c=e.prev,l=e.next,s?Lg(e,i,r,s):Ag(e)){t.push(c.i/n),t.push(e.i/n),t.push(l.i/n),Br(e),e=l.next,a=l.next;continue}if(e=l,e===a){o?o===1?(e=Rg(In(e),t,n),Nr(e,t,n,i,r,s,2)):o===2&&Cg(e,t,n,i,r,s):Nr(In(e),t,n,i,r,s,1);break}}}function Ag(e){const t=e.prev,n=e,i=e.next;if(Ye(t,n,i)>=0)return!1;let r=e.next.next;for(;r!==e.prev;){if(zi(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ye(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Lg(e,t,n,i){const r=e.prev,s=e,o=e.next;if(Ye(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,c=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,l=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,u=ca(a,c,t,n,i),f=ca(l,h,t,n,i);let d=e.prevZ,m=e.nextZ;for(;d&&d.z>=u&&m&&m.z<=f;){if(d!==e.prev&&d!==e.next&&zi(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ye(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,m!==e.prev&&m!==e.next&&zi(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Ye(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&zi(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ye(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;m&&m.z<=f;){if(m!==e.prev&&m!==e.next&&zi(r.x,r.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Ye(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Rg(e,t,n){let i=e;do{const r=i.prev,s=i.next.next;!qs(r,s)&&wl(r,i,i.next,s)&&Gr(r,s)&&Gr(s,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(s.i/n),Br(i),Br(i.next),i=e=s),i=i.next}while(i!==e);return In(i)}function Cg(e,t,n,i,r,s){let o=e;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Ig(o,a)){let c=Ml(o,a);o=In(o,o.next),c=In(c,c.next),Nr(o,t,n,i,r,s),Nr(c,t,n,i,r,s);return}a=a.next}o=o.next}while(o!==e)}function Tg(e,t,n,i){const r=[];let s,o,a,c,l;for(s=0,o=t.length;s<o;s++)a=t[s]*i,c=s<o-1?t[s+1]*i:e.length,l=bl(e,a,c,i,!1),l===l.next&&(l.steiner=!0),r.push(Fg(l));for(r.sort(Dg),s=0;s<r.length;s++)Og(r[s],n),n=In(n,n.next);return n}function Dg(e,t){return e.x-t.x}function Og(e,t){if(t=Ng(e,t),t){const n=Ml(t,e);In(t,t.next),In(n,n.next)}}function Ng(e,t){let n=t;const i=e.x,r=e.y;let s=-Infinity,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>s){if(s=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!o)return null;if(i===s)return o;const a=o,c=o.x,l=o.y;let h=Infinity,u;n=o;do i>=n.x&&n.x>=c&&i!==n.x&&zi(r<l?i:s,r,c,l,r<l?s:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),Gr(n,e)&&(u<h||u===h&&(n.x>o.x||n.x===o.x&&Bg(o,n)))&&(o=n,h=u)),n=n.next;while(n!==a);return o}function Bg(e,t){return Ye(e.prev,e,t.prev)<0&&Ye(t.next,e,e.next)<0}function Pg(e,t,n,i){let r=e;do r.z===null&&(r.z=ca(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,Gg(r)}function Gg(e){let t,n,i,r,s,o,a,c,l=1;do{for(n=e,e=null,s=null,o=0;n;){for(o++,i=n,a=0,t=0;t<l&&!(a++,i=i.nextZ,!i);t++);for(c=l;a>0||c>0&&i;)a!==0&&(c===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,c--),s?s.nextZ=r:e=r,r.prevZ=s,s=r;n=i}s.nextZ=null,l*=2}while(o>1);return e}function ca(e,t,n,i,r){return e=32767*(e-n)*r,t=32767*(t-i)*r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function Fg(e){let t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e);return n}function zi(e,t,n,i,r,s,o,a){return(r-o)*(t-a)-(e-o)*(s-a)>=0&&(e-o)*(i-a)-(n-o)*(t-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function Ig(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!Ug(e,t)&&(Gr(e,t)&&Gr(t,e)&&Hg(e,t)&&(Ye(e.prev,e,t.prev)||Ye(e,t.prev,t))||qs(e,t)&&Ye(e.prev,e,e.next)>0&&Ye(t.prev,t,t.next)>0)}function Ye(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function qs(e,t){return e.x===t.x&&e.y===t.y}function wl(e,t,n,i){const r=Ys(Ye(e,t,n)),s=Ys(Ye(e,t,i)),o=Ys(Ye(n,i,e)),a=Ys(Ye(n,i,t));return r!==s&&o!==a||(r===0&&Xs(e,n,t)||(s===0&&Xs(e,i,t)||o===0&&Xs(n,e,i)))?!0:!!(a===0&&Xs(n,t,i))}function Xs(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Ys(e){return e>0?1:e<0?-1:0}function Ug(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&wl(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function Gr(e,t){return Ye(e.prev,e,e.next)<0?Ye(e,t,e.next)>=0&&Ye(e,e.prev,t)>=0:Ye(e,t,e.prev)<0||Ye(e,e.next,t)<0}function Hg(e,t){let n=e,i=!1;const r=(e.x+t.x)/2,s=(e.y+t.y)/2;do n.y>s!==n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function Ml(e,t){const n=new la(e.i,e.x,e.y),i=new la(t.i,t.x,t.y),r=e.next,s=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function _l(e,t,n,i){const r=new la(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Br(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function la(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Sg(e,t,n,i){let r=0;for(let s=t,o=n-i;s<n;s+=i)r+=(e[o]-e[s])*(e[s+1]+e[o+1]),o=s;return r}const Dn={area:function(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},isClockWise:function(e){return Dn.area(e)<0},triangulateShape:function(e,t){const n=[],i=[],r=[];Tl(e),El(n,e);let s=e.length;t.forEach(Tl);for(let a=0;a<t.length;a++)i.push(s),s+=t[a].length,El(n,t[a]);const o=Eg.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function Tl(e){const t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function El(e,t){for(let n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}class Al extends Ge{constructor(e,t){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new Zs(e,t)),this.mergeVertices()}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Sl(t,n,e)}}class Zs extends Se{constructor(e,t){super();this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,a=e.length;o<a;o++){const c=e[o];s(c)}this.setAttribute("position",new ye(i,3)),this.setAttribute("uv",new ye(r,2)),this.computeVertexNormals();function s(o){const a=[],c=t.curveSegments!==void 0?t.curveSegments:12,l=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:100,u=t.bevelEnabled!==void 0?t.bevelEnabled:!0,f=t.bevelThickness!==void 0?t.bevelThickness:6,d=t.bevelSize!==void 0?t.bevelSize:f-2,m=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,g=t.UVGenerator!==void 0?t.UVGenerator:kg;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let p,_=!1,E,A,b,C;v&&(p=v.getSpacedPoints(l),_=!0,u=!1,E=v.computeFrenetFrames(l,!1),A=new M(),b=new M(),C=new M()),u||(y=0,f=0,d=0,m=0);const j=o.extractPoints(c);let N=j.shape;const ne=j.holes,z=!Dn.isClockWise(N);if(z){N=N.reverse();for(let P=0,U=ne.length;P<U;P++){const k=ne[P];Dn.isClockWise(k)&&(ne[P]=k.reverse())}}const q=Dn.triangulateShape(N,ne),W=N;for(let P=0,U=ne.length;P<U;P++){const k=ne[P];N=N.concat(k)}function H(P,U,k){return U||console.error("THREE.ExtrudeGeometry: vec does not exist"),U.clone().multiplyScalar(k).add(P)}const G=N.length,K=q.length;function re(P,U,k){let X,V,ee;const w=P.x-U.x,S=P.y-U.y,Q=k.x-P.x,J=k.y-P.y,F=w*w+S*S,ie=w*J-S*Q;if(Math.abs(ie)>Number.EPSILON){const oe=Math.sqrt(F),xe=Math.sqrt(Q*Q+J*J),ce=U.x-S/oe,pe=U.y+w/oe,me=k.x-J/xe,Te=k.y+Q/xe,le=((me-ce)*J-(Te-pe)*Q)/(w*J-S*Q);X=ce+w*le-P.x,V=pe+S*le-P.y;const _e=X*X+V*V;if(_e<=2)return new $(X,V);ee=Math.sqrt(_e/2)}else{let oe=!1;w>Number.EPSILON?Q>Number.EPSILON&&(oe=!0):w<-Number.EPSILON?Q<-Number.EPSILON&&(oe=!0):Math.sign(S)===Math.sign(J)&&(oe=!0),oe?(X=-S,V=w,ee=Math.sqrt(F)):(X=w,V=S,ee=Math.sqrt(F/2))}return new $(X/ee,V/ee)}const se=[];for(let P=0,U=W.length,k=U-1,X=P+1;P<U;P++,k++,X++)k===U&&(k=0),X===U&&(X=0),se[P]=re(W[P],W[k],W[X]);const ue=[];let ae,ve=se.concat();for(let P=0,U=ne.length;P<U;P++){const k=ne[P];ae=[];for(let X=0,V=k.length,ee=V-1,w=X+1;X<V;X++,ee++,w++)ee===V&&(ee=0),w===V&&(w=0),ae[X]=re(k[X],k[ee],k[w]);ue.push(ae),ve=ve.concat(ae)}for(let P=0;P<y;P++){const U=P/y,k=f*Math.cos(U*Math.PI/2),X=d*Math.sin(U*Math.PI/2)+m;for(let V=0,ee=W.length;V<ee;V++){const w=H(W[V],se[V],X);I(w.x,w.y,-k)}for(let V=0,ee=ne.length;V<ee;V++){const w=ne[V];ae=ue[V];for(let S=0,Q=w.length;S<Q;S++){const J=H(w[S],ae[S],X);I(J.x,J.y,-k)}}}const Ce=d+m;for(let P=0;P<G;P++){const U=u?H(N[P],ve[P],Ce):N[P];_?(b.copy(E.normals[0]).multiplyScalar(U.x),A.copy(E.binormals[0]).multiplyScalar(U.y),C.copy(p[0]).add(b).add(A),I(C.x,C.y,C.z)):I(U.x,U.y,0)}for(let P=1;P<=l;P++)for(let U=0;U<G;U++){const k=u?H(N[U],ve[U],Ce):N[U];_?(b.copy(E.normals[P]).multiplyScalar(k.x),A.copy(E.binormals[P]).multiplyScalar(k.y),C.copy(p[P]).add(b).add(A),I(C.x,C.y,C.z)):I(k.x,k.y,h/l*P)}for(let P=y-1;P>=0;P--){const U=P/y,k=f*Math.cos(U*Math.PI/2),X=d*Math.sin(U*Math.PI/2)+m;for(let V=0,ee=W.length;V<ee;V++){const w=H(W[V],se[V],X);I(w.x,w.y,h+k)}for(let V=0,ee=ne.length;V<ee;V++){const w=ne[V];ae=ue[V];for(let S=0,Q=w.length;S<Q;S++){const J=H(w[S],ae[S],X);_?I(J.x,J.y+p[l-1].y,p[l-1].x+k):I(J.x,J.y,h+k)}}}Ae(),T();function Ae(){const P=i.length/3;if(u){let U=0,k=G*U;for(let X=0;X<K;X++){const V=q[X];L(V[2]+k,V[1]+k,V[0]+k)}U=l+y*2,k=G*U;for(let X=0;X<K;X++){const V=q[X];L(V[0]+k,V[1]+k,V[2]+k)}}else{for(let U=0;U<K;U++){const k=q[U];L(k[2],k[1],k[0])}for(let U=0;U<K;U++){const k=q[U];L(k[0]+G*l,k[1]+G*l,k[2]+G*l)}}n.addGroup(P,i.length/3-P,0)}function T(){const P=i.length/3;let U=0;x(W,U),U+=W.length;for(let k=0,X=ne.length;k<X;k++){const V=ne[k];x(V,U),U+=V.length}n.addGroup(P,i.length/3-P,1)}function x(P,U){let k=P.length;for(;--k>=0;){const X=k;let V=k-1;V<0&&(V=P.length-1);for(let ee=0,w=l+y*2;ee<w;ee++){const S=G*ee,Q=G*(ee+1),J=U+X+S,F=U+V+S,ie=U+V+Q,oe=U+X+Q;D(J,F,ie,oe)}}}function I(P,U,k){a.push(P),a.push(U),a.push(k)}function L(P,U,k){O(P),O(U),O(k);const X=i.length/3,V=g.generateTopUV(n,i,X-3,X-2,X-1);B(V[0]),B(V[1]),B(V[2])}function D(P,U,k,X){O(P),O(U),O(X),O(U),O(k),O(X);const V=i.length/3,ee=g.generateSideWallUV(n,i,V-6,V-3,V-2,V-1);B(ee[0]),B(ee[1]),B(ee[3]),B(ee[1]),B(ee[2]),B(ee[3])}function O(P){i.push(a[P*3+0]),i.push(a[P*3+1]),i.push(a[P*3+2])}function B(P){r.push(P.x),r.push(P.y)}}}toJSON(){const e=Se.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return Sl(t,n,e)}}const kg={generateTopUV:function(e,t,n,i,r){const s=t[n*3],o=t[n*3+1],a=t[i*3],c=t[i*3+1],l=t[r*3],h=t[r*3+1];return[new $(s,o),new $(a,c),new $(l,h)]},generateSideWallUV:function(e,t,n,i,r,s){const o=t[n*3],a=t[n*3+1],c=t[n*3+2],l=t[i*3],h=t[i*3+1],u=t[i*3+2],f=t[r*3],d=t[r*3+1],m=t[r*3+2],y=t[s*3],v=t[s*3+1],g=t[s*3+2];return Math.abs(a-h)<.01?[new $(o,1-c),new $(l,1-u),new $(f,1-m),new $(y,1-g)]:[new $(a,1-c),new $(h,1-u),new $(d,1-m),new $(v,1-g)]}};function Sl(e,t,n){if(n.shapes=[],Array.isArray(e))for(let i=0,r=e.length;i<r;i++){const s=e[i];n.shapes.push(s.uuid)}else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}class zg extends Ge{constructor(e,t){super();this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new Ll(e,t)),this.mergeVertices()}}class Ll extends Zs{constructor(e,t){t=t||{};const n=t.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Ge();const i=n.generateShapes(e,t.size);t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),super(i,t),this.type="TextBufferGeometry"}}class Vg extends Ge{constructor(e,t,n,i,r,s,o){super();this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new Rl(e,t,n,i,r,s,o)),this.mergeVertices()}}class Rl extends Se{constructor(e,t,n,i,r,s,o){super();this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:s,thetaLength:o},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI;const a=Math.min(s+o,Math.PI);let c=0;const l=[],h=new M(),u=new M(),f=[],d=[],m=[],y=[];for(let v=0;v<=n;v++){const g=[],p=v/n;let _=0;v==0&&s==0?_=.5/t:v==n&&a==Math.PI&&(_=-.5/t);for(let E=0;E<=t;E++){const A=E/t;h.x=-e*Math.cos(i+A*r)*Math.sin(s+p*o),h.y=e*Math.cos(s+p*o),h.z=e*Math.sin(i+A*r)*Math.sin(s+p*o),d.push(h.x,h.y,h.z),u.copy(h).normalize(),m.push(u.x,u.y,u.z),y.push(A+_,1-p),g.push(c++)}l.push(g)}for(let v=0;v<n;v++)for(let g=0;g<t;g++){const p=l[v][g+1],_=l[v][g],E=l[v+1][g],A=l[v+1][g+1];(v!==0||s>0)&&f.push(p,_,A),(v!==n-1||a<Math.PI)&&f.push(_,E,A)}this.setIndex(f),this.setAttribute("position",new ye(d,3)),this.setAttribute("normal",new ye(m,3)),this.setAttribute("uv",new ye(y,2))}}class Wg extends Ge{constructor(e,t,n,i,r,s){super();this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},this.fromBufferGeometry(new Js(e,t,n,i,r,s)),this.mergeVertices()}}class Js extends Se{constructor(e,t,n,i,r,s){super();this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:s},e=e||.5,t=t||1,r=r!==void 0?r:0,s=s!==void 0?s:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;const o=[],a=[],c=[],l=[];let h=e;const u=(t-e)/i,f=new M(),d=new $();for(let m=0;m<=i;m++){for(let y=0;y<=n;y++){const v=r+y/n*s;f.x=h*Math.cos(v),f.y=h*Math.sin(v),a.push(f.x,f.y,f.z),c.push(0,0,1),d.x=(f.x/t+1)/2,d.y=(f.y/t+1)/2,l.push(d.x,d.y)}h+=u}for(let m=0;m<i;m++){const y=m*(n+1);for(let v=0;v<n;v++){const g=v+y,p=g,_=g+n+1,E=g+n+2,A=g+1;o.push(p,_,A),o.push(_,E,A)}}this.setIndex(o),this.setAttribute("position",new ye(a,3)),this.setAttribute("normal",new ye(c,3)),this.setAttribute("uv",new ye(l,2))}}class jg extends Ge{constructor(e,t,n,i){super();this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},this.fromBufferGeometry(new Cl(e,t,n,i)),this.mergeVertices()}}class Cl extends Se{constructor(e,t,n,i){super();this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t)||12,n=n||0,i=i||Math.PI*2,i=Ee.clamp(i,0,Math.PI*2);const r=[],s=[],o=[],a=1/t,c=new M(),l=new $();for(let h=0;h<=t;h++){const u=n+h*a*i,f=Math.sin(u),d=Math.cos(u);for(let m=0;m<=e.length-1;m++)c.x=e[m].x*f,c.y=e[m].y,c.z=e[m].x*d,s.push(c.x,c.y,c.z),l.x=h/t,l.y=m/(e.length-1),o.push(l.x,l.y)}for(let h=0;h<t;h++)for(let u=0;u<e.length-1;u++){const f=u+h*e.length,d=f,m=f+e.length,y=f+e.length+1,v=f+1;r.push(d,m,v),r.push(m,y,v)}if(this.setIndex(r),this.setAttribute("position",new ye(s,3)),this.setAttribute("uv",new ye(o,2)),this.computeVertexNormals(),i===Math.PI*2){const h=this.attributes.normal.array,u=new M(),f=new M(),d=new M(),m=t*e.length*3;for(let y=0,v=0;y<e.length;y++,v+=3)u.x=h[v+0],u.y=h[v+1],u.z=h[v+2],f.x=h[m+v+0],f.y=h[m+v+1],f.z=h[m+v+2],d.addVectors(u,f).normalize(),h[v+0]=h[m+v+0]=d.x,h[v+1]=h[m+v+1]=d.y,h[v+2]=h[m+v+2]=d.z}}}class Dl extends Ge{constructor(e,t){super();this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Pl(e,t)),this.mergeVertices()}toJSON(){const e=Ge.prototype.toJSON.call(this),t=this.parameters.shapes;return Il(t,e)}}class Pl extends Se{constructor(e,t){super();this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;const n=[],i=[],r=[],s=[];let o=0,a=0;if(Array.isArray(e)===!1)c(e);else for(let l=0;l<e.length;l++)c(e[l]),this.addGroup(o,a,l),o+=a,a=0;this.setIndex(n),this.setAttribute("position",new ye(i,3)),this.setAttribute("normal",new ye(r,3)),this.setAttribute("uv",new ye(s,2));function c(l){const h=i.length/3,u=l.extractPoints(t);let f=u.shape;const d=u.holes;Dn.isClockWise(f)===!1&&(f=f.reverse());for(let y=0,v=d.length;y<v;y++){const g=d[y];Dn.isClockWise(g)===!0&&(d[y]=g.reverse())}const m=Dn.triangulateShape(f,d);for(let y=0,v=d.length;y<v;y++){const g=d[y];f=f.concat(g)}for(let y=0,v=f.length;y<v;y++){const g=f[y];i.push(g.x,g.y,0),r.push(0,0,1),s.push(g.x,g.y)}for(let y=0,v=m.length;y<v;y++){const g=m[y],p=g[0]+h,_=g[1]+h,E=g[2]+h;n.push(p,_,E),a+=3}}}toJSON(){const e=Se.prototype.toJSON.call(this),t=this.parameters.shapes;return Il(t,e)}}function Il(e,t){if(t.shapes=[],Array.isArray(e))for(let n=0,i=e.length;n<i;n++){const r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}class qg extends Se{constructor(e,t){super();this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;const n=[],i=Math.cos(Ee.DEG2RAD*t),r=[0,0],s={};let o,a,c;const l=["a","b","c"];let h;e.isBufferGeometry?(h=new Ge(),h.fromBufferGeometry(e)):h=e.clone(),h.mergeVertices(),h.computeFaceNormals();const u=h.vertices,f=h.faces;for(let d=0,m=f.length;d<m;d++){const y=f[d];for(let v=0;v<3;v++)o=y[l[v]],a=y[l[(v+1)%3]],r[0]=Math.min(o,a),r[1]=Math.max(o,a),c=r[0]+","+r[1],s[c]===void 0?s[c]={index1:r[0],index2:r[1],face1:d,face2:void 0}:s[c].face2=d}for(c in s){const d=s[c];if(d.face2===void 0||f[d.face1].normal.dot(f[d.face2].normal)<=i){let m=u[d.index1];n.push(m.x,m.y,m.z),m=u[d.index2],n.push(m.x,m.y,m.z)}}this.setAttribute("position",new ye(n,3))}}class Ol extends Ge{constructor(e,t,n,i,r,s,o,a){super();this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new ua(e,t,n,i,r,s,o,a)),this.mergeVertices()}}class ua extends Se{constructor(e,t,n,i,r,s,o,a){super();this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a};const c=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,s=s!==void 0?s:!1,o=o!==void 0?o:0,a=a!==void 0?a:Math.PI*2;const l=[],h=[],u=[],f=[];let d=0;const m=[],y=n/2;let v=0;g(),s===!1&&(e>0&&p(!0),t>0&&p(!1)),this.setIndex(l),this.setAttribute("position",new ye(h,3)),this.setAttribute("normal",new ye(u,3)),this.setAttribute("uv",new ye(f,2));function g(){const _=new M(),E=new M();let A=0;const b=(t-e)/n;for(let C=0;C<=r;C++){const j=[],N=C/r,ne=N*(t-e)+e;for(let z=0;z<=i;z++){const q=z/i,W=q*a+o,H=Math.sin(W),G=Math.cos(W);E.x=ne*H,E.y=-N*n+y,E.z=ne*G,h.push(E.x,E.y,E.z),_.set(H,b,G).normalize(),u.push(_.x,_.y,_.z),f.push(q,1-N),j.push(d++)}m.push(j)}for(let C=0;C<i;C++)for(let j=0;j<r;j++){const N=m[j][C],ne=m[j+1][C],z=m[j+1][C+1],q=m[j][C+1];l.push(N,ne,q),l.push(ne,z,q),A+=6}c.addGroup(v,A,0),v+=A}function p(_){const E=d,A=new $(),b=new M();let C=0;const j=_===!0?e:t,N=_===!0?1:-1;for(let z=1;z<=i;z++)h.push(0,y*N,0),u.push(0,N,0),f.push(.5,.5),d++;const ne=d;for(let z=0;z<=i;z++){const q=z/i,W=q*a+o,H=Math.cos(W),G=Math.sin(W);b.x=j*G,b.y=y*N,b.z=j*H,h.push(b.x,b.y,b.z),u.push(0,N,0),A.x=H*.5+.5,A.y=G*.5*N+.5,f.push(A.x,A.y),d++}for(let z=0;z<i;z++){const q=E+z,W=ne+z;_===!0?l.push(W,W+1,q):l.push(W+1,W,q),C+=3}c.addGroup(v,C,_===!0?1:2),v+=C}}}class Xg extends Ol{constructor(e,t,n,i,r,s,o){super(0,e,t,n,i,r,s,o);this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class Yg extends ua{constructor(e,t,n,i,r,s,o){super(0,e,t,n,i,r,s,o);this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:s,thetaLength:o}}}class Zg extends Ge{constructor(e,t,n,i){super();this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new Ks(e,t,n,i)),this.mergeVertices()}}class Ks extends Se{constructor(e,t,n,i){super();this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;const r=[],s=[],o=[],a=[],c=new M(),l=new $();s.push(0,0,0),o.push(0,0,1),a.push(.5,.5);for(let h=0,u=3;h<=t;h++,u+=3){const f=n+h/t*i;c.x=e*Math.cos(f),c.y=e*Math.sin(f),s.push(c.x,c.y,c.z),o.push(0,0,1),l.x=(s[u]/e+1)/2,l.y=(s[u+1]/e+1)/2,a.push(l.x,l.y)}for(let h=1;h<=t;h++)r.push(h,h+1,0);this.setIndex(r),this.setAttribute("position",new ye(s,3)),this.setAttribute("normal",new ye(o,3)),this.setAttribute("uv",new ye(a,2))}}var ft=Object.freeze({__proto__:null,WireframeGeometry:mg,ParametricGeometry:js,ParametricBufferGeometry:Fr,TetrahedronGeometry:vg,TetrahedronBufferGeometry:fl,OctahedronGeometry:yg,OctahedronBufferGeometry:pl,IcosahedronGeometry:xg,IcosahedronBufferGeometry:ml,DodecahedronGeometry:bg,DodecahedronBufferGeometry:gl,PolyhedronGeometry:gg,PolyhedronBufferGeometry:ki,TubeGeometry:_g,TubeBufferGeometry:vl,TorusKnotGeometry:wg,TorusKnotBufferGeometry:yl,TorusGeometry:Mg,TorusBufferGeometry:xl,TextGeometry:zg,TextBufferGeometry:Ll,SphereGeometry:Vg,SphereBufferGeometry:Rl,RingGeometry:Wg,RingBufferGeometry:Js,PlaneGeometry:gd,PlaneBufferGeometry:$o,LatheGeometry:jg,LatheBufferGeometry:Cl,ShapeGeometry:Dl,ShapeBufferGeometry:Pl,ExtrudeGeometry:Al,ExtrudeBufferGeometry:Zs,EdgesGeometry:qg,ConeGeometry:Xg,ConeBufferGeometry:Yg,CylinderGeometry:Ol,CylinderBufferGeometry:ua,CircleGeometry:Zg,CircleBufferGeometry:Ks,BoxGeometry:hd,BoxBufferGeometry:Ss});function Vi(e){we.call(this),this.type="ShadowMaterial",this.color=new fe(0),this.transparent=!0,this.setValues(e)}Vi.prototype=Object.create(we.prototype);Vi.prototype.constructor=Vi;Vi.prototype.isShadowMaterial=!0;Vi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this};function Ur(e){xt.call(this,e),this.type="RawShaderMaterial"}Ur.prototype=Object.create(xt.prototype);Ur.prototype.constructor=Ur;Ur.prototype.isRawShaderMaterial=!0;function pt(e){we.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(e)}pt.prototype=Object.create(we.prototype);pt.prototype.constructor=pt;pt.prototype.isMeshStandardMaterial=!0;pt.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.vertexTangents=e.vertexTangents,this};function Yt(e){pt.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new $(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}Yt.prototype=Object.create(pt.prototype);Yt.prototype.constructor=Yt;Yt.prototype.isMeshPhysicalMaterial=!0;Yt.prototype.copy=function(e){return pt.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new fe()).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this};function Yn(e){we.call(this),this.type="MeshPhongMaterial",this.color=new fe(16777215),this.specular=new fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Yn.prototype=Object.create(we.prototype);Yn.prototype.constructor=Yn;Yn.prototype.isMeshPhongMaterial=!0;Yn.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Wi(e){we.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new fe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Wi.prototype=Object.create(we.prototype);Wi.prototype.constructor=Wi;Wi.prototype.isMeshToonMaterial=!0;Wi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function ji(e){we.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}ji.prototype=Object.create(we.prototype);ji.prototype.constructor=ji;ji.prototype.isMeshNormalMaterial=!0;ji.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function qi(e){we.call(this),this.type="MeshLambertMaterial",this.color=new fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Qr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}qi.prototype=Object.create(we.prototype);qi.prototype.constructor=qi;qi.prototype.isMeshLambertMaterial=!0;qi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Xi(e){we.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new fe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=wn,this.normalScale=new $(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}Xi.prototype=Object.create(we.prototype);Xi.prototype.constructor=Xi;Xi.prototype.isMeshMatcapMaterial=!0;Xi.prototype.copy=function(e){return we.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function Yi(e){_t.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}Yi.prototype=Object.create(_t.prototype);Yi.prototype.constructor=Yi;Yi.prototype.isLineDashedMaterial=!0;Yi.prototype.copy=function(e){return _t.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var Jg=Object.freeze({__proto__:null,ShadowMaterial:Vi,SpriteMaterial:qn,RawShaderMaterial:Ur,ShaderMaterial:xt,PointsMaterial:dn,MeshPhysicalMaterial:Yt,MeshStandardMaterial:pt,MeshPhongMaterial:Yn,MeshToonMaterial:Wi,MeshNormalMaterial:ji,MeshLambertMaterial:qi,MeshDepthMaterial:Vn,MeshDistanceMaterial:Wn,MeshBasicMaterial:$e,MeshMatcapMaterial:Xi,LineDashedMaterial:Yi,LineBasicMaterial:_t,Material:we});const Xe={arraySlice:function(e,t,n){return Xe.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(r,s){return e[r]-e[s]}const n=e.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){const i=e.length,r=new e.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*t;for(let c=0;c!==t;++c)r[o++]=e[a+c]}return r},flattenJSON:function(e,t,n,i){let r=1,s=e[0];for(;s!==void 0&&s[i]===void 0;)s=e[r++];if(s===void 0)return;let o=s[i];if(o===void 0)return;if(Array.isArray(o))do o=s[i],o!==void 0&&(t.push(s.time),n.push.apply(n,o)),s=e[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(t.push(s.time),o.toArray(n,n.length)),s=e[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(t.push(s.time),n.push(o)),s=e[r++];while(s!==void 0)},subclip:function(e,t,n,i,r){r=r||30;const s=e.clone();s.name=t;const o=[];for(let c=0;c<s.tracks.length;++c){const l=s.tracks[c],h=l.getValueSize(),u=[],f=[];for(let d=0;d<l.times.length;++d){const m=l.times[d]*r;if(m<n||m>=i)continue;u.push(l.times[d]);for(let y=0;y<h;++y)f.push(l.values[d*h+y])}if(u.length===0)continue;l.times=Xe.convertArray(u,l.times.constructor),l.values=Xe.convertArray(f,l.values.constructor),o.push(l)}s.tracks=o;let a=Infinity;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(e,t,n,i){t===void 0&&(t=0),n===void 0&&(n=e),(i===void 0||i<=0)&&(i=30);const r=e.tracks.length,s=t/i;for(let o=0;o<r;++o){const a=n.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const l=e.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===c});if(l===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const m=a.times.length-1;let y;if(s<=a.times[0]){const g=h,p=u-h;y=Xe.arraySlice(a.values,g,p)}else if(s>=a.times[m]){const g=m*u+h,p=g+u-h;y=Xe.arraySlice(a.values,g,p)}else{const g=a.createInterpolant(),p=h,_=u-h;g.evaluate(s),y=Xe.arraySlice(g.resultBuffer,p,_)}if(c==="quaternion"){const g=new dt().fromArray(y).normalize().conjugate();g.toArray(y)}const v=l.times.length;for(let g=0;g<v;++g){const p=g*d+f;if(c==="quaternion")dt.multiplyQuaternionsFlat(l.values,p,y,0,l.values,p);else{const _=d-f*2;for(let E=0;E<_;++E)l.values[p+E]-=y[E]}}}return e.blendMode=cc,e}};function mt(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(mt.prototype,{evaluate:function(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let s;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}s=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;e<t[o]?s=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let s=0;s!==i;++s)t[s]=n[r+s];return t},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(mt.prototype,{beforeStart_:mt.prototype.copySampleValue_,afterEnd_:mt.prototype.copySampleValue_});function ha(e,t,n,i){mt.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}ha.prototype=Object.assign(Object.create(mt.prototype),{constructor:ha,DefaultSettings_:{endingStart:di,endingEnd:di},intervalChanged_:function(e,t,n){const i=this.parameterPositions;let r=e-2,s=e+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case fi:r=e,o=2*t-n;break;case as:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case fi:s=e,a=2*n-t;break;case as:s=1,a=n+i[1]-i[0];break;default:s=e-1,a=t}const c=(n-t)*.5,l=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(a-n),this._offsetPrev=r*l,this._offsetNext=s*l},interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-t)/(i-t),m=d*d,y=m*d,v=-u*y+2*u*m-u*d,g=(1+u)*y+(-1.5-2*u)*m+(-.5+u)*d+1,p=(-1-f)*y+(1.5+f)*m+.5*d,_=f*y-f*m;for(let E=0;E!==o;++E)r[E]=v*s[l+E]+g*s[c+E]+p*s[a+E]+_*s[h+E];return r}});function Qs(e,t,n,i){mt.call(this,e,t,n,i)}Qs.prototype=Object.assign(Object.create(mt.prototype),{constructor:Qs,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=e*o,c=a-o,l=(n-t)/(i-t),h=1-l;for(let u=0;u!==o;++u)r[u]=s[c+u]*h+s[a+u]*l;return r}});function da(e,t,n,i){mt.call(this,e,t,n,i)}da.prototype=Object.assign(Object.create(mt.prototype),{constructor:da,interpolate_:function(e){return this.copySampleValue_(e-1)}});function ut(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Xe.convertArray(t,this.TimeBufferType),this.values=Xe.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(ut,{toJSON:function(e){const t=e.constructor;let n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:Xe.convertArray(e.times,Array),values:Xe.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}});Object.assign(ut.prototype,{constructor:ut,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Gn,InterpolantFactoryMethodDiscrete:function(e){return new da(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Qs(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new ha(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){let t;switch(e){case hi:t=this.InterpolantFactoryMethodDiscrete;break;case Gn:t=this.InterpolantFactoryMethodLinear;break;case wo:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return hi;case this.InterpolantFactoryMethodLinear:return Gn;case this.InterpolantFactoryMethodSmooth:return wo}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this},scale:function(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this},trim:function(e,t){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<e;)++r;for(;s!==-1&&n[s]>t;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=Xe.arraySlice(n,r,s),this.values=Xe.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),e=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),e=!1;break}s=a}if(i!==void 0&&Xe.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e},optimize:function(){const e=Xe.arraySlice(this.times),t=Xe.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===wo,r=e.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const c=e[o],l=e[o+1];if(c!==l&&(o!==1||c!==c[0]))if(i)a=!0;else{const h=o*n,u=h-n,f=h+n;for(let d=0;d!==n;++d){const m=t[h+d];if(m!==t[u+d]||m!==t[f+d]){a=!0;break}}}if(a){if(o!==s){e[s]=e[o];const h=o*n,u=s*n;for(let f=0;f!==n;++f)t[u+f]=t[h+f]}++s}}if(r>0){e[s]=e[r];for(let o=r*n,a=s*n,c=0;c!==n;++c)t[a+c]=t[o+c];++s}return s!==e.length?(this.times=Xe.arraySlice(e,0,s),this.values=Xe.arraySlice(t,0,s*n)):(this.times=e,this.values=t),this},clone:function(){const e=Xe.arraySlice(this.times,0),t=Xe.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}});function fa(e,t,n){ut.call(this,e,t,n)}fa.prototype=Object.assign(Object.create(ut.prototype),{constructor:fa,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:hi,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function pa(e,t,n,i){ut.call(this,e,t,n,i)}pa.prototype=Object.assign(Object.create(ut.prototype),{constructor:pa,ValueTypeName:"color"});function Zn(e,t,n,i){ut.call(this,e,t,n,i)}Zn.prototype=Object.assign(Object.create(ut.prototype),{constructor:Zn,ValueTypeName:"number"});function ma(e,t,n,i){mt.call(this,e,t,n,i)}ma.prototype=Object.assign(Object.create(mt.prototype),{constructor:ma,interpolate_:function(e,t,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-t)/(i-t);let c=e*o;for(let l=c+o;c!==l;c+=4)dt.slerpFlat(r,0,s,c-o,s,c,a);return r}});function Zi(e,t,n,i){ut.call(this,e,t,n,i)}Zi.prototype=Object.assign(Object.create(ut.prototype),{constructor:Zi,ValueTypeName:"quaternion",DefaultInterpolation:Gn,InterpolantFactoryMethodLinear:function(e){return new ma(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function ga(e,t,n,i){ut.call(this,e,t,n,i)}ga.prototype=Object.assign(Object.create(ut.prototype),{constructor:ga,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:hi,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Jn(e,t,n,i){ut.call(this,e,t,n,i)}Jn.prototype=Object.assign(Object.create(ut.prototype),{constructor:Jn,ValueTypeName:"vector"});function Lt(e,t,n,i){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.blendMode=i!==void 0?i:Mo,this.uuid=Ee.generateUUID(),this.duration<0&&this.resetDuration()}function Kg(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Zn;case"vector":case"vector2":case"vector3":case"vector4":return Jn;case"color":return pa;case"quaternion":return Zi;case"bool":case"boolean":return fa;case"string":return ga}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function Qg(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=Kg(e.type);if(e.times===void 0){const n=[],i=[];Xe.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(Lt,{parse:function(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let r=0,s=n.length;r!==s;++r)t.push(Qg(n[r]).scale(i));return new Lt(e.name,e.duration,t,e.blendMode)},toJSON:function(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,s=n.length;r!==s;++r)t.push(ut.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){const r=t.length,s=[];for(let o=0;o<r;o++){let a=[],c=[];a.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const l=Xe.getKeyframeOrder(a);a=Xe.sortedArray(a,1,l),c=Xe.sortedArray(c,1,l),!i&&a[0]===0&&(a.push(r),c.push(c[0])),s.push(new Zn(".morphTargetInfluences["+t[o].name+"]",a,c).scale(1/n))}return new Lt(e,-1,s)},findByName:function(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=e.length;o<a;o++){const c=e[o],l=c.name.match(r);if(l&&l.length>1){const h=l[1];let u=i[h];u||(i[h]=u=[]),u.push(c)}}const s=[];for(const o in i)s.push(Lt.CreateFromMorphTargetSequence(o,i[o],t,n));return s},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,u,f,d,m){if(f.length!==0){const y=[],v=[];Xe.flattenJSON(f,y,v,d),y.length!==0&&m.push(new h(u,y,v))}},i=[],r=e.name||"default",s=e.fps||30,o=e.blendMode;let a=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const u=c[h].keys;if(!u||u.length===0)continue;if(u[0].morphTargets){const f={};let d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let m=0;m<u[d].morphTargets.length;m++)f[u[d].morphTargets[m]]=-1;for(const m in f){const y=[],v=[];for(let g=0;g!==u[d].morphTargets.length;++g){const p=u[d];y.push(p.time),v.push(p.morphTarget===m?1:0)}i.push(new Zn(".morphTargetInfluence["+m+"]",y,v))}a=f.length*(s||1)}else{const f=".bones["+t[h].name+"]";n(Jn,f+".position",u,"pos",i),n(Zi,f+".quaternion",u,"rot",i),n(Jn,f+".scale",u,"scl",i)}}if(i.length===0)return null;const l=new Lt(r,a,i,o);return l}});Object.assign(Lt.prototype,{resetDuration:function(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this},trim:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new Lt(this.name,this.duration,e,this.blendMode)}});const Ji={enabled:!1,files:{},add:function(e,t){if(this.enabled===!1)return;this.files[e]=t},get:function(e){return this.enabled===!1?void 0:this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Fl(e,t,n){const i=this;let r=!1,s=0,o=0,a;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){o++,r===!1&&(i.onStart!==void 0&&i.onStart(l,s,o)),r=!0},this.itemEnd=function(l){s++,i.onProgress!==void 0&&i.onProgress(l,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)},this.resolveURL=function(l){return a?a(l):l},this.setURLModifier=function(l){return a=l,this},this.addHandler=function(l,h){return c.push(l,h),this},this.removeHandler=function(l){const h=c.indexOf(l);return h!==-1&&c.splice(h,2),this},this.getHandler=function(l){for(let h=0,u=c.length;h<u;h+=2){const f=c[h],d=c[h+1];if(f.global&&(f.lastIndex=0),f.test(l))return d}return null}}const $g=new Fl();function Ne(e){this.manager=e!==void 0?e:$g,this.crossOrigin="anonymous",this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ne.prototype,{load:function(){},loadAsync:function(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});const zt={};function ht(e){Ne.call(this,e)}ht.prototype=Object.assign(Object.create(Ne.prototype),{constructor:ht,load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Ji.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;if(zt[e]!==void 0){zt[e].push({onLoad:t,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=e.match(o);let c;if(a){const l=a[1],h=!!a[2];let u=a[3];u=decodeURIComponent(u),h&&(u=atob(u));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const m=new Uint8Array(u.length);for(let v=0;v<u.length;v++)m[v]=u.charCodeAt(v);d==="blob"?f=new Blob([m.buffer],{type:l}):f=m.buffer;break;case"document":const y=new DOMParser();f=y.parseFromString(u,l);break;case"json":f=JSON.parse(u);break;default:f=u;break}setTimeout(function(){t&&t(f),r.manager.itemEnd(e)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(e),r.manager.itemEnd(e)},0)}}else{zt[e]=[],zt[e].push({onLoad:t,onProgress:n,onError:i}),c=new XMLHttpRequest(),c.open("GET",e,!0),c.addEventListener("load",function(l){const h=this.response,u=zt[e];if(delete zt[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ji.add(e,h);for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onLoad&&m.onLoad(h)}r.manager.itemEnd(e)}else{for(let f=0,d=u.length;f<d;f++){const m=u[f];m.onError&&m.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)}},!1),c.addEventListener("progress",function(l){const h=zt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onProgress&&d.onProgress(l)}},!1),c.addEventListener("error",function(l){const h=zt[e];delete zt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),c.addEventListener("abort",function(l){const h=zt[e];delete zt[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(l)}r.manager.itemError(e),r.manager.itemEnd(e)},!1),this.responseType!==void 0&&(c.responseType=this.responseType),this.withCredentials!==void 0&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const l in this.requestHeader)c.setRequestHeader(l,this.requestHeader[l]);c.send(null)}return r.manager.itemStart(e),c},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}});function Nl(e){Ne.call(this,e)}Nl.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Nl,load:function(e,t,n,i){const r=this,s=new ht(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=[];for(let n=0;n<e.length;n++){const i=Lt.parse(e[n]);t.push(i)}return t}});function Bl(e){Ne.call(this,e)}Bl.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Bl,load:function(e,t,n,i){const r=this,s=[],o=new Or();o.image=s;const a=new ht(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader);let c=0;function l(h){a.load(e[h],function(u){const f=r.parse(u,!0);s[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(o.minFilter=Ze),o.format=f.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(let h=0,u=e.length;h<u;++h)l(h);else a.load(e,function(h){const u=r.parse(h,!0);if(u.isCubemap){const f=u.mipmaps.length/u.mipmapCount;for(let d=0;d<f;d++){s[d]={mipmaps:[]};for(let m=0;m<u.mipmapCount;m++)s[d].mipmaps.push(u.mipmaps[d*u.mipmapCount+m]),s[d].format=u.format,s[d].width=u.width,s[d].height=u.height}}else o.image.width=u.width,o.image.height=u.height,o.mipmaps=u.mipmaps;u.mipmapCount===1&&(o.minFilter=Ze),o.format=u.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}});function Hr(e){Ne.call(this,e)}Hr.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Hr,load:function(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Ji.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),Ji.add(e,this),t&&t(this),r.manager.itemEnd(e)}function c(l){o.removeEventListener("load",a,!1),o.removeEventListener("error",c,!1),i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}return o.addEventListener("load",a,!1),o.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&(this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin)),r.manager.itemStart(e),o.src=e,o}});function kr(e){Ne.call(this,e)}kr.prototype=Object.assign(Object.create(Ne.prototype),{constructor:kr,load:function(e,t,n,i){const r=new Cn(),s=new Hr(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(c){s.load(e[c],function(l){r.images[c]=l,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let c=0;c<e.length;++c)a(c);return r}});function Gl(e){Ne.call(this,e)}Gl.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Gl,load:function(e,t,n,i){const r=this,s=new Ii(),o=new ht(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.load(e,function(a){const c=r.parse(a);if(!c)return;c.image!==void 0?s.image=c.image:c.data!==void 0&&(s.image.width=c.width,s.image.height=c.height,s.image.data=c.data),s.wrapS=c.wrapS!==void 0?c.wrapS:nt,s.wrapT=c.wrapT!==void 0?c.wrapT:nt,s.magFilter=c.magFilter!==void 0?c.magFilter:Ze,s.minFilter=c.minFilter!==void 0?c.minFilter:Ze,s.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.format!==void 0&&(s.format=c.format),c.type!==void 0&&(s.type=c.type),c.mipmaps!==void 0&&(s.mipmaps=c.mipmaps,s.minFilter=bn),c.mipmapCount===1&&(s.minFilter=Ze),s.needsUpdate=!0,t&&t(s,c)},n,i),s}});function zr(e){Ne.call(this,e)}zr.prototype=Object.assign(Object.create(Ne.prototype),{constructor:zr,load:function(e,t,n,i){const r=new Ue(),s=new Hr(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){r.image=o;const a=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data\:image\/jpeg/)===0;r.format=a?tn:Ft,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}});function be(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(be.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e===void 0&&(e=5);const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){const e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let s=1;s<=e;s++)n=this.getPoint(s/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){const n=this.getLengths();let i=0;const r=n.length;let s;t?s=t:s=e*n[r-1];let o=0,a=r-1,c;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),c=n[i]-s,c<0)o=i+1;else if(c>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const l=n[i],h=n[i+1],u=h-l,f=(s-l)/u,d=(i+f)/(r-1);return d},getTangent:function(e,t){const n=1e-4;let i=e-n,r=e+n;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=t||(s.isVector2?new $():new M());return a.copy(o).sub(s).normalize(),a},getTangentAt:function(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)},computeFrenetFrames:function(e,t){const n=new M(),i=[],r=[],s=[],o=new M(),a=new Re();for(let f=0;f<=e;f++){const d=f/e;i[f]=this.getTangentAt(d,new M()),i[f].normalize()}r[0]=new M(),s[0]=new M();let c=Number.MAX_VALUE;const l=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);l<=c&&(c=l,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),u<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=e;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(Ee.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,d))}s[f].crossVectors(i[f],r[f])}if(t===!0){let f=Math.acos(Ee.clamp(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f);for(let d=1;d<=e;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function Pt(e,t,n,i,r,s,o,a){be.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Pt.prototype=Object.create(be.prototype);Pt.prototype.constructor=Pt;Pt.prototype.isEllipseCurve=!0;Pt.prototype.getPoint=function(e,t){const n=t||new $(),i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let a=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=c-this.aY;a=u*l-f*h+this.aX,c=u*h+f*l+this.aY}return n.set(a,c)};Pt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};Pt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e};Pt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function Vr(e,t,n,i,r,s){Pt.call(this,e,t,n,n,i,r,s),this.type="ArcCurve"}Vr.prototype=Object.create(Pt.prototype);Vr.prototype.constructor=Vr;Vr.prototype.isArcCurve=!0;function va(){let e=0,t=0,n=0,i=0;function r(s,o,a,c){e=s,t=a,n=-3*s+3*o-2*a-c,i=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,l){r(o,a,l*(a-s),l*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,l,h,u){let f=(o-s)/l-(a-s)/(l+h)+(a-o)/h,d=(a-o)/h-(c-o)/(h+u)+(c-a)/u;f*=h,d*=h,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return e+t*s+n*o+i*a}}}const $s=new M(),ya=new va(),xa=new va(),ba=new va();function at(e,t,n,i){be.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=i!==void 0?i:.5}at.prototype=Object.create(be.prototype);at.prototype.constructor=at;at.prototype.isCatmullRomCurve3=!0;at.prototype.getPoint=function(e,t){const n=t||new M(),i=this.points,r=i.length,s=(r-(this.closed?0:1))*e;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let c,l;this.closed||o>0?c=i[(o-1)%r]:($s.subVectors(i[0],i[1]).add(i[0]),c=$s);const h=i[o%r],u=i[(o+1)%r];if(this.closed||o+2<r?l=i[(o+2)%r]:($s.subVectors(i[r-1],i[r-2]).add(i[r-1]),l=$s),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(c.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(u),f),y=Math.pow(u.distanceToSquared(l),f);m<1e-4&&(m=1),d<1e-4&&(d=m),y<1e-4&&(y=m),ya.initNonuniformCatmullRom(c.x,h.x,u.x,l.x,d,m,y),xa.initNonuniformCatmullRom(c.y,h.y,u.y,l.y,d,m,y),ba.initNonuniformCatmullRom(c.z,h.z,u.z,l.z,d,m,y)}else this.curveType==="catmullrom"&&(ya.initCatmullRom(c.x,h.x,u.x,l.x,this.tension),xa.initCatmullRom(c.y,h.y,u.y,l.y,this.tension),ba.initCatmullRom(c.z,h.z,u.z,l.z,this.tension));return n.set(ya.calc(a),xa.calc(a),ba.calc(a)),n};at.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};at.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e};at.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new M().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function Ul(e,t,n,i,r){const s=(i-t)*.5,o=(r-n)*.5,a=e*e,c=e*a;return(2*n-2*i+s+o)*c+(-3*n+3*i-2*s-o)*a+s*e+n}function ev(e,t){const n=1-e;return n*n*t}function tv(e,t){return 2*(1-e)*e*t}function nv(e,t){return e*e*t}function Wr(e,t,n,i){return ev(e,t)+tv(e,n)+nv(e,i)}function iv(e,t){const n=1-e;return n*n*n*t}function rv(e,t){const n=1-e;return 3*n*n*e*t}function sv(e,t){return 3*(1-e)*e*e*t}function ov(e,t){return e*e*e*t}function jr(e,t,n,i,r){return iv(e,t)+rv(e,n)+sv(e,i)+ov(e,r)}function Zt(e,t,n,i){be.call(this),this.type="CubicBezierCurve",this.v0=e||new $(),this.v1=t||new $(),this.v2=n||new $(),this.v3=i||new $()}Zt.prototype=Object.create(be.prototype);Zt.prototype.constructor=Zt;Zt.prototype.isCubicBezierCurve=!0;Zt.prototype.getPoint=function(e,t){const n=t||new $(),i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(jr(e,i.x,r.x,s.x,o.x),jr(e,i.y,r.y,s.y,o.y)),n};Zt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};Zt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};Zt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function fn(e,t,n,i){be.call(this),this.type="CubicBezierCurve3",this.v0=e||new M(),this.v1=t||new M(),this.v2=n||new M(),this.v3=i||new M()}fn.prototype=Object.create(be.prototype);fn.prototype.constructor=fn;fn.prototype.isCubicBezierCurve3=!0;fn.prototype.getPoint=function(e,t){const n=t||new M(),i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(jr(e,i.x,r.x,s.x,o.x),jr(e,i.y,r.y,s.y,o.y),jr(e,i.z,r.z,s.z,o.z)),n};fn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this};fn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e};fn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function Rt(e,t){be.call(this),this.type="LineCurve",this.v1=e||new $(),this.v2=t||new $()}Rt.prototype=Object.create(be.prototype);Rt.prototype.constructor=Rt;Rt.prototype.isLineCurve=!0;Rt.prototype.getPoint=function(e,t){const n=t||new $();return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Rt.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Rt.prototype.getTangent=function(e,t){const n=t||new $();return n.copy(this.v2).sub(this.v1).normalize(),n};Rt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Rt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Rt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Jt(e,t){be.call(this),this.type="LineCurve3",this.v1=e||new M(),this.v2=t||new M()}Jt.prototype=Object.create(be.prototype);Jt.prototype.constructor=Jt;Jt.prototype.isLineCurve3=!0;Jt.prototype.getPoint=function(e,t){const n=t||new M();return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n};Jt.prototype.getPointAt=function(e,t){return this.getPoint(e,t)};Jt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Jt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Jt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Kt(e,t,n){be.call(this),this.type="QuadraticBezierCurve",this.v0=e||new $(),this.v1=t||new $(),this.v2=n||new $()}Kt.prototype=Object.create(be.prototype);Kt.prototype.constructor=Kt;Kt.prototype.isQuadraticBezierCurve=!0;Kt.prototype.getPoint=function(e,t){const n=t||new $(),i=this.v0,r=this.v1,s=this.v2;return n.set(Wr(e,i.x,r.x,s.x),Wr(e,i.y,r.y,s.y)),n};Kt.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};Kt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};Kt.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function pn(e,t,n){be.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new M(),this.v1=t||new M(),this.v2=n||new M()}pn.prototype=Object.create(be.prototype);pn.prototype.constructor=pn;pn.prototype.isQuadraticBezierCurve3=!0;pn.prototype.getPoint=function(e,t){const n=t||new M(),i=this.v0,r=this.v1,s=this.v2;return n.set(Wr(e,i.x,r.x,s.x),Wr(e,i.y,r.y,s.y),Wr(e,i.z,r.z,s.z)),n};pn.prototype.copy=function(e){return be.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this};pn.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e};pn.prototype.fromJSON=function(e){return be.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function Qt(e){be.call(this),this.type="SplineCurve",this.points=e||[]}Qt.prototype=Object.create(be.prototype);Qt.prototype.constructor=Qt;Qt.prototype.isSplineCurve=!0;Qt.prototype.getPoint=function(e,t){const n=t||new $(),i=this.points,r=(i.length-1)*e,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],c=i[s],l=i[s>i.length-2?i.length-1:s+1],h=i[s>i.length-3?i.length-1:s+2];return n.set(Ul(o,a.x,c.x,l.x,h.x),Ul(o,a.y,c.y,l.y,h.y)),n};Qt.prototype.copy=function(e){be.prototype.copy.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this};Qt.prototype.toJSON=function(){const e=be.prototype.toJSON.call(this);e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e};Qt.prototype.fromJSON=function(e){be.prototype.fromJSON.call(this,e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new $().fromArray(i))}return this};var _a=Object.freeze({__proto__:null,ArcCurve:Vr,CatmullRomCurve3:at,CubicBezierCurve:Zt,CubicBezierCurve3:fn,EllipseCurve:Pt,LineCurve:Rt,LineCurve3:Jt,QuadraticBezierCurve:Kt,QuadraticBezierCurve3:pn,SplineCurve:Qt});function On(){be.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}On.prototype=Object.assign(Object.create(be.prototype),{constructor:On,add:function(e){this.curves.push(e)},closePath:function(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Rt(t,e))},getPoint:function(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const r=n[i]-t,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?e*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,a=s.getPoints(o);for(let c=0;c<a.length;c++){const l=a[c];if(n&&n.equals(l))continue;t.push(l),n=l}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},copy:function(e){be.prototype.copy.call(this,e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this},toJSON:function(){const e=be.prototype.toJSON.call(this);e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e},fromJSON:function(e){be.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new _a[i.type]().fromJSON(i))}return this}});function $t(e){On.call(this),this.type="Path",this.currentPoint=new $(),e&&this.setFromPoints(e)}$t.prototype=Object.assign(Object.create(On.prototype),{constructor:$t,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){const n=new Rt(this.currentPoint.clone(),new $(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,i){const r=new Kt(this.currentPoint.clone(),new $(e,t),new $(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(e,t,n,i,r,s){const o=new Zt(this.currentPoint.clone(),new $(e,t),new $(n,i),new $(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(e){const t=[this.currentPoint.clone()].concat(e),n=new Qt(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(e+o,t+a,n,i,r,s),this},absarc:function(e,t,n,i,r,s){return this.absellipse(e,t,n,n,i,r,s),this},ellipse:function(e,t,n,i,r,s,o,a){const c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,i,r,s,o,a),this},absellipse:function(e,t,n,i,r,s,o,a){const c=new Pt(e,t,n,i,r,s,o,a);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const l=c.getPoint(1);return this.currentPoint.copy(l),this},copy:function(e){return On.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){const e=On.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return On.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function Kn(e){$t.call(this,e),this.uuid=Ee.generateUUID(),this.type="Shape",this.holes=[]}Kn.prototype=Object.assign(Object.create($t.prototype),{constructor:Kn,getPointsHoles:function(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){$t.prototype.copy.call(this,e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this},toJSON:function(){const e=$t.prototype.toJSON.call(this);e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e},fromJSON:function(e){$t.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new $t().fromJSON(i))}return this}});function We(e,t){ge.call(this),this.type="Light",this.color=new fe(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}We.prototype=Object.assign(Object.create(ge.prototype),{constructor:We,isLight:!0,copy:function(e){return ge.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){const t=ge.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function qr(e,t,n){We.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(ge.DefaultUp),this.updateMatrix(),this.groundColor=new fe(t)}qr.prototype=Object.assign(Object.create(We.prototype),{constructor:qr,isHemisphereLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function mn(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new $(512,512),this.map=null,this.mapPass=null,this.matrix=new Re(),this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ls(),this._frameExtents=new $(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}Object.assign(mn.prototype,{_projScreenMatrix:new Re(),_lightPositionWorld:new M(),_lookTarget:new M(),getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){const t=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(e.matrixWorld),t.position.copy(s),r.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(r),t.updateMatrixWorld(),i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function wa(){mn.call(this,new Je(50,1,.5,500))}wa.prototype=Object.assign(Object.create(mn.prototype),{constructor:wa,isSpotLightShadow:!0,updateMatrices:function(e){const t=this.camera,n=Ee.RAD2DEG*2*e.angle,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),mn.prototype.updateMatrices.call(this,e)}});function Xr(e,t,n,i,r,s){We.call(this,e,t),this.type="SpotLight",this.position.copy(ge.DefaultUp),this.updateMatrix(),this.target=new ge(),Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new wa()}Xr.prototype=Object.assign(Object.create(We.prototype),{constructor:Xr,isSpotLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Ma(){mn.call(this,new Je(90,1,.5,500)),this._frameExtents=new $(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}Ma.prototype=Object.assign(Object.create(mn.prototype),{constructor:Ma,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(e.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Yr(e,t,n,i){We.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Ma()}Yr.prototype=Object.assign(Object.create(We.prototype),{constructor:Yr,isPointLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function Qn(e,t,n,i,r,s){ln.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=s!==void 0?s:2e3,this.updateProjectionMatrix()}Qn.prototype=Object.assign(Object.create(ln.prototype),{constructor:Qn,isOrthographicCamera:!0,copy:function(e,t){return ln.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,s=n+e,o=i+t,a=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,s=r+c*this.view.width,o-=l*this.view.offsetY,a=o-l*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){const t=ge.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function Ta(){mn.call(this,new Qn(-5,5,5,-5,.5,500))}Ta.prototype=Object.assign(Object.create(mn.prototype),{constructor:Ta,isDirectionalLightShadow:!0,updateMatrices:function(e){mn.prototype.updateMatrices.call(this,e)}});function $n(e,t){We.call(this,e,t),this.type="DirectionalLight",this.position.copy(ge.DefaultUp),this.updateMatrix(),this.target=new ge(),this.shadow=new Ta()}$n.prototype=Object.assign(Object.create(We.prototype),{constructor:$n,isDirectionalLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function Ea(e,t){We.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}Ea.prototype=Object.assign(Object.create(We.prototype),{constructor:Ea,isAmbientLight:!0});function Sa(e,t,n,i){We.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}Sa.prototype=Object.assign(Object.create(We.prototype),{constructor:Sa,isRectAreaLight:!0,copy:function(e){return We.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){const t=We.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});class av{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new M())}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.282095),t.addScaledVector(s[1],.488603*i),t.addScaledVector(s[2],.488603*r),t.addScaledVector(s[3],.488603*n),t.addScaledVector(s[4],1.092548*(n*i)),t.addScaledVector(s[5],1.092548*(i*r)),t.addScaledVector(s[6],.315392*(3*r*r-1)),t.addScaledVector(s[7],1.092548*(n*r)),t.addScaledVector(s[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,s=this.coefficients;return t.copy(s[0]).multiplyScalar(.886227),t.addScaledVector(s[1],2*.511664*i),t.addScaledVector(s[2],2*.511664*r),t.addScaledVector(s[3],2*.511664*n),t.addScaledVector(s[4],2*.429043*n*i),t.addScaledVector(s[5],2*.429043*i*r),t.addScaledVector(s[6],.743125*r*r-.247708),t.addScaledVector(s[7],2*.429043*n*r),t.addScaledVector(s[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t){t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}function Vt(e,t){We.call(this,void 0,t),this.type="LightProbe",this.sh=e!==void 0?e:new av()}Vt.prototype=Object.assign(Object.create(We.prototype),{constructor:Vt,isLightProbe:!0,copy:function(e){return We.prototype.copy.call(this,e),this.sh.copy(e.sh),this},fromJSON:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this},toJSON:function(e){const t=We.prototype.toJSON.call(this,e);return t.object.sh=this.sh.toArray(),t}});function Aa(e){Ne.call(this,e),this.textures={}}Aa.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Aa,load:function(e,t,n,i){const r=this,s=new ht(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=new Jg[e.type]();if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=new fe().setHex(e.sheen)),e.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(i.morphNormals=e.morphNormals),e.dithering!==void 0&&(i.dithering=e.dithering),e.vertexTangents!==void 0&&(i.vertexTangents=e.vertexTangents),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const s=e.uniforms[r];i.uniforms[r]={};switch(s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new fe().setHex(s.value);break;case"v2":i.uniforms[r].value=new $().fromArray(s.value);break;case"v3":i.uniforms[r].value=new M().fromArray(s.value);break;case"v4":i.uniforms[r].value=new He().fromArray(s.value);break;case"m3":i.uniforms[r].value=new vt().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Re().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new $().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new $().fromArray(e.clearcoatNormalScale)),e.transmission!==void 0&&(i.transmission=e.transmission),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),i},setTextures:function(e){return this.textures=e,this}});const Fn={decodeText:function(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}},extractUrlBase:function(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function eo(){Se.call(this),this.type="InstancedBufferGeometry",this.instanceCount=Infinity}eo.prototype=Object.assign(Object.create(Se.prototype),{constructor:eo,isInstancedBufferGeometry:!0,copy:function(e){return Se.prototype.copy.call(this,e),this.instanceCount=e.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const e=Se.prototype.toJSON.call(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}});function La(e,t,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Me.call(this,e,t,n),this.meshPerAttribute=i||1}La.prototype=Object.assign(Object.create(Me.prototype),{constructor:La,isInstancedBufferAttribute:!0,copy:function(e){return Me.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){const e=Me.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function Ra(e){Ne.call(this,e)}Ra.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Ra,load:function(e,t,n,i){const r=this,s=new ht(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)},parse:function(e){const t={},n={};function i(f,d){if(t[d]!==void 0)return t[d];const m=f.interleavedBuffers,y=m[d],v=r(f,y.buffer),g=new to[y.type](v),p=new bt(g,y.stride);return p.uuid=y.uuid,t[d]=p,p}function r(f,d){if(n[d]!==void 0)return n[d];const m=f.arrayBuffers,y=m[d],v=new Uint32Array(y).buffer;return n[d]=v,v}const s=e.isInstancedBufferGeometry?new eo():new Se(),o=e.data.index;if(o!==void 0){const f=new to[o.type](o.array);s.setIndex(new Me(f,1))}const a=e.data.attributes;for(const f in a){const d=a[f];let m;if(d.isInterleavedBufferAttribute){const y=i(e.data,d.data);m=new un(y,d.itemSize,d.offset,d.normalized)}else{const y=new to[d.type](d.array),v=d.isInstancedBufferAttribute?La:Me;m=new v(y,d.itemSize,d.normalized)}d.name!==void 0&&(m.name=d.name),s.setAttribute(f,m)}const c=e.data.morphAttributes;if(c)for(const f in c){const d=c[f],m=[];for(let y=0,v=d.length;y<v;y++){const g=d[y];let p;if(g.isInterleavedBufferAttribute){const _=i(e.data,g.data);p=new un(_,g.itemSize,g.offset,g.normalized)}else{const _=new to[g.type](g.array);p=new Me(_,g.itemSize,g.normalized)}g.name!==void 0&&(p.name=g.name),m.push(p)}s.morphAttributes[f]=m}const l=e.data.morphTargetsRelative;l&&(s.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let f=0,d=h.length;f!==d;++f){const m=h[f];s.addGroup(m.start,m.count,m.materialIndex)}const u=e.data.boundingSphere;if(u!==void 0){const f=new M();u.center!==void 0&&f.fromArray(u.center),s.boundingSphere=new Wt(f,u.radius)}return e.name&&(s.name=e.name),e.userData&&(s.userData=e.userData),s}});const to={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Ca(e){Ne.call(this,e)}Ca.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Ca,load:function(e,t,n,i){const r=this,s=this.path===""?Fn.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||s;const o=new ht(r.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.load(e,function(a){let c=null;try{c=JSON.parse(a)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const l=c.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)},parse:function(e,t){const n=this.parseShape(e.shapes),i=this.parseGeometries(e.geometries,n),r=this.parseImages(e.images,function(){t!==void 0&&t(a)}),s=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,s),a=this.parseObject(e.object,i,o);return e.animations&&(a.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&(t!==void 0&&t(a)),a},parseShape:function(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Kn().fromJSON(e[n]);t[r.uuid]=r}return t},parseGeometries:function(e,t){const n={};let i;if(e!==void 0){const r=new Ra();for(let s=0,o=e.length;s<o;s++){let a;const c=e[s];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new ft[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new ft[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new ft[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new ft[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":a=new ft[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new ft[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":a=new ft[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new ft[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new ft[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new ft[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":a=new ft[c.type](new _a[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":a=new ft[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":a=new ft[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}a=new ft[c.type](i,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(let h=0,u=c.shapes.length;h<u;h++){const f=t[c.shapes[h]];i.push(f)}const l=c.options.extrudePath;l!==void 0&&(c.options.extrudePath=new _a[l.type]().fromJSON(l)),a=new ft[c.type](i,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n},parseMaterials:function(e,t){const n={},i={};if(e!==void 0){const r=new Aa();r.setTextures(t);for(let s=0,o=e.length;s<o;s++){const a=e[s];if(a.type==="MultiMaterial"){const c=[];for(let l=0;l<a.materials.length;l++){const h=a.materials[l];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),c.push(n[h.uuid])}i[a.uuid]=c}else n[a.uuid]===void 0&&(n[a.uuid]=r.parse(a)),i[a.uuid]=n[a.uuid]}}return i},parseAnimations:function(e){const t=[];for(let n=0;n<e.length;n++){const i=e[n],r=Lt.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),t.push(r)}return t},parseImages:function(e,t){const n=this,i={};let r;function s(o){return n.manager.itemStart(o),r.load(o,function(){n.manager.itemEnd(o)},void 0,function(){n.manager.itemError(o),n.manager.itemEnd(o)})}if(e!==void 0&&e.length>0){const o=new Fl(t);r=new Hr(o),r.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const l=e[a],h=l.url;if(Array.isArray(h)){i[l.uuid]=[];for(let u=0,f=h.length;u<f;u++){const d=h[u],m=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[l.uuid].push(s(m))}}else{const u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url)?l.url:n.resourcePath+l.url;i[l.uuid]=s(u)}}}return i},parseTextures:function(e,t){function n(r,s){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),s[r])}const i={};if(e!==void 0)for(let r=0,s=e.length;r<s;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);let a;Array.isArray(t[o.image])?a=new Cn(t[o.image]):a=new Ue(t[o.image]),a.needsUpdate=!0,a.uuid=o.uuid,o.name!==void 0&&(a.name=o.name),o.mapping!==void 0&&(a.mapping=n(o.mapping,cv)),o.offset!==void 0&&a.offset.fromArray(o.offset),o.repeat!==void 0&&a.repeat.fromArray(o.repeat),o.center!==void 0&&a.center.fromArray(o.center),o.rotation!==void 0&&(a.rotation=o.rotation),o.wrap!==void 0&&(a.wrapS=n(o.wrap[0],Hl),a.wrapT=n(o.wrap[1],Hl)),o.format!==void 0&&(a.format=o.format),o.type!==void 0&&(a.type=o.type),o.encoding!==void 0&&(a.encoding=o.encoding),o.minFilter!==void 0&&(a.minFilter=n(o.minFilter,kl)),o.magFilter!==void 0&&(a.magFilter=n(o.magFilter,kl)),o.anisotropy!==void 0&&(a.anisotropy=o.anisotropy),o.flipY!==void 0&&(a.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(a.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(a.unpackAlignment=o.unpackAlignment),i[o.uuid]=a}return i},parseObject:function(e,t,n){let i;function r(c){return t[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",c),t[c]}function s(c){if(c===void 0)return;if(Array.isArray(c)){const l=[];for(let h=0,u=c.length;h<u;h++){const f=c[h];n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),l.push(n[f])}return l}return n[c]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",c),n[c]}let o,a;switch(e.type){case"Scene":i=new Rs(),e.background!==void 0&&(Number.isInteger(e.background)&&(i.background=new fe(e.background))),e.fog!==void 0&&(e.fog.type==="Fog"?i.fog=new tl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(i.fog=new el(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":i=new Je(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(i.focus=e.focus),e.zoom!==void 0&&(i.zoom=e.zoom),e.filmGauge!==void 0&&(i.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(i.filmOffset=e.filmOffset),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"OrthographicCamera":i=new Qn(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(i.zoom=e.zoom),e.view!==void 0&&(i.view=Object.assign({},e.view));break;case"AmbientLight":i=new Ea(e.color,e.intensity);break;case"DirectionalLight":i=new $n(e.color,e.intensity);break;case"PointLight":i=new Yr(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":i=new Sa(e.color,e.intensity,e.width,e.height);break;case"SpotLight":i=new Xr(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":i=new qr(e.color,e.groundColor,e.intensity);break;case"LightProbe":i=new Vt().fromJSON(e);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":o=r(e.geometry),a=s(e.material),i=new qe(o,a);break;case"InstancedMesh":o=r(e.geometry),a=s(e.material);const c=e.count,l=e.instanceMatrix;i=new sa(o,a,c),i.instanceMatrix=new Me(new Float32Array(l.array),16);break;case"LOD":i=new Os();break;case"Line":i=new hn(r(e.geometry),s(e.material),e.mode);break;case"LineLoop":i=new Ir(r(e.geometry),s(e.material));break;case"LineSegments":i=new Xn(r(e.geometry),s(e.material));break;case"PointCloud":case"Points":i=new Dr(r(e.geometry),s(e.material));break;case"Sprite":i=new ra(s(e.material));break;case"Group":i=new At();break;default:i=new ge()}if(i.uuid=e.uuid,e.name!==void 0&&(i.name=e.name),e.matrix!==void 0?(i.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=e.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(e.position!==void 0&&i.position.fromArray(e.position),e.rotation!==void 0&&i.rotation.fromArray(e.rotation),e.quaternion!==void 0&&i.quaternion.fromArray(e.quaternion),e.scale!==void 0&&i.scale.fromArray(e.scale)),e.castShadow!==void 0&&(i.castShadow=e.castShadow),e.receiveShadow!==void 0&&(i.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(i.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(i.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(i.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(i.visible=e.visible),e.frustumCulled!==void 0&&(i.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(i.renderOrder=e.renderOrder),e.userData!==void 0&&(i.userData=e.userData),e.layers!==void 0&&(i.layers.mask=e.layers),e.children!==void 0){const c=e.children;for(let l=0;l<c.length;l++)i.add(this.parseObject(c[l],t,n))}if(e.type==="LOD"){e.autoUpdate!==void 0&&(i.autoUpdate=e.autoUpdate);const c=e.levels;for(let l=0;l<c.length;l++){const h=c[l],u=i.getObjectByProperty("uuid",h.object);u!==void 0&&i.addLevel(u,h.distance)}}return i}});const cv={UVMapping:yo,CubeReflectionMapping:$r,CubeRefractionMapping:es,EquirectangularReflectionMapping:xo,EquirectangularRefractionMapping:bo,CubeUVReflectionMapping:ts,CubeUVRefractionMapping:ns},Hl={RepeatWrapping:xn,ClampToEdgeWrapping:nt,MirroredRepeatWrapping:li},kl={NearestFilter:it,NearestMipmapNearestFilter:ar,NearestMipmapLinearFilter:cr,LinearFilter:Ze,LinearMipmapNearestFilter:is,LinearMipmapLinearFilter:bn};function no(e){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ne.call(this,e),this.options={premultiplyAlpha:"none"}}no.prototype=Object.assign(Object.create(Ne.prototype),{constructor:no,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,s=Ji.get(e);if(s!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(s),r.manager.itemEnd(e)},0),s;fetch(e).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,r.options)}).then(function(o){Ji.add(e,o),t&&t(o),r.manager.itemEnd(e)}).catch(function(o){i&&i(o),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}});function zl(){this.type="ShapePath",this.color=new fe(),this.subPaths=[],this.currentPath=null}Object.assign(zl.prototype,{moveTo:function(e,t){return this.currentPath=new $t(),this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this},bezierCurveTo:function(e,t,n,i,r,s){return this.currentPath.bezierCurveTo(e,t,n,i,r,s),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function n(g){const p=[];for(let _=0,E=g.length;_<E;_++){const A=g[_],b=new Kn();b.curves=A.curves,p.push(b)}return p}function i(g,p){const _=p.length;let E=!1;for(let A=_-1,b=0;b<_;A=b++){let C=p[A],j=p[b],N=j.x-C.x,ne=j.y-C.y;if(Math.abs(ne)>Number.EPSILON){if(ne<0&&(C=p[b],N=-N,j=p[A],ne=-ne),g.y<C.y||g.y>j.y)continue;if(g.y===C.y){if(g.x===C.x)return!0}else{const z=ne*(g.x-C.x)-N*(g.y-C.y);if(z===0)return!0;if(z<0)continue;E=!E}}else{if(g.y!==C.y)continue;if(j.x<=g.x&&g.x<=C.x||C.x<=g.x&&g.x<=j.x)return!0}}return E}const r=Dn.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);let o,a,c;const l=[];if(s.length===1)return a=s[0],c=new Kn(),c.curves=a.curves,l.push(c),l;let h=!r(s[0].getPoints());h=e?!h:h;const u=[],f=[];let d=[],m=0,y;f[m]=void 0,d[m]=[];for(let g=0,p=s.length;g<p;g++)a=s[g],y=a.getPoints(),o=r(y),o=e?!o:o,o?(!h&&f[m]&&m++,f[m]={s:new Kn(),p:y},f[m].s.curves=a.curves,h&&m++,d[m]=[]):d[m].push({h:a,p:y[0]});if(!f[0])return n(s);if(f.length>1){let g=!1;const p=[];for(let _=0,E=f.length;_<E;_++)u[_]=[];for(let _=0,E=f.length;_<E;_++){const A=d[_];for(let b=0;b<A.length;b++){const C=A[b];let j=!0;for(let N=0;N<f.length;N++)i(C.p,f[N].p)&&(_!==N&&p.push({froms:_,tos:N,hole:b}),j?(j=!1,u[N].push(C)):g=!0);j&&u[_].push(C)}}p.length>0&&(g||(d=u))}let v;for(let g=0,p=f.length;g<p;g++){c=f[g].s,l.push(c),v=d[g];for(let _=0,E=v.length;_<E;_++)c.holes.push(v[_].h)}return l}});function Vl(e){this.type="Font",this.data=e}Object.assign(Vl.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100);const n=[],i=lv(e,t,this.data);for(let r=0,s=i.length;r<s;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function lv(e,t,n){const i=Array.from?Array.from(e):String(e).split(""),r=t/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,c=0;for(let l=0;l<i.length;l++){const h=i[l];if(h===`
`)a=0,c-=s;else{const u=uv(h,r,a,c,n);a+=u.offsetX,o.push(u.path)}}return o}function uv(e,t,n,i,r){const s=r.glyphs[e]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+e+'" does not exists in font family '+r.familyName+".");return}const o=new zl();let a,c,l,h,u,f,d,m;if(s.o){const y=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let v=0,g=y.length;v<g;){const p=y[v++];switch(p){case"m":a=y[v++]*t+n,c=y[v++]*t+i,o.moveTo(a,c);break;case"l":a=y[v++]*t+n,c=y[v++]*t+i,o.lineTo(a,c);break;case"q":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,o.quadraticCurveTo(u,f,l,h);break;case"b":l=y[v++]*t+n,h=y[v++]*t+i,u=y[v++]*t+n,f=y[v++]*t+i,d=y[v++]*t+n,m=y[v++]*t+i,o.bezierCurveTo(u,f,d,m,l,h);break}}}return{offsetX:s.ha*t,path:o}}function Wl(e){Ne.call(this,e)}Wl.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Wl,load:function(e,t,n,i){const r=this,s=new ht(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.load(e,function(o){let a;try{a=JSON.parse(o)}catch(l){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const c=r.parse(a);t&&t(c)},n,i)},parse:function(e){return new Vl(e)}});let io;const hv={getContext:function(){return io===void 0&&(io=new(window.AudioContext||window.webkitAudioContext)()),io},setContext:function(e){io=e}};function Pa(e){Ne.call(this,e)}Pa.prototype=Object.assign(Object.create(Ne.prototype),{constructor:Pa,load:function(e,t,n,i){const r=this,s=new ht(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.load(e,function(o){try{const a=o.slice(0),c=hv.getContext();c.decodeAudioData(a,function(l){t(l)})}catch(a){i?i(a):console.error(a),r.manager.itemError(e)}},n,i)}});function jl(e,t,n){Vt.call(this,void 0,n);const i=new fe().set(e),r=new fe().set(t),s=new M(i.r,i.g,i.b),o=new M(r.r,r.g,r.b),a=Math.sqrt(Math.PI),c=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}jl.prototype=Object.assign(Object.create(Vt.prototype),{constructor:jl,isHemisphereLightProbe:!0,copy:function(e){return Vt.prototype.copy.call(this,e),this},toJSON:function(e){const t=Vt.prototype.toJSON.call(this,e);return t}});function ql(e,t){Vt.call(this,void 0,t);const n=new fe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}ql.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ql,isAmbientLightProbe:!0,copy:function(e){return Vt.prototype.copy.call(this,e),this},toJSON:function(e){const t=Vt.prototype.toJSON.call(this,e);return t}});const Xl=new Re(),Yl=new Re();function dv(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Je(),this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Je(),this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(dv.prototype,{update:function(e){const t=this._cache,n=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(n){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const i=e.projectionMatrix.clone(),r=t.eyeSep/2,s=r*t.near/t.focus,o=t.near*Math.tan(Ee.DEG2RAD*t.fov*.5)/t.zoom;let a,c;Yl.elements[12]=-r,Xl.elements[12]=r,a=-o*t.aspect+s,c=o*t.aspect+s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(i),a=-o*t.aspect-s,c=o*t.aspect-s,i.elements[0]=2*t.near/(c-a),i.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Yl),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Xl)}});const zv=new M(),Vv=new dt(),Wv=new M(),jv=new M();class fv extends ge{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this}setDetune(e){return this.detune=e,this.source.detune===void 0?void 0:(this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this)}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const qv=new M(),Xv=new dt(),Yv=new M(),Zv=new M();class pv{constructor(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}function Zl(e,t,n){this.binding=e,this.valueSize=n;let i,r,s;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Zl.prototype,{accumulate:function(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=t}else{s+=t;const o=t/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e},apply:function(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=t*this._origIndex;this._mixBufferRegion(n,i,a,1-r,t)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let a=t,c=t+t;a!==c;++a)if(n[a]!==n[a+t]){o.setValue(n,i);break}},saveOriginalState:function(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,s=i;r!==s;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_setAdditiveIdentityNumeric:function(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]},_select:function(e,t,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)e[t+s]=e[n+s]},_slerp:function(e,t,n,i){dt.slerpFlat(e,t,e,t,e,n,i)},_slerpAdditive:function(e,t,n,i,r){const s=this._workIndex*r;dt.multiplyQuaternionsFlat(e,s,e,t,e,n),dt.slerpFlat(e,t,e,t,e,s,i)},_lerp:function(e,t,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=t+o;e[a]=e[a]*s+e[n+o]*i}},_lerpAdditive:function(e,t,n,i,r){for(let s=0;s!==r;++s){const o=t+s;e[o]=e[o]+e[n+s]*i}}});const Ia="\\[\\]\\.:\\/",mv=new RegExp("["+Ia+"]","g"),Da="[^"+Ia+"]",gv="[^"+Ia.replace("\\.","")+"]",vv=/((?:WC+[\/:])*)/.source.replace("WC",Da),yv=/(WCOD+)?/.source.replace("WCOD",gv),xv=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Da),bv=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Da),_v=new RegExp("^"+vv+yv+xv+bv+"$"),wv=["material","materials","bones"];function Jl(e,t,n){const i=n||ct.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}Object.assign(Jl.prototype,{getValue:function(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function ct(e,t,n){this.path=t,this.parsedPath=n||ct.parseTrackName(t),this.node=ct.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(ct,{Composite:Jl,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new ct.Composite(e,t,n):new ct(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(mv,"")},parseTrackName:function(e){const t=_v.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);wv.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n},findNode:function(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===t||o.uuid===t)return o;const a=n(o.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}});Object.assign(ct.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++]},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=ct.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let l=0;l<e.length;l++)if(e[l].name===c){c=l;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const s=e[i];if(s===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(ct.prototype,{_getValue_unbound:ct.prototype.getValue,_setValue_unbound:ct.prototype.setValue});function Mv(){this.uuid=Ee.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(Mv.prototype,{isAnimationObjectGroup:!0,add:function(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=e.length,c=this.nCachedObjects_;for(let l=0,h=arguments.length;l!==h;++l){const u=arguments[l],f=u.uuid;let d=t[f];if(d===void 0){d=a++,t[f]=d,e.push(u);for(let m=0,y=s;m!==y;++m)r[m].push(new ct(u,n[m],i[m]))}else if(d<c){o=e[d];const m=--c,y=e[m];t[y.uuid]=d,e[d]=y,t[f]=m,e[m]=u;for(let v=0,g=s;v!==g;++v){const p=r[v],_=p[m];let E=p[d];p[d]=_,E===void 0&&(E=new ct(u,n[v],i[v])),p[m]=E}}else e[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c},remove:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],c=a.uuid,l=t[c];if(l!==void 0&&l>=r){const h=r++,u=e[h];t[u.uuid]=l,e[l]=u,t[c]=h,e[h]=a;for(let f=0,d=i;f!==d;++f){const m=n[f],y=m[h],v=m[l];m[l]=y,m[h]=v}}}this.nCachedObjects_=r},uncache:function(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=e.length;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],l=c.uuid,h=t[l];if(h!==void 0)if(delete t[l],h<r){const u=--r,f=e[u],d=--s,m=e[d];t[f.uuid]=h,e[h]=f,t[m.uuid]=u,e[u]=m,e.pop();for(let y=0,v=i;y!==v;++y){const g=n[y],p=g[u],_=g[d];g[h]=p,g[u]=_,g.pop()}}else{const u=--s,f=e[u];t[f.uuid]=h,e[h]=f,e.pop();for(let d=0,m=i;d!==m;++d){const y=n[d];y[h]=y[u],y.pop()}}}this.nCachedObjects_=r},subscribe_:function(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,c=a.length,l=this.nCachedObjects_,h=new Array(c);i=r.length,n[e]=i,s.push(e),o.push(t),r.push(h);for(let u=l,f=a.length;u!==f;++u){const d=a[u];h[u]=new ct(d,e,t)}return h},unsubscribe_:function(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],c=e[o];t[c]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class Tv{constructor(e,t,n,i){this._mixer=e,this._clip=t,this._localRoot=n||null,this.blendMode=i||t.blendMode;const r=t.tracks,s=r.length,o=new Array(s),a={endingStart:di,endingEnd:di};for(let c=0;c!==s;++c){const l=r[c].createInterpolant(null);o[c]=l,l.settings=a}this._interpolantSettings=a,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=zh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,s=r/i,o=i/r;e.warp(1,s,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,s=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=r,a[1]=r+n,c[0]=e/s,c[1]=t/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const a=(e-r)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);const s=this._updateTime(t),o=this._updateWeight(e);if(o>0){const a=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case cc:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(s),c[l].accumulateAdditive(o);break;case Mo:default:for(let l=0,h=a.length;l!==h;++l)a[l].evaluate(s),c[l].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const s=n===Vh;if(e===0)return r===-1?i:s&&(r&1)===1?t-i:i;if(n===kh){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const a=this.repetitions-r;if(a<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(a===1){const c=e<0;this._setEndings(c,!c,s)}else this._setEndings(!1,!1,s);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(s&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=fi,i.endingEnd=fi):(e?i.endingStart=this.zeroSlopeAtStart?fi:di:i.endingStart=as,t?i.endingEnd=this.zeroSlopeAtEnd?fi:di:i.endingEnd=as)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let s=this._weightInterpolant;s===null&&(s=i._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,a=s.sampleValues;return o[0]=r,a[0]=t,o[1]=r+e,a[1]=n,this}}function Kl(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Kl.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Kl,_bindAction:function(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,s=e._propertyBindings,o=e._interpolants,a=n.uuid,c=this._bindingsByRootAndName;let l=c[a];l===void 0&&(l={},c[a]=l);for(let h=0;h!==r;++h){const u=i[h],f=u.name;let d=l[f];if(d!==void 0)s[h]=d;else{if(d=s[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const m=t&&t._propertyBindings[h].binding.parsedPath;d=new Zl(ct.create(n,f,m),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),s[h]=d}o[h].resultBuffer=d.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){const i=this._actions,r=this._actionsByClip;let s=r[t];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,c=a[a.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,a[l]=c,a.pop(),e._byClipCacheIndex=null;const h=o.actionByRoot,u=(e._localRoot||this._root).uuid;delete h[u],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[t];s===void 0&&(s={},i[t]=s),s[n]=e,e._cacheIndex=r.length,r.push(e)},_removeInactiveBinding:function(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=t[t.length-1],c=e._cacheIndex;a._cacheIndex=c,t[c]=a,t.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Qs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t,n){const i=t||this._root,r=i.uuid;let s=typeof e=="string"?Lt.findByName(i,e):e;const o=s!==null?s.uuid:e,a=this._actionsByClip[o];let c=null;if(n===void 0&&(s!==null?n=s.blendMode:n=Mo),a!==void 0){const h=a.actionByRoot[r];if(h!==void 0&&h.blendMode===n)return h;c=a.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const l=new Tv(this,s,t,n);return this._bindAction(l,c),this._addInactiveAction(l,o,r),l},existingAction:function(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Lt.findByName(n,e):e,s=r?r.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this},update:function(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),s=this._accuIndex^=1;for(let c=0;c!==n;++c){const l=t[c];l._update(i,e,r,s)}const o=this._bindings,a=this._nActiveBindings;for(let c=0;c!==a;++c)o[c].apply(s);return this},setTime:function(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const c=s[o];this._deactivateAction(c);const l=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=l,t[l]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}},uncacheRoot:function(e){const t=e.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class Ql{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Ql(this.value.clone===void 0?this.value:this.value.clone())}}function $l(e,t,n){bt.call(this,e,t),this.meshPerAttribute=n||1}$l.prototype=Object.assign(Object.create(bt.prototype),{constructor:$l,isInstancedInterleavedBuffer:!0,copy:function(e){return bt.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},clone:function(e){const t=bt.prototype.clone.call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t},toJSON:function(e){const t=bt.prototype.toJSON.call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}});function eu(e,t,n,i,r){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(eu.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});Object.assign(eu.prototype,{isGLBufferAttribute:!0,setBuffer:function(e){return this.buffer=e,this},setType:function(e,t){return this.type=e,this.elementSize=t,this},setItemSize:function(e){return this.itemSize=e,this},setCount:function(e){return this.count=e,this}});function Ki(e,t,n,i){this.ray=new pr(e,t),this.near=n||0,this.far=i||Infinity,this.camera=null,this.layers=new xc(),this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function tu(e,t){return e.distance-t.distance}function Oa(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),i===!0){const r=e.children;for(let s=0,o=r.length;s<o;s++)Oa(r[s],t,n,!0)}}Object.assign(Ki.prototype,{set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){const i=n||[];return Oa(e,this,i,t),i.sort(tu),i},intersectObjects:function(e,t,n){const i=n||[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=e.length;r<s;r++)Oa(e[r],this,i,t);return i.sort(tu),i}});class nu{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ee.clamp(t/this.radius,-1,1))),this}}const iu=new $();class Ev{constructor(e,t){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new $(Infinity,Infinity),this.max=t!==void 0?t:new $(-Infinity,-Infinity)}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=iu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new $()),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new $()),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new $()),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new $()),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=iu.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ru=new M(),ro=new M();class Sv{constructor(e,t){this.start=e!==void 0?e:new M(),this.end=t!==void 0?t:new M()}set(e,t){return this.start.copy(e),this.end.copy(t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new M()),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new M()),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new M()),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){ru.subVectors(e,this.start),ro.subVectors(this.end,this.start);const n=ro.dot(ro),i=ro.dot(ru);let r=i/n;return t&&(r=Ee.clamp(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new M()),this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function so(e){ge.call(this),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}so.prototype=Object.create(ge.prototype);so.prototype.constructor=so;so.prototype.isImmediateRenderObject=!0;const Jv=new M(),Nn=new M(),oo=new Re(),Fa=new Re();class Av extends Xn{constructor(e){const t=su(e),n=new Se(),i=[],r=[],s=new fe(0,0,1),o=new fe(0,1,0);for(let c=0;c<t.length;c++){const l=t[c];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(s.r,s.g,s.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new ye(i,3)),n.setAttribute("color",new ye(r,3));const a=new _t({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,a);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Fa.getInverse(this.root.matrixWorld);for(let r=0,s=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(oo.multiplyMatrices(Fa,o.matrixWorld),Nn.setFromMatrixPosition(oo),i.setXYZ(s,Nn.x,Nn.y,Nn.z),oo.multiplyMatrices(Fa,o.parent.matrixWorld),Nn.setFromMatrixPosition(oo),i.setXYZ(s+1,Nn.x,Nn.y,Nn.z),s+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function su(e){const t=[];e&&e.isBone&&t.push(e);for(let n=0;n<e.children.length;n++)t.push.apply(t,su(e.children[n]));return t}const Kv=new M(),Qv=new fe(),$v=new fe();class Lv extends Xn{constructor(e,t,n,i){e=e||10,t=t||10,n=new fe(n!==void 0?n:4473924),i=new fe(i!==void 0?i:8947848);const r=t/2,s=e/t,o=e/2,a=[],c=[];for(let u=0,f=0,d=-o;u<=t;u++,d+=s){a.push(-o,0,d,o,0,d),a.push(d,0,-o,d,0,o);const m=u===r?n:i;m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3,m.toArray(c,f),f+=3}const l=new Se();l.setAttribute("position",new ye(a,3)),l.setAttribute("color",new ye(c,3));const h=new _t({vertexColors:!0,toneMapped:!1});super(l,h);this.type="GridHelper"}}const ey=new M(),ty=new M(),ny=new M(),iy=new M(),ry=new ln(),sy=new Gt(),oy=new M(),ao=4,Zr=8,ay=Math.pow(2,Zr),ou=[.125,.215,.35,.446,.526,.582],Rv=Zr-ao+1+ou.length,cy={[pi]:0,[mi]:1,[uc]:2,[hc]:3,[dc]:4,[fc]:5,[cs]:6},ly=new Qn(),{_lodPlanes:uy,_sizeLods:hy,_sigmas:dy}=Cv(),ei=(1+Math.sqrt(5))/2,Qi=1/ei,fy=[new M(1,1,1),new M(-1,1,1),new M(1,1,-1),new M(-1,1,-1),new M(0,ei,Qi),new M(0,ei,-Qi),new M(Qi,0,ei),new M(-Qi,0,ei),new M(ei,Qi,0),new M(-ei,Qi,0)];function Cv(){const e=[],t=[],n=[];let i=Zr;for(let r=0;r<Rv;r++){const s=Math.pow(2,i);t.push(s);let o=1/s;r>Zr-ao?o=ou[r-Zr+ao-1]:r==0&&(o=0),n.push(o);const a=1/(s-1),c=-a/2,l=1+a/2,h=[c,c,l,c,l,l,c,c,l,l,c,l],u=6,f=6,d=3,m=2,y=1,v=new Float32Array(d*f*u),g=new Float32Array(m*f*u),p=new Float32Array(y*f*u);for(let E=0;E<u;E++){const A=E%3*2/3-1,b=E>2?0:-1,C=[A,b,0,A+2/3,b,0,A+2/3,b+1,0,A,b,0,A+2/3,b+1,0,A,b+1,0];v.set(C,d*f*E),g.set(h,m*f*E);const j=[E,E,E,E,E,E];p.set(j,y*f*E)}const _=new Se();_.setAttribute("position",new Me(v,d)),_.setAttribute("uv",new Me(g,m)),_.setAttribute("faceIndex",new Me(p,y)),e.push(_),i>ao&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}be.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(be.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};Object.assign(On.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const t=new Ge();for(let n=0,i=e.length;n<i;n++){const r=e[n];t.vertices.push(new M(r.x,r.y,r.z||0))}return t}});Object.assign($t.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});function Pv(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),at.call(this,e),this.type="catmullrom",this.closed=!0}Pv.prototype=Object.create(at.prototype);function Iv(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),at.call(this,e),this.type="catmullrom"}Iv.prototype=Object.create(at.prototype);function au(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),at.call(this,e),this.type="catmullrom"}au.prototype=Object.create(at.prototype);Object.assign(au.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});Lv.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Av.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Ne.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Fn.extractUrlBase(e)}});Ne.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(Ca.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}});Object.assign(Ev.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(Gt.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(Wt.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});Ls.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)};Sv.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)};Object.assign(Ee,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Ee.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Ee.ceilPowerOfTwo(e)}});Object.assign(vt.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(Re.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new M().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,s)}});on.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};dt.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)};Object.assign(pr.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(yt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}});Object.assign(yt,{barycoordFromPoint:function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),yt.getBarycoord(e,t,n,i,r)},normal:function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),yt.getNormal(e,t,n,i)}});Object.assign(Kn.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Al(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Dl(this,e)}});Object.assign($.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(M.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(He.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Ge.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.assign(ge.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(ge.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(qe.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(qe.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Wh},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(Os.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(Cr.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});Rr.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(be.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}});Je.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(We.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(Me.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===hr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(hr)}}});Object.assign(Me.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?hr:ls),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Se.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Me(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}});Object.defineProperties(Se.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(eo.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(e){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=e}}});Object.defineProperties(Ki.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(e){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=e}}});Object.defineProperties(bt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===hr},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}});Object.assign(bt.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?hr:ls),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Zs.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign(Rs.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(Ql.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(we.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new fe()}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===Wa}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}});Object.defineProperties(Yn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Yt.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(e){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=e}}});Object.defineProperties(xt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Object.assign(Fi.prototype,{clearTarget:function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(Fi.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?mi:pi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Kc.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.");return},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Bt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});Object.defineProperties(fv.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,n=new Pa();return n.load(e,function(i){t.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});pv.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};br.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)};Un.crossOrigin=void 0;Un.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new zr();r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};Un.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new kr();r.setCrossOrigin(this.crossOrigin);const s=r.load(e,n,void 0,i);return t&&(s.mapping=t),s};Un.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Un.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:bu}}));class co{constructor(e,t,n=.1){this.update=()=>{this._start+=(this._end-this._start)*this._dampingFactor};this._originalStart=e,this._start=e,this._originalEnd=t,this._end=t,this._dampingFactor=n}increaseEndBy(e){this._end+=e}decreaseEndBy(e){this._end-=e}get start(){return this._start}get end(){return this._end}setEnd(e){this._end=e}reset(e,t){this._start=e!=null?e:this._originalStart,this._end=t!=null?t:this._originalEnd}}class gn extends co{constructor(e,t,n,i,r=.1){super(e,t,r);this._min=n,this._max=i}get min(){return this._min}get max(){return this._max}increaseEndBy(e){this.setEnd(this._end+e)}decreaseEndBy(e){this.setEnd(this._end-e)}setEnd(e){this._end=e,this._end<this._min?this._end=this._min:this._end>this._max&&(this._end=this._max)}reset(e,t,n,i,r){this._start=e!=null?e:this._originalStart,this._end=t!=null?t:this._originalEnd,this._min=n!=null?n:this._min,this._max=i!=null?i:this._max,this._dampingFactor=r!=null?r:this._dampingFactor}}const Dv=nr();class cu{constructor(e){this.changeDoorTransparency=e=>{if(this._transparentDoor){const t=this._transparentDoor;e||(this._transparentDoor=null);const n={opacity:t.material.opacity},i={opacity:e?.5:1};new Dv.Tween(n).to(i,150).onUpdate(()=>{t.traverse(r=>{r.material&&(r.material.opacity=n.opacity)})}).onComplete(()=>{t.traverse(r=>{r.material&&(r.material.opacity=i.opacity)})}).start()}};this._intersectables=e.intersectables,this._transparentDoor}update(e,t){this._pointerOverStairs=null,this._intersectionPoint=null,t&&t.classList.remove("big");const n=e.intersectObject(this._intersectables,!0);if(n.length>0){const i=n[0];if(i.object.name.indexOf("path")!==-1)this.changeDoorTransparency(!1),this._intersectionPoint=i.point,t&&t.classList.add("big");else if(i.object.name.indexOf("Arrow")!==-1)this.changeDoorTransparency(!1),this._pointerOverStairs=i.object,t&&t.classList.add("big");else if(i.object.name.indexOf("door")!==-1){this._transparentDoor||(this._transparentDoor=i.object.name.indexOf("handle")!==-1?i.object.parent:i.object,this.changeDoorTransparency(!0));let r=1;for(;n[r];){const s=n[r].object;if(s.name.indexOf("path")!==-1){this._intersectionPoint=n[r].point,t&&t.classList.add("big");break}else if(s.name.indexOf("Arrow")!==-1){this._pointerOverStairs=s,t&&t.classList.add("big");break}else if(s.name.indexOf("door")!==-1)++r;else break}}else this.changeDoorTransparency(!1)}}get intersectionPoint(){return this._intersectionPoint}get pointerOverStairs(){return this._pointerOverStairs}}const Ov=nr();class lu{constructor(e){this.INDICATOR_HEIGHT=.07;this.ORIGINAL_OPACITY_0=.8;this.ORIGINAL_OPACITY_1=.3;this.EYE_HEIGHT=e,this._container=new ge(),this._container.add(new qe(new Js(.2,.225,64,1),new $e({color:16777215,transparent:!0,opacity:this.ORIGINAL_OPACITY_0}))),this._container.add(new qe(new Ks(.2,64),new $e({color:16777215,transparent:!0,opacity:this.ORIGINAL_OPACITY_1}))),this._container.lookAt(new M(0,1,0)),this._container.position.setY(this.INDICATOR_HEIGHT),this._container.visible=!1}pop(){const e={originalScale:this._container.scale.x,scale:this._container.scale.x,originalOpacityOf_0:this.ORIGINAL_OPACITY_0,originalOpacityOf_1:this.ORIGINAL_OPACITY_1,opacityOf_0:this._container.children[0].material.opacity,opacityOf_1:this._container.children[1].material.opacity},t={scale:this._container.scale.x*1.5,opacityOf_0:0};new Ov.Tween(e).to(t,200).onUpdate(()=>{this._container.children[0].scale.set(e.scale,e.scale,e.scale),this._container.children[0].material.opacity=e.opacityOf_0,this._container.children[1].material.opacity=e.opacityOf_1}).onComplete(()=>{this._container.visible=!1,this._container.children[0].scale.set(e.originalScale,e.originalScale,e.originalScale),this._container.children[0].material.opacity=e.originalOpacityOf_0,this._container.children[1].material.opacity=e.originalOpacityOf_1}).start()}update(e,t){const n=e.clone();n.setY(0);const i=t.clone();i.setY(this.EYE_HEIGHT);const r=i.distanceTo(n),s=i.y/r,o=Math.acos(s),a=Math.tan(o),c=i.clone().sub(n);c.setY(this.INDICATOR_HEIGHT),c.normalize();const l=a*this.INDICATOR_HEIGHT,h=new M().copy(c).multiplyScalar(l),u=new M(e.x,e.y+this.INDICATOR_HEIGHT,e.z);u.add(h),this._container.position.copy(u),this.show()}show(){this._container.visible=!0}hide(){this._container.visible=!1}get container(){return this._container}}const uu=nr();class hu{constructor(e){this.EYE_HEIGHT=1.5;this.SENSITIVITY=1.6;this.pointerDown=e=>{e.preventDefault(),this._isPointerDown=!0,this._mouseMoved=!1,this._canvas.classList.add("rotating"),this._canvas.classList.remove("floorIntersected"),this._canvas.classList.remove("rotatable")};this.handleMouseMove=e=>{this.pointerMove(e.pageX,e.pageY)};this.pointerUp=()=>{if(this._canvas.classList.remove("rotating"),this._canvas.classList.remove("floorIntersected"),this._canvas.classList.remove("rotatable"),!this._mouseMoved&&this._intersection.intersectionPoint&&!this._isUserPositionMoving){const e=this._intersection.intersectionPoint.clone().add(new M(0,this.EYE_HEIGHT,0)),t={x:this._user.position.x,y:this._user.position.y,z:this._user.position.z},n={x:e.x,y:e.y,z:e.z};this._circleIndicator.pop(),this._isUserPositionMoving=!0,new uu.Tween(t).to(n,1e3).easing(uu.Easing.Cubic.InOut).onUpdate(()=>{this._user.position.set(t.x,t.y,t.z)}).onComplete(()=>{this._isUserPositionMoving=!1,this.pointerMove(this._pointer.prevValidX,this._pointer.prevValidY)}).delay(150).start()}else!this._mouseMoved&&this._intersection.pointerOverStairs&&!this._isUserMovingOnStairs&&!this._isUserPositionMoving;this._isPointerDown=!1,this._pointer.prevX=null,this._pointer.prevY=null};this.pointerMove=(e,t)=>{this._mouseMoved=e!==this._pointer.prevX||t!==this._pointer.prevY,this._isPointerDown?(this._mouseMoved&&this._circleIndicator.hide(),this._canvas.classList.add("rotating"),this._canvas.classList.remove("rotatable"),this._canvas.classList.remove("floorIntersected"),this._pointer.prevX!=null&&this._pointer.prevY!=null&&(this._u.decreaseEndBy(window.devicePixelRatio*(e-this._pointer.prevX)*this.SENSITIVITY/800),this._v.decreaseEndBy(window.devicePixelRatio*(t-this._pointer.prevY)*this.SENSITIVITY/800))):(this.updateIntersectionPoint(),this._intersection.intersectionPoint||this._intersection.pointerOverStairs?(this._intersection.intersectionPoint&&!this._isUserPositionMoving&&!this._isUserMovingOnStairs&&this._circleIndicator.update(this._intersection.intersectionPoint,this._user.position),this._canvas.classList.add("floorIntersected"),this._canvas.classList.remove("rotating"),this._canvas.classList.remove("rotatable")):(this._circleIndicator.hide(),this._canvas.classList.add("rotatable"),this._canvas.classList.remove("floorIntersected"),this._canvas.classList.remove("rotating"))),this._pointer.prevX=this._pointer.prevValidX=e,this._pointer.prevY=this._pointer.prevValidY=t};this.switchToDeviceOrientationControls=()=>{};this.update=()=>{this._enabled&&(this._u.update(),this._v.update(),this._isUserMovingOnStairs||(this._forward=this.getSphereSurfacePointFromUV(this._u.start,this._v.start),this._user.lookAt(this._user.position.clone().add(this._forward))),this.isUserMoving()&&(this.updateIntersectionPoint(),!this._isUserPositionMoving&&this._intersection.intersectionPoint&&this._circleIndicator.update(this._intersection.intersectionPoint,this._user.position)))};this._sceneManager=e,this._user=e.user,this._canvas=e.canvas,this._intersection=new cu(e),this._isPointerDown=!1,this._pointer={prevX:null,prevY:null,prevValidX:null,prevValidY:null},this._u=new co(0,0),this._v=new gn(0,0,.01,3.14),this._mouseMoved=!0,this._raycaster=new Ki(),this._mouse=new $(),this._isUserPositionMoving=!1,this._circleIndicator=new lu(this.EYE_HEIGHT),e.scene.add(this._circleIndicator.container),this._enabled=!1}updateIntersectionPoint(e,t){const n=e||this._pointer.prevValidX,i=t||this._pointer.prevValidY;if(n&&i){const r=this._canvas.getBoundingClientRect();this._mouse.x=(n-r.left)/r.width*2-1,this._mouse.y=-((i-r.top)/r.height)*2+1,this._raycaster.setFromCamera(this._mouse,this._user.children[0]),this._intersection.update(this._raycaster)}}getSphereSurfacePointFromUV(e,t){const n=new M(Math.cos(e)*Math.sin(t),Math.cos(t),Math.sin(e)*Math.sin(t)).normalize();return n}setUVFromSphereSufracePoint(){const e=this._user.getWorldDirection(new M()).clone().normalize(),t=Math.PI+Math.atan2(-e.z,-e.x);this._u.reset(t,t);const n=Math.PI/2-Math.asin(e.y);this._v.reset(n,n)}isUserMoving(){const e=1/500,t=Math.abs(this._u.end-this._u.start)>e,n=Math.abs(this._v.end-this._v.start)>e;return t||n||this._isUserPositionMoving}activate(){console.log("MouseMovementControls activated."),this._enabled=!0,this.setUVFromSphereSufracePoint(),this._canvas.addEventListener("mousedown",this.pointerDown),this._canvas.addEventListener("mousemove",this.handleMouseMove),this._canvas.addEventListener("mouseup",this.pointerUp),this._canvas.addEventListener("mouseleave",this.pointerUp),this._canvas.addEventListener("touchstart",this.switchToDeviceOrientationControls)}deactivate(){this._enabled=!1,this._isPointerDown=!1,this._circleIndicator.hide(),this._canvas.classList.remove("rotating"),this._canvas.classList.remove("rotatable"),this._canvas.classList.remove("floorIntersected"),this._canvas.removeEventListener("mousedown",this.pointerDown),this._canvas.removeEventListener("mousemove",this.handleMouseMove),this._canvas.removeEventListener("mouseup",this.pointerUp),this._canvas.removeEventListener("mouseleave",this.pointerUp),this._canvas.removeEventListener("touchstart",this.switchToDeviceOrientationControls)}}class du{constructor(e){this.setWASDSpeed=e=>{this._forwardOffsetSpeed.reset(0,0,-e,e),this._leftOffsetSpeed.reset(0,0,-e,e)};this.setSensitivity=e=>{this._mouseSensitivity=e};this.onKeyDown=e=>{this.onKeyChange(e,!0)};this.onKeyUp=e=>{this.onKeyChange(e,!1)};this.onKeyChange=(e,t)=>{const n=e.key.toLowerCase();n==="w"||n==="arrowup"?this._isKeyDown.up=t:n==="a"||n==="arrowleft"?this._isKeyDown.left=t:n==="s"||n==="arrowdown"?this._isKeyDown.down=t:(n==="d"||n==="arrowright")&&(this._isKeyDown.right=t)};this.onMouseDown=e=>{this._pointer.x=e.clientX,this._pointer.y=e.clientY,this._pointer.isDown=!0};this.onMouseMove=e=>{e.preventDefault(),this._pointer.isDown&&this.rotate(e.clientX,e.clientY)};this.rotate=(e,t)=>{if(this._pointer.x=e,this._pointer.y=t,this._pointer.prevX!==null&&this._pointer.prevY!==null){const n=Ee.degToRad(this._pointer.x-this._pointer.prevX)*this._mouseSensitivity/10,i=Ee.degToRad(this._pointer.y-this._pointer.prevY)*this._mouseSensitivity/10;this._polarAngle.increaseEndBy(i),this._azimuthAngle.decreaseEndBy(n)}this._pointer.prevX=e,this._pointer.prevY=t};this.onPointerUp=()=>{this._pointer.isDown=!1,this._pointer.x=null,this._pointer.y=null,this._pointer.prevX=null,this._pointer.prevY=null};this.updateWASD=()=>{let e=0,t=0;this._isKeyDown.up&&(e+=1),this._isKeyDown.down&&(e-=1),this._isKeyDown.left&&(t+=1),this._isKeyDown.right&&(t-=1),this._forwardOffsetSpeed.setEnd(e),this._leftOffsetSpeed.setEnd(t)};this.update=()=>{this.updateWASD(),this._azimuthAngle.update(),this._polarAngle.update(),this._forwardOffsetSpeed.update(),this._leftOffsetSpeed.update(),this._user.getWorldDirection(this._target),this._target.normalize();const e=this._up.clone().cross(this._target).normalize().multiplyScalar(this._leftOffsetSpeed.start);this._user.position.add(this._target.clone().multiplyScalar(this._forwardOffsetSpeed.start)).add(e),this._spherical.theta=this._azimuthAngle.start,this._spherical.phi=this._polarAngle.start,this._spherical.makeSafe(),this._forward.setFromSpherical(this._spherical),this._target.copy(this._user.position).add(this._forward),this._user.lookAt(this._target)};this._user=e.user,this._canvas=e.canvas,this._pointer={x:null,y:null,prevX:null,prevY:null,isDown:!1},this._mouseSensitivity=1,this._isKeyDown={up:!1,down:!1,left:!1,right:!1},this._up=new M(0,1,0),this._forward=new M(),this._target=new M(),this._forwardOffsetSpeed=new gn(0,0,-1,1),this._leftOffsetSpeed=new gn(0,0,-1,1),this._spherical=new nu(),this._polarAngle=new gn(this._spherical.phi,this._spherical.phi,0,Math.PI),this._azimuthAngle=new gn(this._spherical.theta,this._spherical.theta,-Infinity,Infinity)}activate(){this._enabled=!0,this._forwardOffsetSpeed.reset(),this._leftOffsetSpeed.reset(),this._user.getWorldDirection(this._target),this._target.normalize(),this._forward.copy(this._target).sub(this._user.position).normalize(),this._spherical.setFromVector3(this._forward),this._spherical.makeSafe(),this._polarAngle.reset(this._spherical.phi,this._spherical.phi),this._azimuthAngle.reset(this._spherical.theta,this._spherical.theta),this._canvas.addEventListener("mousedown",this.onMouseDown),this._canvas.addEventListener("mousemove",this.onMouseMove),this._canvas.addEventListener("mouseup",this.onPointerUp),this._canvas.addEventListener("mouseleave",this.onPointerUp),window.addEventListener("keydown",this.onKeyDown),window.addEventListener("keyup",this.onKeyUp)}deactivate(){this._enabled=!1,this._canvas.removeEventListener("mousedown",this.onMouseDown),this._canvas.removeEventListener("mousemove",this.onMouseMove),this._canvas.removeEventListener("mouseup",this.onPointerUp),this._canvas.removeEventListener("mouseleave",this.onPointerUp),window.removeEventListener("keydown",this.onKeyDown),window.removeEventListener("keyup",this.onKeyUp)}get target(){return this._target}}var fu=function(){function e(T){Ne.call(this,T),this.dracoLoader=null,this.ddsLoader=null,this.ktx2Loader=null,this.pluginCallbacks=[],this.register(function(x){return new o(x)}),this.register(function(x){return new c(x)}),this.register(function(x){return new a(x)})}e.prototype=Object.assign(Object.create(Ne.prototype),{constructor:e,load:function(T,x,I,L){var D=this,O;this.resourcePath!==""?O=this.resourcePath:this.path!==""?O=this.path:O=Fn.extractUrlBase(T),D.manager.itemStart(T);var B=function(U){L?L(U):console.error(U),D.manager.itemError(T),D.manager.itemEnd(T)},P=new ht(D.manager);P.setPath(this.path),P.setResponseType("arraybuffer"),P.setRequestHeader(this.requestHeader),D.crossOrigin==="use-credentials"&&P.setWithCredentials(!0),P.load(T,function(U){try{D.parse(U,O,function(k){x(k),D.manager.itemEnd(T)},B)}catch(k){B(k)}},I,B)},setDRACOLoader:function(T){return this.dracoLoader=T,this},setDDSLoader:function(T){return this.ddsLoader=T,this},setKTX2Loader:function(T){return this.ktx2Loader=T,this},register:function(T){return this.pluginCallbacks.indexOf(T)===-1&&this.pluginCallbacks.push(T),this},unregister:function(T){return this.pluginCallbacks.indexOf(T)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(T),1),this},parse:function(T,x,I,L){var D,O={},B={};if(typeof T=="string")D=T;else{var P=Fn.decodeText(new Uint8Array(T,0,4));if(P===l){try{O[n.KHR_BINARY_GLTF]=new f(T)}catch(S){L&&L(S);return}D=O[n.KHR_BINARY_GLTF].content}else D=Fn.decodeText(new Uint8Array(T))}var U=JSON.parse(D);if(U.asset===void 0||U.asset.version[0]<2){L&&L(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}var k=new ae(U,{path:x||this.resourcePath||"",crossOrigin:this.crossOrigin,manager:this.manager,ktx2Loader:this.ktx2Loader});k.fileLoader.setRequestHeader(this.requestHeader);for(var X=0;X<this.pluginCallbacks.length;X++){var V=this.pluginCallbacks[X](k);B[V.name]=V,O[V.name]=!0}if(U.extensionsUsed)for(var X=0;X<U.extensionsUsed.length;++X){var ee=U.extensionsUsed[X],w=U.extensionsRequired||[];switch(ee){case n.KHR_LIGHTS_PUNCTUAL:O[ee]=new r(U);break;case n.KHR_MATERIALS_UNLIT:O[ee]=new s();break;case n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:O[ee]=new v();break;case n.KHR_DRACO_MESH_COMPRESSION:O[ee]=new d(U,this.dracoLoader);break;case n.MSFT_TEXTURE_DDS:O[ee]=new i(this.ddsLoader);break;case n.KHR_TEXTURE_TRANSFORM:O[ee]=new m();break;case n.KHR_MESH_QUANTIZATION:O[ee]=new g();break;default:w.indexOf(ee)>=0&&B[ee]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+ee+'".')}}k.setExtensions(O),k.setPlugins(B),k.parse(I,L)}});function t(){var T={};return{get:function(x){return T[x]},add:function(x,I){T[x]=I},remove:function(x){delete T[x]},removeAll:function(){T={}}}}var n={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:"KHR_materials_pbrSpecularGlossiness",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",MSFT_TEXTURE_DDS:"MSFT_texture_dds"};function i(T){if(!T)throw new Error("THREE.GLTFLoader: Attempting to load .dds texture without importing DDSLoader");this.name=n.MSFT_TEXTURE_DDS,this.ddsLoader=T}function r(T){this.name=n.KHR_LIGHTS_PUNCTUAL;var x=T.extensions&&T.extensions[n.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=x.lights||[]}r.prototype.loadLight=function(T){var x=this.lightDefs[T],I,L=new fe(16777215);x.color!==void 0&&L.fromArray(x.color);var D=x.range!==void 0?x.range:0;switch(x.type){case"directional":I=new $n(L),I.target.position.set(0,0,-1),I.add(I.target);break;case"point":I=new Yr(L),I.distance=D;break;case"spot":I=new Xr(L),I.distance=D,x.spot=x.spot||{},x.spot.innerConeAngle=x.spot.innerConeAngle!==void 0?x.spot.innerConeAngle:0,x.spot.outerConeAngle=x.spot.outerConeAngle!==void 0?x.spot.outerConeAngle:Math.PI/4,I.angle=x.spot.outerConeAngle,I.penumbra=1-x.spot.innerConeAngle/x.spot.outerConeAngle,I.target.position.set(0,0,-1),I.add(I.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, "'+x.type+'".')}return I.position.set(0,0,0),I.decay=2,x.intensity!==void 0&&(I.intensity=x.intensity),I.name=x.name||"light_"+T,Promise.resolve(I)};function s(){this.name=n.KHR_MATERIALS_UNLIT}s.prototype.getMaterialType=function(){return $e},s.prototype.extendParams=function(T,x,I){var L=[];T.color=new fe(1,1,1),T.opacity=1;var D=x.pbrMetallicRoughness;if(D){if(Array.isArray(D.baseColorFactor)){var O=D.baseColorFactor;T.color.fromArray(O),T.opacity=O[3]}D.baseColorTexture!==void 0&&L.push(I.assignTexture(T,"map",D.baseColorTexture))}return Promise.all(L)};function o(T){this.parser=T,this.name=n.KHR_MATERIALS_CLEARCOAT}o.prototype.getMaterialType=function(T){var x=this.parser,I=x.json.materials[T];return!I.extensions||!I.extensions[this.name]?null:Yt},o.prototype.extendMaterialParams=function(T,x){var I=this.parser,L=I.json.materials[T];if(!L.extensions||!L.extensions[this.name])return Promise.resolve();var D=[],O=L.extensions[this.name];if(O.clearcoatFactor!==void 0&&(x.clearcoat=O.clearcoatFactor),O.clearcoatTexture!==void 0&&D.push(I.assignTexture(x,"clearcoatMap",O.clearcoatTexture)),O.clearcoatRoughnessFactor!==void 0&&(x.clearcoatRoughness=O.clearcoatRoughnessFactor),O.clearcoatRoughnessTexture!==void 0&&D.push(I.assignTexture(x,"clearcoatRoughnessMap",O.clearcoatRoughnessTexture)),O.clearcoatNormalTexture!==void 0&&(D.push(I.assignTexture(x,"clearcoatNormalMap",O.clearcoatNormalTexture)),O.clearcoatNormalTexture.scale!==void 0)){var B=O.clearcoatNormalTexture.scale;x.clearcoatNormalScale=new $(B,B)}return Promise.all(D)};function a(T){this.parser=T,this.name=n.KHR_MATERIALS_TRANSMISSION}a.prototype.getMaterialType=function(T){var x=this.parser,I=x.json.materials[T];return!I.extensions||!I.extensions[this.name]?null:Yt},a.prototype.extendMaterialParams=function(T,x){var I=this.parser,L=I.json.materials[T];if(!L.extensions||!L.extensions[this.name])return Promise.resolve();var D=[],O=L.extensions[this.name];return O.transmissionFactor!==void 0&&(x.transmission=O.transmissionFactor),O.transmissionTexture!==void 0&&D.push(I.assignTexture(x,"transmissionMap",O.transmissionTexture)),Promise.all(D)};function c(T){this.parser=T,this.name=n.KHR_TEXTURE_BASISU}c.prototype.loadTexture=function(T){var x=this.parser,I=x.json,L=I.textures[T];if(!L.extensions||!L.extensions[this.name])return null;var D=L.extensions[this.name],O=I.images[D.source],B=x.options.ktx2Loader;if(!B)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return x.loadTextureImage(T,O,B)};var l="glTF",h=12,u={JSON:1313821514,BIN:5130562};function f(T){this.name=n.KHR_BINARY_GLTF,this.content=null,this.body=null;var x=new DataView(T,0,h);if(this.header={magic:Fn.decodeText(new Uint8Array(T.slice(0,4))),version:x.getUint32(4,!0),length:x.getUint32(8,!0)},this.header.magic!==l)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");for(var I=new DataView(T,h),L=0;L<I.byteLength;){var D=I.getUint32(L,!0);L+=4;var O=I.getUint32(L,!0);if(L+=4,O===u.JSON){var B=new Uint8Array(T,h+L,D);this.content=Fn.decodeText(B)}else if(O===u.BIN){var P=h+L;this.body=T.slice(P,P+D)}L+=D}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}function d(T,x){if(!x)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=n.KHR_DRACO_MESH_COMPRESSION,this.json=T,this.dracoLoader=x,this.dracoLoader.preload()}d.prototype.decodePrimitive=function(T,x){var I=this.json,L=this.dracoLoader,D=T.extensions[this.name].bufferView,O=T.extensions[this.name].attributes,B={},P={},U={};for(var k in O){var X=j[k]||k.toLowerCase();B[X]=O[k]}for(k in T.attributes){var X=j[k]||k.toLowerCase();if(O[k]!==void 0){var V=I.accessors[T.attributes[k]],ee=E[V.componentType];U[X]=ee,P[X]=V.normalized===!0}}return x.getDependency("bufferView",D).then(function(w){return new Promise(function(S){L.decodeDracoFile(w,function(Q){for(var J in Q.attributes){var F=Q.attributes[J],ie=P[J];ie!==void 0&&(F.normalized=ie)}S(Q)},B,U)})})};function m(){this.name=n.KHR_TEXTURE_TRANSFORM}m.prototype.extendTexture=function(T,x){return T=T.clone(),x.offset!==void 0&&T.offset.fromArray(x.offset),x.rotation!==void 0&&(T.rotation=x.rotation),x.scale!==void 0&&T.repeat.fromArray(x.scale),x.texCoord!==void 0&&console.warn('THREE.GLTFLoader: Custom UV sets in "'+this.name+'" extension not yet supported.'),T.needsUpdate=!0,T};function y(T){pt.call(this),this.isGLTFSpecularGlossinessMaterial=!0;var x=["#ifdef USE_SPECULARMAP","	uniform sampler2D specularMap;","#endif"].join(`
`),I=["#ifdef USE_GLOSSINESSMAP","	uniform sampler2D glossinessMap;","#endif"].join(`
`),L=["vec3 specularFactor = specular;","#ifdef USE_SPECULARMAP","	vec4 texelSpecular = texture2D( specularMap, vUv );","	texelSpecular = sRGBToLinear( texelSpecular );","	// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture","	specularFactor *= texelSpecular.rgb;","#endif"].join(`
`),D=["float glossinessFactor = glossiness;","#ifdef USE_GLOSSINESSMAP","	vec4 texelGlossiness = texture2D( glossinessMap, vUv );","	// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture","	glossinessFactor *= texelGlossiness.a;","#endif"].join(`
`),O=["PhysicalMaterial material;","material.diffuseColor = diffuseColor.rgb;","vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );","float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );","material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.","material.specularRoughness += geometryRoughness;","material.specularRoughness = min( material.specularRoughness, 1.0 );","material.specularColor = specularFactor.rgb;"].join(`
`),B={specular:{value:new fe().setHex(16777215)},glossiness:{value:1},specularMap:{value:null},glossinessMap:{value:null}};this._extraUniforms=B,this.onBeforeCompile=function(P){for(var U in B)P.uniforms[U]=B[U];P.fragmentShader=P.fragmentShader.replace("uniform float roughness;","uniform vec3 specular;"),P.fragmentShader=P.fragmentShader.replace("uniform float metalness;","uniform float glossiness;"),P.fragmentShader=P.fragmentShader.replace("#include <roughnessmap_pars_fragment>",x),P.fragmentShader=P.fragmentShader.replace("#include <metalnessmap_pars_fragment>",I),P.fragmentShader=P.fragmentShader.replace("#include <roughnessmap_fragment>",L),P.fragmentShader=P.fragmentShader.replace("#include <metalnessmap_fragment>",D),P.fragmentShader=P.fragmentShader.replace("#include <lights_physical_fragment>",O)},Object.defineProperties(this,{specular:{get:function(){return B.specular.value},set:function(P){B.specular.value=P}},specularMap:{get:function(){return B.specularMap.value},set:function(P){B.specularMap.value=P}},glossiness:{get:function(){return B.glossiness.value},set:function(P){B.glossiness.value=P}},glossinessMap:{get:function(){return B.glossinessMap.value},set:function(P){B.glossinessMap.value=P,P?(this.defines.USE_GLOSSINESSMAP="",this.defines.USE_ROUGHNESSMAP=""):(delete this.defines.USE_ROUGHNESSMAP,delete this.defines.USE_GLOSSINESSMAP)}}}),delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this.setValues(T)}y.prototype=Object.create(pt.prototype),y.prototype.constructor=y,y.prototype.copy=function(T){return pt.prototype.copy.call(this,T),this.specularMap=T.specularMap,this.specular.copy(T.specular),this.glossinessMap=T.glossinessMap,this.glossiness=T.glossiness,delete this.metalness,delete this.roughness,delete this.metalnessMap,delete this.roughnessMap,this};function v(){return{name:n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:["color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissive","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","displacementMap","displacementScale","displacementBias","specularMap","specular","glossinessMap","glossiness","alphaMap","envMap","envMapIntensity","refractionRatio"],getMaterialType:function(){return y},extendParams:function(T,x,I){var L=x.extensions[this.name];T.color=new fe(1,1,1),T.opacity=1;var D=[];if(Array.isArray(L.diffuseFactor)){var O=L.diffuseFactor;T.color.fromArray(O),T.opacity=O[3]}if(L.diffuseTexture!==void 0&&D.push(I.assignTexture(T,"map",L.diffuseTexture)),T.emissive=new fe(0,0,0),T.glossiness=L.glossinessFactor!==void 0?L.glossinessFactor:1,T.specular=new fe(1,1,1),Array.isArray(L.specularFactor)&&T.specular.fromArray(L.specularFactor),L.specularGlossinessTexture!==void 0){var B=L.specularGlossinessTexture;D.push(I.assignTexture(T,"glossinessMap",B)),D.push(I.assignTexture(T,"specularMap",B))}return Promise.all(D)},createMaterial:function(T){var x=new y(T);return x.fog=!0,x.color=T.color,x.map=T.map===void 0?null:T.map,x.lightMap=null,x.lightMapIntensity=1,x.aoMap=T.aoMap===void 0?null:T.aoMap,x.aoMapIntensity=1,x.emissive=T.emissive,x.emissiveIntensity=1,x.emissiveMap=T.emissiveMap===void 0?null:T.emissiveMap,x.bumpMap=T.bumpMap===void 0?null:T.bumpMap,x.bumpScale=1,x.normalMap=T.normalMap===void 0?null:T.normalMap,x.normalMapType=wn,T.normalScale&&(x.normalScale=T.normalScale),x.displacementMap=null,x.displacementScale=1,x.displacementBias=0,x.specularMap=T.specularMap===void 0?null:T.specularMap,x.specular=T.specular,x.glossinessMap=T.glossinessMap===void 0?null:T.glossinessMap,x.glossiness=T.glossiness,x.alphaMap=null,x.envMap=T.envMap===void 0?null:T.envMap,x.envMapIntensity=1,x.refractionRatio=.98,x}}}function g(){this.name=n.KHR_MESH_QUANTIZATION}function p(T,x,I,L){mt.call(this,T,x,I,L)}p.prototype=Object.create(mt.prototype),p.prototype.constructor=p,p.prototype.copySampleValue_=function(T){for(var x=this.resultBuffer,I=this.sampleValues,L=this.valueSize,D=T*L*3+L,O=0;O!==L;O++)x[O]=I[D+O];return x},p.prototype.beforeStart_=p.prototype.copySampleValue_,p.prototype.afterEnd_=p.prototype.copySampleValue_,p.prototype.interpolate_=function(T,x,I,L){for(var D=this.resultBuffer,O=this.sampleValues,B=this.valueSize,P=B*2,U=B*3,k=L-x,X=(I-x)/k,V=X*X,ee=V*X,w=T*U,S=w-U,Q=-2*ee+3*V,J=ee-V,F=1-Q,ie=J-V+X,oe=0;oe!==B;oe++){var xe=O[S+oe+B],ce=O[S+oe+P]*k,pe=O[w+oe+B],me=O[w+oe]*k;D[oe]=F*xe+ie*ce+Q*pe+J*me}return D};var _={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123},E={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},A={9728:it,9729:Ze,9984:ar,9985:is,9986:cr,9987:bn},b={33071:nt,33648:li,10497:xn},C={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},j={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv2",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},N={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},ne={CUBICSPLINE:void 0,LINEAR:Gn,STEP:hi},z={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function q(T,x){return typeof T!="string"||T===""?"":(/^https?:\/\//i.test(x)&&/^\//.test(T)&&(x=x.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(T)||(/^data:.*,.*$/i.test(T)||/^blob:.*$/i.test(T))?T:x+T)}function W(T){return T.DefaultMaterial===void 0&&(T.DefaultMaterial=new pt({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:oi})),T.DefaultMaterial}function H(T,x,I){for(var L in I.extensions)T[L]===void 0&&(x.userData.gltfExtensions=x.userData.gltfExtensions||{},x.userData.gltfExtensions[L]=I.extensions[L])}function G(T,x){x.extras!==void 0&&(typeof x.extras=="object"?Object.assign(T.userData,x.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+x.extras))}function K(T,x,I){for(var L=!1,D=!1,O=0,B=x.length;O<B;O++){var P=x[O];if(P.POSITION!==void 0&&(L=!0),P.NORMAL!==void 0&&(D=!0),L&&D)break}if(!L&&!D)return Promise.resolve(T);for(var U=[],k=[],O=0,B=x.length;O<B;O++){var P=x[O];if(L){var X=P.POSITION!==void 0?I.getDependency("accessor",P.POSITION):T.attributes.position;U.push(X)}if(D){var X=P.NORMAL!==void 0?I.getDependency("accessor",P.NORMAL):T.attributes.normal;k.push(X)}}return Promise.all([Promise.all(U),Promise.all(k)]).then(function(V){var ee=V[0],w=V[1];return L&&(T.morphAttributes.position=ee),D&&(T.morphAttributes.normal=w),T.morphTargetsRelative=!0,T})}function re(T,x){if(T.updateMorphTargets(),x.weights!==void 0)for(var I=0,L=x.weights.length;I<L;I++)T.morphTargetInfluences[I]=x.weights[I];if(x.extras&&Array.isArray(x.extras.targetNames)){var D=x.extras.targetNames;if(T.morphTargetInfluences.length===D.length){T.morphTargetDictionary={};for(var I=0,L=D.length;I<L;I++)T.morphTargetDictionary[D[I]]=I}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function se(T){var x=T.extensions&&T.extensions[n.KHR_DRACO_MESH_COMPRESSION],I;return x?I="draco:"+x.bufferView+":"+x.indices+":"+ue(x.attributes):I=T.indices+":"+ue(T.attributes)+":"+T.mode,I}function ue(T){for(var x="",I=Object.keys(T).sort(),L=0,D=I.length;L<D;L++)x+=I[L]+":"+T[I[L]]+";";return x}function ae(T,x){this.json=T||{},this.extensions={},this.plugins={},this.options=x||{},this.cache=new t(),this.associations=new Map(),this.primitiveCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},typeof createImageBitmap!="undefined"&&/Firefox/.test(navigator.userAgent)===!1?this.textureLoader=new no(this.options.manager):this.textureLoader=new zr(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.fileLoader=new ht(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}ae.prototype.setExtensions=function(T){this.extensions=T},ae.prototype.setPlugins=function(T){this.plugins=T},ae.prototype.parse=function(T,x){var I=this,L=this.json,D=this.extensions;this.cache.removeAll(),this._markDefs(),Promise.all([this.getDependencies("scene"),this.getDependencies("animation"),this.getDependencies("camera")]).then(function(O){var B={scene:O[0][L.scene||0],scenes:O[0],animations:O[1],cameras:O[2],asset:L.asset,parser:I,userData:{}};H(D,B,L),G(B,L),T(B)}).catch(x)},ae.prototype._markDefs=function(){for(var T=this.json.nodes||[],x=this.json.skins||[],I=this.json.meshes||[],L=0,D=x.length;L<D;L++)for(var O=x[L].joints,B=0,P=O.length;B<P;B++)T[O[B]].isBone=!0;for(var U=0,k=T.length;U<k;U++){var X=T[U];X.mesh!==void 0&&(this._addNodeRef(this.meshCache,X.mesh),X.skin!==void 0&&(I[X.mesh].isSkinnedMesh=!0)),X.camera!==void 0&&this._addNodeRef(this.cameraCache,X.camera),X.extensions&&X.extensions[n.KHR_LIGHTS_PUNCTUAL]&&X.extensions[n.KHR_LIGHTS_PUNCTUAL].light!==void 0&&this._addNodeRef(this.lightCache,X.extensions[n.KHR_LIGHTS_PUNCTUAL].light)}},ae.prototype._addNodeRef=function(T,x){if(x===void 0)return;T.refs[x]===void 0&&(T.refs[x]=T.uses[x]=0),T.refs[x]++},ae.prototype._getNodeRef=function(T,x,I){if(T.refs[x]<=1)return I;var L=I.clone();return L.name+="_instance_"+T.uses[x]++,L},ae.prototype._invokeOne=function(T){var x=Object.values(this.plugins);x.push(this);for(var I=0;I<x.length;I++){var L=T(x[I]);if(L)return L}},ae.prototype._invokeAll=function(T){var x=Object.values(this.plugins);x.unshift(this);for(var I=[],L=0;L<x.length;L++)I.push(T(x[L]));return Promise.all(I)},ae.prototype.getDependency=function(T,x){var I=T+":"+x,L=this.cache.get(I);if(!L){switch(T){case"scene":L=this.loadScene(x);break;case"node":L=this.loadNode(x);break;case"mesh":L=this._invokeOne(function(D){return D.loadMesh&&D.loadMesh(x)});break;case"accessor":L=this.loadAccessor(x);break;case"bufferView":L=this._invokeOne(function(D){return D.loadBufferView&&D.loadBufferView(x)});break;case"buffer":L=this.loadBuffer(x);break;case"material":L=this._invokeOne(function(D){return D.loadMaterial&&D.loadMaterial(x)});break;case"texture":L=this._invokeOne(function(D){return D.loadTexture&&D.loadTexture(x)});break;case"skin":L=this.loadSkin(x);break;case"animation":L=this.loadAnimation(x);break;case"camera":L=this.loadCamera(x);break;case"light":L=this.extensions[n.KHR_LIGHTS_PUNCTUAL].loadLight(x);break;default:throw new Error("Unknown type: "+T)}this.cache.add(I,L)}return L},ae.prototype.getDependencies=function(T){var x=this.cache.get(T);if(!x){var I=this,L=this.json[T+(T==="mesh"?"es":"s")]||[];x=Promise.all(L.map(function(D,O){return I.getDependency(T,O)})),this.cache.add(T,x)}return x},ae.prototype.loadBuffer=function(T){var x=this.json.buffers[T],I=this.fileLoader;if(x.type&&x.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+x.type+" buffer type is not supported.");if(x.uri===void 0&&T===0)return Promise.resolve(this.extensions[n.KHR_BINARY_GLTF].body);var L=this.options;return new Promise(function(D,O){I.load(q(x.uri,L.path),D,void 0,function(){O(new Error('THREE.GLTFLoader: Failed to load buffer "'+x.uri+'".'))})})},ae.prototype.loadBufferView=function(T){var x=this.json.bufferViews[T];return this.getDependency("buffer",x.buffer).then(function(I){var L=x.byteLength||0,D=x.byteOffset||0;return I.slice(D,D+L)})},ae.prototype.loadAccessor=function(T){var x=this,I=this.json,L=this.json.accessors[T];if(L.bufferView===void 0&&L.sparse===void 0)return Promise.resolve(null);var D=[];return L.bufferView!==void 0?D.push(this.getDependency("bufferView",L.bufferView)):D.push(null),L.sparse!==void 0&&(D.push(this.getDependency("bufferView",L.sparse.indices.bufferView)),D.push(this.getDependency("bufferView",L.sparse.values.bufferView))),Promise.all(D).then(function(O){var B=O[0],P=C[L.type],U=E[L.componentType],k=U.BYTES_PER_ELEMENT,X=k*P,V=L.byteOffset||0,ee=L.bufferView!==void 0?I.bufferViews[L.bufferView].byteStride:void 0,w=L.normalized===!0,S,Q;if(ee&&ee!==X){var J=Math.floor(V/ee),F="InterleavedBuffer:"+L.bufferView+":"+L.componentType+":"+J+":"+L.count,ie=x.cache.get(F);ie||(S=new U(B,J*ee,L.count*ee/k),ie=new bt(S,ee/k),x.cache.add(F,ie)),Q=new un(ie,P,V%ee/k,w)}else B===null?S=new U(L.count*P):S=new U(B,V,L.count*P),Q=new Me(S,P,w);if(L.sparse!==void 0){var oe=C.SCALAR,xe=E[L.sparse.indices.componentType],ce=L.sparse.indices.byteOffset||0,pe=L.sparse.values.byteOffset||0,me=new xe(O[1],ce,L.sparse.count*oe),Te=new U(O[2],pe,L.sparse.count*P);B!==null&&(Q=new Me(Q.array.slice(),Q.itemSize,Q.normalized));for(var le=0,_e=me.length;le<_e;le++){var Be=me[le];if(Q.setX(Be,Te[le*P]),P>=2&&Q.setY(Be,Te[le*P+1]),P>=3&&Q.setZ(Be,Te[le*P+2]),P>=4&&Q.setW(Be,Te[le*P+3]),P>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}}return Q})},ae.prototype.loadTexture=function(T){var x=this,I=this.json,L=this.options,D=I.textures[T],O=D.extensions||{},B;O[n.MSFT_TEXTURE_DDS]?B=I.images[O[n.MSFT_TEXTURE_DDS].source]:B=I.images[D.source];var P;return B.uri&&(P=L.manager.getHandler(B.uri)),P||(P=O[n.MSFT_TEXTURE_DDS]?x.extensions[n.MSFT_TEXTURE_DDS].ddsLoader:this.textureLoader),this.loadTextureImage(T,B,P)},ae.prototype.loadTextureImage=function(T,x,I){var L=this,D=this.json,O=this.options,B=D.textures[T],P=self.URL||self.webkitURL,U=x.uri,k=!1,X=!0;return x.mimeType==="image/jpeg"&&(X=!1),x.bufferView!==void 0&&(U=L.getDependency("bufferView",x.bufferView).then(function(V){x.mimeType==="image/png"&&(X=new DataView(V,25,1).getUint8(0,!1)===6),k=!0;var ee=new Blob([V],{type:x.mimeType});return U=P.createObjectURL(ee),U})),Promise.resolve(U).then(function(V){return new Promise(function(ee,w){var S=ee;I.isImageBitmapLoader===!0&&(S=function(Q){ee(new Hi(Q))}),I.load(q(V,O.path),S,void 0,w)})}).then(function(V){k===!0&&P.revokeObjectURL(U),V.flipY=!1,B.name&&(V.name=B.name),X||(V.format=tn);var ee=D.samplers||{},w=ee[B.sampler]||{};return V.magFilter=A[w.magFilter]||Ze,V.minFilter=A[w.minFilter]||bn,V.wrapS=b[w.wrapS]||xn,V.wrapT=b[w.wrapT]||xn,L.associations.set(V,{type:"textures",index:T}),V})},ae.prototype.assignTexture=function(T,x,I){var L=this;return this.getDependency("texture",I.index).then(function(D){if(I.texCoord!==void 0&&I.texCoord!=0&&!(x==="aoMap"&&I.texCoord==1)&&console.warn("THREE.GLTFLoader: Custom UV set "+I.texCoord+" for texture "+x+" not yet supported."),L.extensions[n.KHR_TEXTURE_TRANSFORM]){var O=I.extensions!==void 0?I.extensions[n.KHR_TEXTURE_TRANSFORM]:void 0;if(O){var B=L.associations.get(D);D=L.extensions[n.KHR_TEXTURE_TRANSFORM].extendTexture(D,O),L.associations.set(D,B)}}T[x]=D})},ae.prototype.assignFinalMaterial=function(T){var x=T.geometry,I=T.material,L=x.attributes.tangent!==void 0,D=x.attributes.color!==void 0,O=x.attributes.normal===void 0,B=T.isSkinnedMesh===!0,P=Object.keys(x.morphAttributes).length>0,U=P&&x.morphAttributes.normal!==void 0;if(T.isPoints){var k="PointsMaterial:"+I.uuid,X=this.cache.get(k);X||(X=new dn(),we.prototype.copy.call(X,I),X.color.copy(I.color),X.map=I.map,X.sizeAttenuation=!1,this.cache.add(k,X)),I=X}else if(T.isLine){var k="LineBasicMaterial:"+I.uuid,V=this.cache.get(k);V||(V=new _t(),we.prototype.copy.call(V,I),V.color.copy(I.color),this.cache.add(k,V)),I=V}if(L||D||O||B||P){var k="ClonedMaterial:"+I.uuid+":";I.isGLTFSpecularGlossinessMaterial&&(k+="specular-glossiness:"),B&&(k+="skinning:"),L&&(k+="vertex-tangents:"),D&&(k+="vertex-colors:"),O&&(k+="flat-shading:"),P&&(k+="morph-targets:"),U&&(k+="morph-normals:");var ee=this.cache.get(k);ee||(ee=I.clone(),B&&(ee.skinning=!0),L&&(ee.vertexTangents=!0),D&&(ee.vertexColors=!0),O&&(ee.flatShading=!0),P&&(ee.morphTargets=!0),U&&(ee.morphNormals=!0),this.cache.add(k,ee),this.associations.set(ee,this.associations.get(I))),I=ee}I.aoMap&&x.attributes.uv2===void 0&&x.attributes.uv!==void 0&&x.setAttribute("uv2",x.attributes.uv),I.normalScale&&!L&&(I.normalScale.y=-I.normalScale.y),I.clearcoatNormalScale&&!L&&(I.clearcoatNormalScale.y=-I.clearcoatNormalScale.y),T.material=I},ae.prototype.getMaterialType=function(){return pt},ae.prototype.loadMaterial=function(T){var x=this,I=this.json,L=this.extensions,D=I.materials[T],O,B={},P=D.extensions||{},U=[];if(P[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var k=L[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];O=k.getMaterialType(),U.push(k.extendParams(B,D,x))}else if(P[n.KHR_MATERIALS_UNLIT]){var X=L[n.KHR_MATERIALS_UNLIT];O=X.getMaterialType(),U.push(X.extendParams(B,D,x))}else{var V=D.pbrMetallicRoughness||{};if(B.color=new fe(1,1,1),B.opacity=1,Array.isArray(V.baseColorFactor)){var ee=V.baseColorFactor;B.color.fromArray(ee),B.opacity=ee[3]}V.baseColorTexture!==void 0&&U.push(x.assignTexture(B,"map",V.baseColorTexture)),B.metalness=V.metallicFactor!==void 0?V.metallicFactor:1,B.roughness=V.roughnessFactor!==void 0?V.roughnessFactor:1,V.metallicRoughnessTexture!==void 0&&(U.push(x.assignTexture(B,"metalnessMap",V.metallicRoughnessTexture)),U.push(x.assignTexture(B,"roughnessMap",V.metallicRoughnessTexture))),O=this._invokeOne(function(S){return S.getMaterialType&&S.getMaterialType(T)}),U.push(this._invokeAll(function(S){return S.extendMaterialParams&&S.extendMaterialParams(T,B)}))}D.doubleSided===!0&&(B.side=ai);var w=D.alphaMode||z.OPAQUE;return w===z.BLEND?(B.transparent=!0,B.depthWrite=!1):(B.transparent=!1,w===z.MASK&&(B.alphaTest=D.alphaCutoff!==void 0?D.alphaCutoff:.5)),D.normalTexture!==void 0&&O!==$e&&(U.push(x.assignTexture(B,"normalMap",D.normalTexture)),B.normalScale=new $(1,1),D.normalTexture.scale!==void 0&&B.normalScale.set(D.normalTexture.scale,D.normalTexture.scale)),D.occlusionTexture!==void 0&&O!==$e&&(U.push(x.assignTexture(B,"aoMap",D.occlusionTexture)),D.occlusionTexture.strength!==void 0&&(B.aoMapIntensity=D.occlusionTexture.strength)),D.emissiveFactor!==void 0&&O!==$e&&(B.emissive=new fe().fromArray(D.emissiveFactor)),D.emissiveTexture!==void 0&&O!==$e&&U.push(x.assignTexture(B,"emissiveMap",D.emissiveTexture)),Promise.all(U).then(function(){var S;return O===y?S=L[n.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(B):S=new O(B),D.name&&(S.name=D.name),S.map&&(S.map.encoding=mi),S.emissiveMap&&(S.emissiveMap.encoding=mi),G(S,D),x.associations.set(S,{type:"materials",index:T}),D.extensions&&H(L,S,D),S})};function ve(T,x,I){var L=x.attributes,D=new Gt();if(L.POSITION!==void 0){var O=I.json.accessors[L.POSITION],B=O.min,P=O.max;if(B!==void 0&&P!==void 0)D.set(new M(B[0],B[1],B[2]),new M(P[0],P[1],P[2]));else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;var U=x.targets;if(U!==void 0){for(var k=new M(),X=new M(),V=0,ee=U.length;V<ee;V++){var w=U[V];if(w.POSITION!==void 0){var O=I.json.accessors[w.POSITION],B=O.min,P=O.max;B!==void 0&&P!==void 0?(X.setX(Math.max(Math.abs(B[0]),Math.abs(P[0]))),X.setY(Math.max(Math.abs(B[1]),Math.abs(P[1]))),X.setZ(Math.max(Math.abs(B[2]),Math.abs(P[2]))),k.max(X)):console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}D.expandByVector(k)}T.boundingBox=D;var S=new Wt();D.getCenter(S.center),S.radius=D.min.distanceTo(D.max)/2,T.boundingSphere=S}function Ce(T,x,I){var L=x.attributes,D=[];function O(k,X){return I.getDependency("accessor",k).then(function(V){T.setAttribute(X,V)})}for(var B in L){var P=j[B]||B.toLowerCase();if(P in T.attributes)continue;D.push(O(L[B],P))}if(x.indices!==void 0&&!T.index){var U=I.getDependency("accessor",x.indices).then(function(k){T.setIndex(k)});D.push(U)}return G(T,x),ve(T,x,I),Promise.all(D).then(function(){return x.targets!==void 0?K(T,x.targets,I):T})}function Ae(T,x){var I=T.getIndex();if(I===null){var L=[],D=T.getAttribute("position");if(D!==void 0){for(var O=0;O<D.count;O++)L.push(O);T.setIndex(L),I=T.getIndex()}else return console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),T}var B=I.count-2,P=[];if(x===To)for(var O=1;O<=B;O++)P.push(I.getX(0)),P.push(I.getX(O)),P.push(I.getX(O+1));else for(var O=0;O<B;O++)O%2===0?(P.push(I.getX(O)),P.push(I.getX(O+1)),P.push(I.getX(O+2))):(P.push(I.getX(O+2)),P.push(I.getX(O+1)),P.push(I.getX(O)));P.length/3!==B&&console.error("THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");var U=T.clone();return U.setIndex(P),U}return ae.prototype.loadGeometries=function(T){var x=this,I=this.extensions,L=this.primitiveCache;function D(ee){return I[n.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(ee,x).then(function(w){return Ce(w,ee,x)})}for(var O=[],B=0,P=T.length;B<P;B++){var U=T[B],k=se(U),X=L[k];if(X)O.push(X.promise);else{var V;U.extensions&&U.extensions[n.KHR_DRACO_MESH_COMPRESSION]?V=D(U):V=Ce(new Se(),U,x),L[k]={primitive:U,promise:V},O.push(V)}}return Promise.all(O)},ae.prototype.loadMesh=function(T){for(var x=this,I=this.json,L=I.meshes[T],D=L.primitives,O=[],B=0,P=D.length;B<P;B++){var U=D[B].material===void 0?W(this.cache):this.getDependency("material",D[B].material);O.push(U)}return O.push(x.loadGeometries(D)),Promise.all(O).then(function(k){for(var X=k.slice(0,k.length-1),V=k[k.length-1],ee=[],w=0,S=V.length;w<S;w++){var Q=V[w],J=D[w],F,ie=X[w];if(J.mode===_.TRIANGLES||J.mode===_.TRIANGLE_STRIP||J.mode===_.TRIANGLE_FAN||J.mode===void 0)F=L.isSkinnedMesh===!0?new Rr(Q,ie):new qe(Q,ie),F.isSkinnedMesh===!0&&!F.geometry.attributes.skinWeight.normalized&&F.normalizeSkinWeights(),J.mode===_.TRIANGLE_STRIP?F.geometry=Ae(F.geometry,lc):J.mode===_.TRIANGLE_FAN&&(F.geometry=Ae(F.geometry,To));else if(J.mode===_.LINES)F=new Xn(Q,ie);else if(J.mode===_.LINE_STRIP)F=new hn(Q,ie);else if(J.mode===_.LINE_LOOP)F=new Ir(Q,ie);else if(J.mode===_.POINTS)F=new Dr(Q,ie);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+J.mode);Object.keys(F.geometry.morphAttributes).length>0&&re(F,L),F.name=L.name||"mesh_"+T,V.length>1&&(F.name+="_"+w),G(F,L),x.assignFinalMaterial(F),ee.push(F)}if(ee.length===1)return ee[0];for(var oe=new At(),w=0,S=ee.length;w<S;w++)oe.add(ee[w]);return oe})},ae.prototype.loadCamera=function(T){var x,I=this.json.cameras[T],L=I[I.type];if(!L){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return I.type==="perspective"?x=new Je(Ee.radToDeg(L.yfov),L.aspectRatio||1,L.znear||1,L.zfar||2e6):I.type==="orthographic"&&(x=new Qn(-L.xmag,L.xmag,L.ymag,-L.ymag,L.znear,L.zfar)),I.name&&(x.name=I.name),G(x,I),Promise.resolve(x)},ae.prototype.loadSkin=function(T){var x=this.json.skins[T],I={joints:x.joints};return x.inverseBindMatrices===void 0?Promise.resolve(I):this.getDependency("accessor",x.inverseBindMatrices).then(function(L){return I.inverseBindMatrices=L,I})},ae.prototype.loadAnimation=function(T){for(var x=this.json,I=x.animations[T],L=[],D=[],O=[],B=[],P=[],U=0,k=I.channels.length;U<k;U++){var X=I.channels[U],V=I.samplers[X.sampler],ee=X.target,w=ee.node!==void 0?ee.node:ee.id,S=I.parameters!==void 0?I.parameters[V.input]:V.input,Q=I.parameters!==void 0?I.parameters[V.output]:V.output;L.push(this.getDependency("node",w)),D.push(this.getDependency("accessor",S)),O.push(this.getDependency("accessor",Q)),B.push(V),P.push(ee)}return Promise.all([Promise.all(L),Promise.all(D),Promise.all(O),Promise.all(B),Promise.all(P)]).then(function(J){for(var F=J[0],ie=J[1],oe=J[2],xe=J[3],ce=J[4],pe=[],me=0,Te=F.length;me<Te;me++){var le=F[me],_e=ie[me],Be=oe[me],et=xe[me],ni=ce[me];if(le===void 0)continue;le.updateMatrix(),le.matrixAutoUpdate=!0;var ii;switch(N[ni.path]){case N.weights:ii=Zn;break;case N.rotation:ii=Zi;break;case N.position:case N.scale:default:ii=Jn;break}var Jr=le.name?le.name:le.uuid,uo=et.interpolation!==void 0?ne[et.interpolation]:Gn,vn=[];N[ni.path]===N.weights?le.traverse(function(yn){yn.isMesh===!0&&yn.morphTargetInfluences&&vn.push(yn.name?yn.name:yn.uuid)}):vn.push(Jr);var It=Be.array;if(Be.normalized){var Dt;if(It.constructor===Int8Array)Dt=1/127;else if(It.constructor===Uint8Array)Dt=1/255;else if(It.constructor==Int16Array)Dt=1/32767;else if(It.constructor===Uint16Array)Dt=1/65535;else throw new Error("THREE.GLTFLoader: Unsupported output accessor component type.");for(var $i=new Float32Array(It.length),Ot=0,ri=It.length;Ot<ri;Ot++)$i[Ot]=It[Ot]*Dt;It=$i}for(var Ot=0,ri=vn.length;Ot<ri;Ot++){var Mt=new ii(vn[Ot]+"."+N[ni.path],_e.array,It,uo);et.interpolation==="CUBICSPLINE"&&(Mt.createInterpolant=function(ho){return new p(this.times,this.values,this.getValueSize()/3,ho)},Mt.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0),pe.push(Mt)}}var Kr=I.name?I.name:"animation_"+T;return new Lt(Kr,void 0,pe)})},ae.prototype.loadNode=function(T){var x=this.json,I=this.extensions,L=this,D=x.nodes[T];return function(){var O=[];if(D.mesh!==void 0&&O.push(L.getDependency("mesh",D.mesh).then(function(P){var U=L._getNodeRef(L.meshCache,D.mesh,P);return D.weights!==void 0&&U.traverse(function(k){if(!k.isMesh)return;for(var X=0,V=D.weights.length;X<V;X++)k.morphTargetInfluences[X]=D.weights[X]}),U})),D.camera!==void 0&&O.push(L.getDependency("camera",D.camera).then(function(P){return L._getNodeRef(L.cameraCache,D.camera,P)})),D.extensions&&D.extensions[n.KHR_LIGHTS_PUNCTUAL]&&D.extensions[n.KHR_LIGHTS_PUNCTUAL].light!==void 0){var B=D.extensions[n.KHR_LIGHTS_PUNCTUAL].light;O.push(L.getDependency("light",B).then(function(P){return L._getNodeRef(L.lightCache,B,P)}))}return Promise.all(O)}().then(function(O){var B;if(D.isBone===!0?B=new Fs():O.length>1?B=new At():O.length===1?B=O[0]:B=new ge(),B!==O[0])for(var P=0,U=O.length;P<U;P++)B.add(O[P]);if(D.name&&(B.userData.name=D.name,B.name=ct.sanitizeNodeName(D.name)),G(B,D),D.extensions&&H(I,B,D),D.matrix!==void 0){var k=new Re();k.fromArray(D.matrix),B.applyMatrix4(k)}else D.translation!==void 0&&B.position.fromArray(D.translation),D.rotation!==void 0&&B.quaternion.fromArray(D.rotation),D.scale!==void 0&&B.scale.fromArray(D.scale);return L.associations.set(B,{type:"nodes",index:T}),B})},ae.prototype.loadScene=function(){function T(x,I,L,D){var O=L.nodes[x];return D.getDependency("node",x).then(function(B){if(O.skin===void 0)return B;var P;return D.getDependency("skin",O.skin).then(function(U){P=U;for(var k=[],X=0,V=P.joints.length;X<V;X++)k.push(D.getDependency("node",P.joints[X]));return Promise.all(k)}).then(function(U){return B.traverse(function(k){if(!k.isMesh)return;for(var X=[],V=[],ee=0,w=U.length;ee<w;ee++){var S=U[ee];if(S){X.push(S);var Q=new Re();P.inverseBindMatrices!==void 0&&Q.fromArray(P.inverseBindMatrices.array,ee*16),V.push(Q)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',P.joints[ee])}k.bind(new Cr(X,V),k.matrixWorld)}),B})}).then(function(B){I.add(B);var P=[];if(O.children)for(var U=O.children,k=0,X=U.length;k<X;k++){var V=U[k];P.push(T(V,B,L,D))}return Promise.all(P)})}return function(I){var L=this.json,D=this.extensions,O=this.json.scenes[I],B=this,P=new At();O.name&&(P.name=O.name),G(P,O),O.extensions&&H(D,P,O);for(var U=O.nodes||[],k=[],X=0,V=U.length;X<V;X++)k.push(T(U[X],P,L,B));return Promise.all(k).then(function(){return P})}}(),e}();var wt=function(e){Ne.call(this,e),this.decoderPath="",this.decoderConfig={},this.decoderBinary=null,this.decoderPending=null,this.workerLimit=4,this.workerPool=[],this.workerNextTaskID=1,this.workerSourceURL="",this.defaultAttributeIDs={position:"POSITION",normal:"NORMAL",color:"COLOR",uv:"TEX_COORD"},this.defaultAttributeTypes={position:"Float32Array",normal:"Float32Array",color:"Float32Array",uv:"Float32Array"}};wt.prototype=Object.assign(Object.create(Ne.prototype),{constructor:wt,setDecoderPath:function(e){return this.decoderPath=e,this},setDecoderConfig:function(e){return this.decoderConfig=e,this},setWorkerLimit:function(e){return this.workerLimit=e,this},setVerbosity:function(){console.warn("THREE.DRACOLoader: The .setVerbosity() method has been removed.")},setDrawMode:function(){console.warn("THREE.DRACOLoader: The .setDrawMode() method has been removed.")},setSkipDequantization:function(){console.warn("THREE.DRACOLoader: The .setSkipDequantization() method has been removed.")},load:function(e,t,n,i){var r=new ht(this.manager);r.setPath(this.path),r.setResponseType("arraybuffer"),r.setRequestHeader(this.requestHeader),this.crossOrigin==="use-credentials"&&r.setWithCredentials(!0),r.load(e,s=>{var o={attributeIDs:this.defaultAttributeIDs,attributeTypes:this.defaultAttributeTypes,useUniqueIDs:!1};this.decodeGeometry(s,o).then(t).catch(i)},n,i)},decodeDracoFile:function(e,t,n,i){var r={attributeIDs:n||this.defaultAttributeIDs,attributeTypes:i||this.defaultAttributeTypes,useUniqueIDs:!!n};this.decodeGeometry(e,r).then(t)},decodeGeometry:function(e,t){for(var n in t.attributeTypes){var i=t.attributeTypes[n];i.BYTES_PER_ELEMENT!==void 0&&(t.attributeTypes[n]=i.name)}var r=JSON.stringify(t);if(wt.taskCache.has(e)){var s=wt.taskCache.get(e);if(s.key===r)return s.promise;if(e.byteLength===0)throw new Error("THREE.DRACOLoader: Unable to re-decode a buffer with different settings. Buffer has already been transferred.")}var o,a=this.workerNextTaskID++,c=e.byteLength,l=this._getWorker(a,c).then(h=>(o=h,new Promise((u,f)=>{o._callbacks[a]={resolve:u,reject:f},o.postMessage({type:"decode",id:a,taskConfig:t,buffer:e},[e])}))).then(h=>this._createGeometry(h.geometry));return l.catch(()=>!0).then(()=>{o&&a&&this._releaseTask(o,a)}),wt.taskCache.set(e,{key:r,promise:l}),l},_createGeometry:function(e){var t=new Se();e.index&&t.setIndex(new Me(e.index.array,1));for(var n=0;n<e.attributes.length;n++){var i=e.attributes[n],r=i.name,s=i.array,o=i.itemSize;t.setAttribute(r,new Me(s,o))}return t},_loadLibrary:function(e,t){var n=new ht(this.manager);return n.setPath(this.decoderPath),n.setResponseType(t),new Promise((i,r)=>{n.load(e,i,void 0,r)})},preload:function(){return this._initDecoder(),this},_initDecoder:function(){if(this.decoderPending)return this.decoderPending;var e=typeof WebAssembly!="object"||this.decoderConfig.type==="js",t=[];return e?t.push(this._loadLibrary("draco_decoder.js","text")):(t.push(this._loadLibrary("draco_wasm_wrapper.js","text")),t.push(this._loadLibrary("draco_decoder.wasm","arraybuffer"))),this.decoderPending=Promise.all(t).then(n=>{var i=n[0];e||(this.decoderConfig.wasmBinary=n[1]);var r=wt.DRACOWorker.toString(),s=["/* draco decoder */",i,"","/* worker */",r.substring(r.indexOf("{")+1,r.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([s]))}),this.decoderPending},_getWorker:function(e,t){return this._initDecoder().then(()=>{if(this.workerPool.length<this.workerLimit){var n=new Worker(this.workerSourceURL);n._callbacks={},n._taskCosts={},n._taskLoad=0,n.postMessage({type:"init",decoderConfig:this.decoderConfig}),n.onmessage=function(i){var r=i.data;switch(r.type){case"decode":n._callbacks[r.id].resolve(r);break;case"error":n._callbacks[r.id].reject(r);break;default:console.error('THREE.DRACOLoader: Unexpected message, "'+r.type+'"')}},this.workerPool.push(n)}else this.workerPool.sort(function(i,r){return i._taskLoad>r._taskLoad?-1:1});var n=this.workerPool[this.workerPool.length-1];return n._taskCosts[e]=t,n._taskLoad+=t,n})},_releaseTask:function(e,t){e._taskLoad-=e._taskCosts[t],delete e._callbacks[t],delete e._taskCosts[t]},debug:function(){console.log("Task load: ",this.workerPool.map(e=>e._taskLoad))},dispose:function(){for(var e=0;e<this.workerPool.length;++e)this.workerPool[e].terminate();return this.workerPool.length=0,this}});wt.DRACOWorker=function(){var e,t;onmessage=function(r){var s=r.data;switch(s.type){case"init":e=s.decoderConfig,t=new Promise(function(c){e.onModuleLoaded=function(l){c({draco:l})},DracoDecoderModule(e)});break;case"decode":var o=s.buffer,a=s.taskConfig;t.then(c=>{var l=c.draco,h=new l.Decoder(),u=new l.DecoderBuffer();u.Init(new Int8Array(o),o.byteLength);try{var f=n(l,h,u,a),d=f.attributes.map(m=>m.array.buffer);f.index&&d.push(f.index.array.buffer),self.postMessage({type:"decode",id:s.id,geometry:f},d)}catch(m){console.error(m),self.postMessage({type:"error",id:s.id,error:m.message})}finally{l.destroy(u),l.destroy(h)}});break}};function n(r,s,o,a){var c=a.attributeIDs,l=a.attributeTypes,h,u,f=s.GetEncodedGeometryType(o);if(f===r.TRIANGULAR_MESH)h=new r.Mesh(),u=s.DecodeBufferToMesh(o,h);else if(f===r.POINT_CLOUD)h=new r.PointCloud(),u=s.DecodeBufferToPointCloud(o,h);else throw new Error("THREE.DRACOLoader: Unexpected geometry type.");if(!u.ok()||h.ptr===0)throw new Error("THREE.DRACOLoader: Decoding failed: "+u.error_msg());var d={index:null,attributes:[]};for(var m in c){var y=self[l[m]],v,g;if(a.useUniqueIDs)g=c[m],v=s.GetAttributeByUniqueId(h,g);else{if(g=s.GetAttributeId(h,r[c[m]]),g===-1)continue;v=s.GetAttribute(h,g)}d.attributes.push(i(r,s,h,m,y,v))}if(f===r.TRIANGULAR_MESH){for(var p=h.num_faces(),_=p*3,E=new Uint32Array(_),A=new r.DracoInt32Array(),b=0;b<p;++b){s.GetFaceFromMesh(h,b,A);for(var C=0;C<3;++C)E[b*3+C]=A.GetValue(C)}d.index={array:E,itemSize:1},r.destroy(A)}return r.destroy(h),d}function i(r,s,o,a,c,l){var h=l.num_components(),u=o.num_points(),f=u*h,d,m;switch(c){case Float32Array:d=new r.DracoFloat32Array(),s.GetAttributeFloatForAllPoints(o,l,d),m=new Float32Array(f);break;case Int8Array:d=new r.DracoInt8Array(),s.GetAttributeInt8ForAllPoints(o,l,d),m=new Int8Array(f);break;case Int16Array:d=new r.DracoInt16Array(),s.GetAttributeInt16ForAllPoints(o,l,d),m=new Int16Array(f);break;case Int32Array:d=new r.DracoInt32Array(),s.GetAttributeInt32ForAllPoints(o,l,d),m=new Int32Array(f);break;case Uint8Array:d=new r.DracoUInt8Array(),s.GetAttributeUInt8ForAllPoints(o,l,d),m=new Uint8Array(f);break;case Uint16Array:d=new r.DracoUInt16Array(),s.GetAttributeUInt16ForAllPoints(o,l,d),m=new Uint16Array(f);break;case Uint32Array:d=new r.DracoUInt32Array(),s.GetAttributeUInt32ForAllPoints(o,l,d),m=new Uint32Array(f);break;default:throw new Error("THREE.DRACOLoader: Unexpected attribute type.")}for(var y=0;y<f;y++)m[y]=d.GetValue(y);return r.destroy(d),{name:a,array:m,itemSize:h}}};wt.taskCache=new WeakMap();wt.setDecoderPath=function(){console.warn("THREE.DRACOLoader: The .setDecoderPath() method has been removed. Use instance methods.")};wt.setDecoderConfig=function(){console.warn("THREE.DRACOLoader: The .setDecoderConfig() method has been removed. Use instance methods.")};wt.releaseDecoderModule=function(){console.warn("THREE.DRACOLoader: The .releaseDecoderModule() method has been removed. Use instance methods.")};wt.getDecoderModule=function(){console.warn("THREE.DRACOLoader: The .getDecoderModule() method has been removed. Use instance methods.")};class Na{static addToClassList(e,t){for(let n=0;n<e.length;++n)e[n].classList.add(t)}static removeFromClassList(e,t){for(let n=0;n<e.length;++n)e[n].classList.remove(t)}static addListenerToHTMLElements(e,t,n){for(let i=0;i<e.length;++i)e[i].addEventListener(t,n)}static removeListenerFromHTMLElements(e,t,n){for(let i=0;i<e.length;++i)e[i].removeEventListener(t,n)}static addStyleToHTMLElements(e,t,n){for(let i=0;i<e.length;++i)e[i].style[t]=n}static clearElement(e){for(;e.firstChild;)e.removeChild(e.firstChild)}static removeElement(e){Na.clearElement(e),e.parentElement.removeChild(e)}static hideElement(e){e.style.display="none"}static showElement(e,t=!1){e.style.display=t?"block":""}static isElementChildOfElement(e,t){return t.contains(e)}static disableElement(e){e.classList.add("disabledPointerActions")}static enableElement(e){e.classList.remove("disabledPointerActions")}}class lo{constructor(e,t){this.activate=()=>{this._canvas.addEventListener("mousemove",this.handleMouseMove),this._canvas.addEventListener("mousedown",this.handleMouseDown),this._canvas.addEventListener("mouseup",this.handleMouseRelease),this._canvas.addEventListener("touchmove",this.handleTouchMove),this._canvas.addEventListener("touchstart",this.handleTouchStart)};this.deactivate=()=>{this._canvas.removeEventListener("mousemove",this.handleMouseMove),this._canvas.removeEventListener("mousedown",this.handleMouseDown),this._canvas.removeEventListener("mouseup",this.handleMouseRelease),this._canvas.removeEventListener("touchmove",this.handleTouchMove),this._canvas.removeEventListener("touchstart",this.handleTouchStart)};this.handleMouseMove=e=>{this.pointerMove(e.pageX,e.pageY)};this.handleTouchMove=e=>{const t=e.changedTouches[0];this.pointerMove(t.pageX,t.pageY)};this.pointerMove=(e,t)=>{this._mouseMoved=e!==this._pointer.prevX||t!==this._pointer.prevY;const n=this._canvas.getBoundingClientRect();this._mouse.x=(e-n.left)/n.width*2-1,this._mouse.y=-((t-n.top)/n.height)*2+1,this._raycaster.setFromCamera(this._mouse,this._camera);const i=this._raycaster.intersectObject(this._object,!0);i.length>0?(this._canvas.classList.add("clickableObjectIntersected"),this._currentlyHovered=!0):(this._canvas.classList.remove("clickableObjectIntersected"),this._currentlyHovered=!1),this._pointer.prevX=e,this._pointer.prevY=t};this.handleMouseDown=e=>{this.pointerDown(e.pageX,e.pageY)};this.handleTouchStart=e=>{const t=e.changedTouches[0];this.pointerDown(t.pageX,t.pageY)};this.pointerDown=(e,t)=>{const n=this._canvas.getBoundingClientRect();this._pointer.prevX=e,this._pointer.prevY=t,this._mouseMoved=!1,this._mouse.x=(e-n.left)/n.width*2-1,this._mouse.y=-((t-n.top)/n.height)*2+1,this._raycaster.setFromCamera(this._mouse,this._camera);const i=this._raycaster.intersectObject(this._object,!0);i.length>0&&(this._currentlyHovered=!0)};this.handleMouseRelease=e=>{this.pointerUp(e.pageX,e.pageY)};this.pointerUp=(e,t)=>{!this._mouseMoved&&this._currentlyHovered&&this._eventDispatcher.dispatchEvent({type:"click"})};this._object=t,this._canvas=e.canvas,this._camera=e.camera,this._raycaster=new Ki(),this._mouse=new $(0,0),this._pointer={prevX:null,prevY:null},this._mouseMoved=!0,this._currentlyHovered=!1,this._eventDispatcher=new Nt(),this.activate()}get eventDispatcher(){return this._eventDispatcher}}class pu{constructor(e,t,n,i=!1,r=!1){this.togglePlay=()=>{this._videoElement.paused?this.play():this.pause()};this.play=()=>{this._videoElement.play()};this.pause=()=>{this._videoElement.pause()};this.activate=()=>{this._clickableObject.activate()};this.deactivate=()=>{this._clickableObject.deactivate()};this.update=()=>{const e=new M().copy(this._position).distanceTo(this._sceneManager.camera.position);this._videoElement.volume=Math.min(2/e,1)};this._object=t,this._sceneManager=e,this._videoElement=document.createElement("video"),this._videoElement.title="Click to play / pause",this._videoElement.src=n;const s=new Vs(this._videoElement);s.minFilter=Ze,t.material.map=s,t.material.needsUpdate=!0,this._videoElement.autoplay=i,this._videoElement.loop=r,this._videoElement.setAttribute("webkit-playsinline","true"),this._videoElement.setAttribute("playsinline","true"),enableInlineVideo(this._videoElement),this.init()}init(){this._clickableObject=new lo(this._sceneManager,this._object),this._clickableObject.eventDispatcher.addEventListener("click",this.togglePlay),this._object.geometry.computeBoundingBox();const e=this._object.geometry.boundingBox;this._position=new M(),this._position.subVectors(e.max,e.min),this._position.multiplyScalar(.5),this._position.add(e.min),this._position.applyMatrix4(this._object.matrixWorld)}}class mu{constructor(e,t){this.initSkyBox=e=>{this._sceneManager.scene.background=this.loadCubeTexture(e)};this.initMirrorMap=e=>{this._mirrorMap=this.loadCubeTexture(e)};this.loadCubeTexture=e=>{const t=new kr();t.setPath(e);const n=t.load(["px.jpg","nx.jpg","py.jpg","ny.jpg","pz.jpg","nz.jpg"]);return n};this.loadTutorialScreen=()=>{};this.removeTutorialScreen=()=>{};this.onProgress=e=>{const t=e.loaded/e.total;this._percentage.reset(t*95,t*100)};this.onLoad=e=>{const t=e.scene,n=new $e({color:16777215,transparent:!0,opacity:0,depthWrite:!1,depthTest:!1});return t.traverse(i=>{if(i instanceof qe){const r=i.material,s=i.geometry;let o=i.parent.name==="Transparent_doors";if(i.parent.parent&&(o=o||i.parent.parent.name==="Transparent_doors"),i.name.indexOf("Arrow")!==-1){const a=i.material.map;a&&(a.wrapS=a.wrapT=nt,i.material=new $e({map:a,alphaMap:a,transparent:!0}))}else i.parent.name==="Movement_helpers"?i.material=n:o&&(i.material=r.clone(),i.material.transparent=!0);i.material instanceof $e||(i.material.envMap=this._mirrorMap,i.material.envMapIntensity=.75)}else i.name==="Intersectables"&&(this._intersectables=i)}),this._sceneManagerContainer.add(t),t};this.saveCurveDataIntoObject=e=>{const t=e.geometry.attributes.position,n=[];for(let i=0;i<t.array.length;i+=3)n.push(new M(t.array[i],t.array[i+1],t.array[i+2]));return n.sort((i,r)=>Math.sign(i.y-r.y)),new at(n)};this.update=()=>{if(!this._isLoadFinished){this._percentage.update();const e=Math.round(this._percentage.start);document.getElementById("loadingBar").style.width=e+"%",document.getElementById("loadingPercent").textContent=e.toFixed(0);const t=document.getElementById("welcomeText").children,n=100/t.length;for(let i=0;i<t.length;++i)e>=i*n&&t[i].classList.remove("hidden")}};this._sceneManager=e,this._user=e.user,this._camera=e.camera,this._renderer=e.renderer,this._url=t,this._sceneManagerContainer=new ge(),this._sceneManagerContainer.name="sceneContainer",this._sceneManager.container.add(this._sceneManagerContainer),this._percentage=new gn(0,0,0,100,.008),this._isLoadFinished=!1}async init(){return this.initSkyBox("assets/textures/environmentMaps/skyboxsun25deg/"),this.initMirrorMap("assets/textures/environmentMaps/skyboxsun25deg/"),await this.loadScene(this._url),!0}addVideoObject(e){const t=e.getObjectByName("Video");if(t){const n=new pu(this._sceneManager,t,"assets/videos/demo.mp4");n.activate()}else console.warn(`There's no mesh called "Video" in the scene!`)}addHyperLinks(e){const t=e.getObjectByName("Hyperlink_httpswww360-boxcom"),n=new lo(this._sceneManager,t);n.eventDispatcher.addEventListener("click",()=>{window.open("https://www.360-box.com/")})}loadScene(e){return new Promise((t,n)=>{const i=new wt();i.setDecoderPath("assets/decoder/");const r=new fu();r.setDRACOLoader(i),r.load(e,s=>{const o=this.onLoad(s);t(!0);const a=this._user.position.clone();this._user.position.set(0,0,20),this._user.lookAt(0,0,0),this._renderer.render(this._sceneManager.scene,this._camera),requestAnimationFrame(()=>{this._user.position.copy(a),this._percentage.reset(this._percentage.start,this._percentage.max,null,null,.1),document.getElementById("loadingScreen").style.opacity="0",setTimeout(()=>{Na.removeElement(document.getElementById("loadingScreen")),this._isLoadFinished=!0,this.addVideoObject(o),this.addHyperLinks(o)},500)})},this.onProgress)})}get stairsCurve(){return this._stairsCurve}get intersectables(){return this._intersectables}}class gu{constructor(){this._frameCount=0,this._frameCountFromBeginning=0,this._elapsedTime=0,this._lastUpdate=0,this._interval=1e4}update(){if(this._elapsedTime=performance.now(),this._elapsedTime-this._lastUpdate>=this._interval){const e=Math.round(this._frameCount/(this._interval/1e3));console.log("FPS: "+e),this._lastUpdate=this._elapsedTime,this._frameCountFromBeginning+=this._frameCount,this._averageFPS=this._interval*(this._frameCountFromBeginning/this._elapsedTime),this._frameCount=0}else++this._frameCount}}class ti{}ti.MOUSE_MOVEMENT=1,ti.FPS=2;const Fv=nr();class Ua{constructor(e=!1){this.loadScene=async e=>{this._sceneLoader=new mu(this,e),await this._sceneLoader.init(),this.initControls(),this.addMeshes(),this._fpsMeter=new gu()};this.initFullScreenButton=()=>{};this.updateFullScreenButton=()=>{document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement?this._toggleFullScreen.classList.add("exitFullScreen"):this._toggleFullScreen.classList.remove("exitFullScreen")};this.deactivateAllControls=()=>{this._mouseMovementControls.deactivate()};this.onWindowResize=()=>{this._canvas.width=0,this._canvas.height=0;const e=window.innerWidth,t=window.innerHeight;this._camera.aspect=e/t,this._camera.updateProjectionMatrix(),this._renderer.setSize(e,t)};this.onContextLost=e=>{e.preventDefault(),alert("Unfortunately WebGL has crashed. Please reload the page to continue!")};this.update=e=>{Fv.update(),this._sceneLoader&&this._sceneLoader.update(),this._activeControls&&this._activeControls.update(),this._fpsMeter&&this._fpsMeter.update(),this._renderer.render(this._scene,this._camera)};this.animate=e=>{this._renderer.setAnimationLoop(this.update)};this._developerMode=e,this._canvas=document.getElementById("myCanvas"),this._scene=new Rs(),this._camera=new Je(60,window.innerWidth/window.innerHeight,.05,140),this._camera.rotation.set(0,Math.PI,0),this._container=new ge(),this._user=new At(),this._user.position.set(0,1.5,0),this._user.add(this._camera),this._user.rotation.set(0,Math.PI/2,0),this.initFullScreenButton(),this.initLights(),this.initRenderer(),this.onWindowResize(),this.loadScene("assets/models/booth.glb"),this.animate(0)}initLights(){const e=new $n(16777215,.8);e.position.set(.5,0,.866);const t=new qr(16777147,526368,.8);this._user.add(e,t)}addMeshes(){this._scene.add(this._container),this._scene.add(this._user)}initRenderer(){this._renderer=new Fi({antialias:!0,canvas:this._canvas}),this._renderer.setPixelRatio(window.devicePixelRatio),this._renderer.setClearColor(15530239),this._renderer.outputEncoding=cs,this._renderer.domElement.addEventListener("webglcontextlost",this.onContextLost),window.addEventListener("resize",this.onWindowResize)}initControls(){this._mouseMovementControls=new hu(this),this._FPSControls=new du(this),this._FPSControls.setWASDSpeed(.1),this._developerMode?this.switchCameraControls(ti.FPS):this.switchCameraControls(ti.MOUSE_MOVEMENT)}switchCameraControls(e){this.deactivateAllControls();switch(e){case ti.MOUSE_MOVEMENT:this._activeControls=this._mouseMovementControls;break;case ti.FPS:this._activeControls=this._FPSControls;break}this._activeControls.activate()}get user(){return this._user}get camera(){return this._camera}get renderer(){return this._renderer}get container(){return this._container}get scene(){return this._scene}get canvas(){return this._canvas}get stairsCurve(){return this._sceneLoader.stairsCurve}get intersectables(){return this._sceneLoader.intersectables}}class Ha{constructor(){}}ka();})();
